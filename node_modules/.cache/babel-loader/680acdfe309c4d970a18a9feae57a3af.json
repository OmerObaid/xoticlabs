{"ast":null,"code":"var _jsxFileName = \"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthenticationService } from \"../jwt/_services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => {\n    const currentUser = AuthenticationService.currentUserValue;\n\n    if (!currentUser) {\n      // not logged in so redirect to login page with the return url\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/authentication/Login\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    } // authorised so return component\n\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js"],"names":["React","Route","Redirect","AuthenticationService","PrivateRoute","component","Component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAE1B,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAMC,WAAW,GAAGN,qBAAqB,CAACO,gBAA1C;;AACA,QAAI,CAACD,WAAL,EAAkB;AAChB;AACA,0BACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAE,uBADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAZgB,CAcjB;;;AACA,wBAAO,QAAC,SAAD,OAAeN;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAlBH;AAAA;AAAA;AAAA;AAAA,QAFK;KAAMJ,Y;AAwBb,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthenticationService } from \"../jwt/_services\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const currentUser = AuthenticationService.currentUserValue;\r\n      if (!currentUser) {\r\n        // not logged in so redirect to login page with the return url\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/authentication/Login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        );\r\n      }\r\n\r\n      // authorised so return component\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}