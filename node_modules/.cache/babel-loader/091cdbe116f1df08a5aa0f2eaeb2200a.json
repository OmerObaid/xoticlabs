{"ast":null,"code":"import{AuthenticationService}from\"../_services\";export function AuthHeader(){// return authorization header with jwt token\nvar currentUser=AuthenticationService.currentUserValue;if(currentUser&&currentUser.token){return{Authorization:\"Bearer \".concat(currentUser.token)};}else{return{};}}","map":{"version":3,"sources":["/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js"],"names":["AuthenticationService","AuthHeader","currentUser","currentUserValue","token","Authorization"],"mappings":"AAAA,OAASA,qBAAT,KAAsC,cAAtC,CAEA,MAAO,SAASC,CAAAA,UAAT,EAAsB,CAC3B;AACA,GAAMC,CAAAA,WAAW,CAAGF,qBAAqB,CAACG,gBAA1C,CACA,GAAID,WAAW,EAAIA,WAAW,CAACE,KAA/B,CAAsC,CACpC,MAAO,CAAEC,aAAa,kBAAYH,WAAW,CAACE,KAAxB,CAAf,CAAP,CACD,CAFD,IAEO,CACL,MAAO,EAAP,CACD,CACF","sourcesContent":["import { AuthenticationService } from \"../_services\";\r\n\r\nexport function AuthHeader() {\r\n  // return authorization header with jwt token\r\n  const currentUser = AuthenticationService.currentUserValue;\r\n  if (currentUser && currentUser.token) {\r\n    return { Authorization: `Bearer ${currentUser.token}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}