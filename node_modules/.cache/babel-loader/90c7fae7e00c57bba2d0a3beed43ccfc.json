{"ast":null,"code":"var _jsxFileName = \"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { FormDataHelper } from '../../jwt/_helpers/FormDataHelper';\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BehaviorSubject } from \"rxjs\";\nimport logoImage from \"../../assets/images/xotic-logo.png\";\nimport bannerImage from \"../../assets/images/login-Banner.png\";\nimport { CLIENT_LOGIN } from \"../../jwt/_services/axiousURL\";\nimport { PROJECT_NAME } from \"../constants\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"currentUser\")));\n\nconst Login = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyClone\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"loginPage\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"loginBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoImage,\n              alt: \"logo\",\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Log into Xotic Labs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                email: \"client@xoticlabs.com\",\n                password: \"123\"\n              },\n              validationSchema: Yup.object().shape({\n                email: Yup.string().required(\"Email is required\"),\n                password: Yup.string().required(\"Password is required\")\n              }),\n              onSubmit: ({\n                email,\n                password\n              }, {\n                setStatus,\n                setSubmitting\n              }) => {\n                setStatus();\n                /*\n                var formData = FormDataHelper();\n                formData.append('email_address', email);\n                formData.append('password', password);\n                 GeneralServices.postRequest(formData, CLIENT_LOGIN).then(\n                    (successResponse) => {\n                        const user = successResponse.data[0];\n                        localStorage.setItem(\"currentUser\", JSON.stringify(user));\n                        currentUserSubject.next(user);\n                         const { from } = props.location.state || {\n                            from: { pathname: \"/\" },\n                        };\n                        props.history.push(from);\n                    },\n                    (error) => {\n                        setSubmitting(false);\n                        setStatus(error);\n                    }\n                );*/\n                // AuthenticationService.login(email, password).then(\n                //     (user) => {\n                //         const { from } = props.location.state || {\n                //             from: { pathname: \"/\" },\n                //         };\n                //         console.log(props.location);\n                //         console.log(from);\n                //         props.history.push(from);\n                //     },\n                //     (error) => {\n                //         // console.log(error);\n                //         setSubmitting(false);\n                //         setStatus(error);\n                //     }\n                // );\n              },\n              render: ({\n                errors,\n                status,\n                touched,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [status && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-danger\",\n                  children: status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inputFields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"email\",\n                    id: \"email\",\n                    type: \"text\",\n                    placeholder: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    component: \"div\",\n                    className: \"invalid-feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inputFields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: \"Forgot your password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    id: \"password\",\n                    type: \"password\",\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    component: \"div\",\n                    className: \"invalid-feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: isSubmitting,\n                  children: \"LOG IN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ct-signUp\",\n                  children: [\"Don\\u2019t have an account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/Signup`,\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 89\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"copyright\",\n              children: [\"Copyright \\xA9 \", new Date().getFullYear(), \" \", PROJECT_NAME]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: bannerImage,\n            alt: \"logo\",\n            className: \"bg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js"],"names":["React","Yup","Formik","Field","Form","ErrorMessage","Link","FormDataHelper","GeneralServices","BehaviorSubject","logoImage","bannerImage","CLIENT_LOGIN","PROJECT_NAME","AuthenticationService","currentUserSubject","JSON","parse","localStorage","getItem","Login","props","email","password","object","shape","string","required","setStatus","setSubmitting","errors","status","touched","isSubmitting","Date","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,eAAT,QAAgC,MAAhC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;AAGA,MAAMC,kBAAkB,GAAG,IAAIN,eAAJ,CACvBO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADuB,CAA3B;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBAAO;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BACI;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEX,SAAV;AAAqB,cAAA,GAAG,EAAC,MAAzB;AAAgC,cAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,MAAD;AAEI,cAAA,aAAa,EAAE;AACXY,gBAAAA,KAAK,EAAE,sBADI;AAEXC,gBAAAA,QAAQ,EAAE;AAFC,eAFnB;AAMI,cAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,KAAb,CAAmB;AACjCH,gBAAAA,KAAK,EAAErB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD0B;AAEjCJ,gBAAAA,QAAQ,EAAEtB,GAAG,CAACyB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFuB,eAAnB,CANtB;AAUI,cAAA,QAAQ,EAAE,CACN;AAAEL,gBAAAA,KAAF;AAASC,gBAAAA;AAAT,eADM,EAEN;AAAEK,gBAAAA,SAAF;AAAaC,gBAAAA;AAAb,eAFM,KAGL;AACDD,gBAAAA,SAAS;AACT;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIgC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,eArDL;AAuDI,cAAA,MAAM,EAAE,CAAC;AAAEE,gBAAAA,MAAF;AAAUC,gBAAAA,MAAV;AAAkBC,gBAAAA,OAAlB;AAA2BC,gBAAAA;AAA3B,eAAD,kBACJ,QAAC,IAAD;AAAA,2BAEKF,MAAM,iBACH;AAAK,kBAAA,SAAS,EAAE,oBAAhB;AAAA,4BAAuCA;AAAvC;AAAA;AAAA;AAAA;AAAA,wBAHR,eAMI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,2CACI;AAAO,sBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAC,OAAZ;AAAoB,oBAAA,EAAE,EAAC,OAAvB;AAA+B,oBAAA,IAAI,EAAC,MAApC;AAA2C,oBAAA,WAAW,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,YAAD;AACI,oBAAA,IAAI,EAAC,OADT;AAEI,oBAAA,SAAS,EAAC,KAFd;AAGI,oBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAiBI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACI;AAAO,sBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAKI,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAC,UAAZ;AAAuB,oBAAA,EAAE,EAAC,UAA1B;AAAqC,oBAAA,IAAI,EAAC,UAA1C;AAAqD,oBAAA,WAAW,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI,QAAC,YAAD;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,SAAS,EAAC,KAFd;AAGI,oBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBJ,eA6BI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,QAAQ,EAAEE,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA7BJ,eA8BI;AAAG,kBAAA,SAAS,EAAC,WAAb;AAAA,8EAAoD,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAG,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAApD;AAAA;AAAA;AAAA;AAAA;AAAA,wBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAxDR;AAAA;AAAA;AAAA;AAAA,oBAHJ,eA8FI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,4CAAsC,IAAIC,IAAJ,GAAWC,WAAX,EAAtC,OAAiEtB,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9FJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiGI;AAAK,YAAA,GAAG,EAAEF,WAAV;AAAuB,YAAA,GAAG,EAAC,MAA3B;AAAkC,YAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAjGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAyGH,CA1GD;;KAAMS,K;AA4GN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { FormDataHelper } from '../../jwt/_helpers/FormDataHelper';\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BehaviorSubject } from \"rxjs\";\n\nimport logoImage from \"../../assets/images/xotic-logo.png\";\nimport bannerImage from \"../../assets/images/login-Banner.png\";\nimport { CLIENT_LOGIN } from \"../../jwt/_services/axiousURL\";\nimport { PROJECT_NAME } from \"../constants\";\nimport { AuthenticationService } from \"../../jwt/_services\";\n\n\nconst currentUserSubject = new BehaviorSubject(\n    JSON.parse(localStorage.getItem(\"currentUser\"))\n);\n\nconst Login = (props) => {\n    return <>\n        <div className=\"bodyClone\">\n            <main className=\"loginPage\">\n                <section className=\"loginBody\">\n                    <div className=\"loginForm\">\n                        <img src={logoImage} alt=\"logo\" className=\"logo\" />\n                        <h1>Log into Xotic Labs</h1>\n                        <Formik\n\n                            initialValues={{\n                                email: \"client@xoticlabs.com\",\n                                password: \"123\",\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string().required(\"Email is required\"),\n                                password: Yup.string().required(\"Password is required\"),\n                            })}\n                            onSubmit={(\n                                { email, password },\n                                { setStatus, setSubmitting }\n                            ) => {\n                                setStatus();\n                                /*\n                                var formData = FormDataHelper();\n                                formData.append('email_address', email);\n                                formData.append('password', password);\n\n                                GeneralServices.postRequest(formData, CLIENT_LOGIN).then(\n                                    (successResponse) => {\n                                        const user = successResponse.data[0];\n                                        localStorage.setItem(\"currentUser\", JSON.stringify(user));\n                                        currentUserSubject.next(user);\n\n                                        const { from } = props.location.state || {\n                                            from: { pathname: \"/\" },\n                                        };\n                                        props.history.push(from);\n                                    },\n                                    (error) => {\n                                        setSubmitting(false);\n                                        setStatus(error);\n                                    }\n                                );*/\n\n                                // AuthenticationService.login(email, password).then(\n                                //     (user) => {\n                                //         const { from } = props.location.state || {\n                                //             from: { pathname: \"/\" },\n                                //         };\n                                //         console.log(props.location);\n                                //         console.log(from);\n                                //         props.history.push(from);\n\n                                //     },\n                                //     (error) => {\n                                //         // console.log(error);\n                                //         setSubmitting(false);\n                                //         setStatus(error);\n                                //     }\n                                // );\n                            }}\n\n                            render={({ errors, status, touched, isSubmitting }) => (\n                                <Form>\n\n                                    {status && (\n                                        <div className={\"alert alert-danger\"}>{status}</div>\n                                    )}\n\n                                    <div className=\"inputFields\">\n                                        <div className=\"label\">\n                                            <label htmlFor=\"email\">Email address</label>\n                                        </div>\n                                        <Field name=\"email\" id=\"email\" type=\"text\" placeholder=\"Email\" />\n                                        <ErrorMessage\n                                            name=\"email\"\n                                            component=\"div\"\n                                            className=\"invalid-feedback\"\n                                        />\n                                    </div>\n                                    <div className=\"inputFields\">\n                                        <div className=\"label\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <a href=\"#\">Forgot your password?</a>\n                                        </div>\n                                        <Field name=\"password\" id=\"password\" type=\"password\" placeholder=\"Password\" />\n                                        <ErrorMessage\n                                            name=\"password\"\n                                            component=\"div\"\n                                            className=\"invalid-feedback\"\n                                        />\n                                    </div>\n                                    <button type=\"submit\" disabled={isSubmitting}>LOG IN</button>\n                                    <p className=\"ct-signUp\">Don’t have an account yet? <Link to={`/Signup`}>Sign Up</Link></p>\n\n                                </Form>\n                            )}\n                        />\n                        <p className=\"copyright\">Copyright © {new Date().getFullYear()} {PROJECT_NAME}</p>\n                    </div>\n                    <img src={bannerImage} alt=\"logo\" className=\"bg-img\" />\n                </section>\n            </main>\n        </div>\n    </>\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}