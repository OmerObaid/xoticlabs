[{"/Users/omerobaid/Projects/react-projects/xotic-labs/src/index.js":"1","/Users/omerobaid/Projects/react-projects/xotic-labs/src/App.js":"2","/Users/omerobaid/Projects/react-projects/xotic-labs/src/reportWebVitals.js":"3","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/spinner/Spinner.js":"4","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js":"5","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/index.js":"6","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Store.js":"7","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/BlankLayout.js":"8","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/FullLayout.js":"9","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/AuthRoutes.js":"10","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/index.js":"11","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Reducers.js":"12","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/Router.js":"13","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/index.js":"14","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/Header.js":"15","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/sidebar/Sidebar.js":"16","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/HandleResponse.js":"17","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/footer/Footer.js":"18","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js":"19","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/History.js":"20","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Reducer.js":"21","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/Authentication.service.js":"22","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/constants/index.js":"23","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiousURL.js":"24","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiosConfig.js":"25","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js":"26","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/General.services.js":"27","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/FormDataHelper.js":"28","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/SignUp.js":"29","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/404.js":"30","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/BrandsListing.js":"31","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/constants/index.js":"32","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Reducer.js":"33","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Action.js":"34","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Action.js":"35","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/headerBrandListing.js":"36","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/createNewBrand.js":"37","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/colorBox.js":"38","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/attachmentGuidlines.js":"39","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/hashLoadSpinner.js":"40","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/brand.js":"41","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/activeProjects.js":"42","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/completedProjects.js":"43","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/activeProjectOptionMenu.js":"44","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/queueProjectOptionMenu.js":"45","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/moveProject.js":"46","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/optionMenuHelper.js":"47"},{"size":717,"mtime":1631118246293,"results":"48","hashOfConfig":"49"},{"size":1182,"mtime":1631122260387,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1629134270320,"results":"51","hashOfConfig":"49"},{"size":421,"mtime":1629137106026,"results":"52","hashOfConfig":"49"},{"size":771,"mtime":1630146448685,"results":"53","hashOfConfig":"49"},{"size":426,"mtime":1630087226484,"results":"54","hashOfConfig":"49"},{"size":817,"mtime":1631122051897,"results":"55","hashOfConfig":"49"},{"size":636,"mtime":1631199665669,"results":"56","hashOfConfig":"49"},{"size":2582,"mtime":1631199659554,"results":"57","hashOfConfig":"49"},{"size":1761,"mtime":1630087128536,"results":"58","hashOfConfig":"49"},{"size":129,"mtime":1629215307943,"results":"59","hashOfConfig":"49"},{"size":244,"mtime":1631120309006,"results":"60","hashOfConfig":"49"},{"size":589,"mtime":1630936583180,"results":"61","hashOfConfig":"49"},{"size":80,"mtime":1629137297465,"results":"62","hashOfConfig":"49"},{"size":3710,"mtime":1631207503563,"results":"63","hashOfConfig":"49"},{"size":9913,"mtime":1629137341677,"results":"64","hashOfConfig":"49"},{"size":591,"mtime":1629137253717,"results":"65","hashOfConfig":"49"},{"size":447,"mtime":1629995996968,"results":"66","hashOfConfig":"49"},{"size":342,"mtime":1629137253712,"results":"67","hashOfConfig":"49"},{"size":116,"mtime":1630085211702,"results":"68","hashOfConfig":"49"},{"size":1562,"mtime":1630103311081,"results":"69","hashOfConfig":"49"},{"size":1391,"mtime":1631116617873,"results":"70","hashOfConfig":"49"},{"size":2445,"mtime":1630068364370,"results":"71","hashOfConfig":"49"},{"size":564,"mtime":1631123280682,"results":"72","hashOfConfig":"49"},{"size":158,"mtime":1630944807188,"results":"73","hashOfConfig":"49"},{"size":3996,"mtime":1631199670747,"results":"74","hashOfConfig":"49"},{"size":539,"mtime":1629900400913,"results":"75","hashOfConfig":"49"},{"size":315,"mtime":1629137253716,"results":"76","hashOfConfig":"49"},{"size":127,"mtime":1629735400806,"results":"77","hashOfConfig":"49"},{"size":119,"mtime":1629738343776,"results":"78","hashOfConfig":"49"},{"size":5622,"mtime":1631207667665,"results":"79","hashOfConfig":"49"},{"size":268,"mtime":1631203601289,"results":"80","hashOfConfig":"49"},{"size":520,"mtime":1630929115961,"results":"81","hashOfConfig":"49"},{"size":276,"mtime":1630102595968,"results":"82","hashOfConfig":"49"},{"size":1195,"mtime":1630103239406,"results":"83","hashOfConfig":"49"},{"size":834,"mtime":1631207547358,"results":"84","hashOfConfig":"49"},{"size":19325,"mtime":1631199408093,"results":"85","hashOfConfig":"49"},{"size":2109,"mtime":1630677371325,"results":"86","hashOfConfig":"49"},{"size":1577,"mtime":1631199403968,"results":"87","hashOfConfig":"49"},{"size":480,"mtime":1631124141120,"results":"88","hashOfConfig":"49"},{"size":2464,"mtime":1631110094652,"results":"89","hashOfConfig":"49"},{"size":6060,"mtime":1631207508101,"results":"90","hashOfConfig":"49"},{"size":3425,"mtime":1631206693559,"results":"91","hashOfConfig":"49"},{"size":1895,"mtime":1631203820926,"results":"92","hashOfConfig":"49"},{"size":1477,"mtime":1631203472189,"results":"93","hashOfConfig":"49"},{"size":3004,"mtime":1631199679759,"results":"94","hashOfConfig":"49"},{"size":1619,"mtime":1631203629448,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"r3f74b",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/omerobaid/Projects/react-projects/xotic-labs/src/index.js",[],["205","206"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/App.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/reportWebVitals.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/spinner/Spinner.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Store.js",["207"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport Reducers from \"./Reducers\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n// export function configureStore(InitialState) {\r\n//   const Store = createStore(\r\n//     Reducers,\r\n//     InitialState,\r\n//     composeWithDevTools(applyMiddleware(thunk))\r\n//   );\r\n//   return Store;\r\n// }\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducers)\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor};","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/BlankLayout.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/FullLayout.js",["208"],"import React, { Suspense } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"./layout-components/header/Header\";\r\nimport Footer from \"./layout-components/footer/Footer\";\r\nimport ThemeRoutes from \"../routes/Router\";\r\nimport Spinner from \"./../views/spinner/Spinner\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"bodyClone\">\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Header                                                                         */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Header {...props} />\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Sidebar                                                                        */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* <Sidebar {...props} routes={ThemeRoutes} /> */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Page Main-Content                                                              */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n\r\n      <Suspense fallback={<Spinner />}>\r\n        <Switch>\r\n          {ThemeRoutes.map((prop, key) => {\r\n            if (prop.navlabel) {\r\n              return null;\r\n            } else if (prop.collapse) {\r\n              return prop.child.map((prop2, key2) => {\r\n                if (prop2.collapse) {\r\n                  return prop2.subchild.map((prop3, key3) => {\r\n                    return (\r\n                      <Route\r\n                        path={prop3.path}\r\n                        component={prop3.component}\r\n                        key={key3}\r\n                      />\r\n                    );\r\n                  });\r\n                }\r\n                return (\r\n                  <Route\r\n                    path={prop2.path}\r\n                    component={prop2.component}\r\n                    key={key2}\r\n                  />\r\n                );\r\n              });\r\n            } else if (prop.redirect) {\r\n              return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\r\n            } else {\r\n              return (\r\n                <Route path={prop.path} component={prop.component} key={key} />\r\n              );\r\n            }\r\n          })}\r\n        </Switch>\r\n      </Suspense>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/AuthRoutes.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Reducers.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/Router.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/Header.js",["209","210","211"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AuthenticationService } from \"../../../jwt/_services\";\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n/* Import images which are need for the HEADER                                    */\r\n/*--------------------------------------------------------------------------------*/\r\nimport bellIcon from \"../../../assets/images/header-icons/bell.png\";\r\nimport downArrow from \"../../../assets/images/header-icons/down-arrow.png\";\r\nimport projectBoardIcon from \"../../../assets/images/header-icons/projectBoard icon.png\";\r\nimport brandsIcon from \"../../../assets/images/header-icons/brands icon.png\";\r\nimport dummyProfileIcon from \"../../../assets/images/header-icons/dummy-profile-icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderBrandListing from \"../../../components/headerBrandListing\";\r\n\r\nexport default (props) => {\r\n  const userName =\r\n    AuthenticationService.currentUserValue.first_name +\r\n    \" \" +\r\n    AuthenticationService.currentUserValue.last_name;\r\n  const headerSettings = useSelector((state) => state.headerSettings);\r\n  const [showBrandList, setShowBrandList] = useState(false);\r\n\r\n  const getActiveBrand = () => {\r\n    var brand = headerSettings.brandList.find((brand) => {\r\n      return brand.brand_id == headerSettings.activeBrandId;\r\n    });\r\n    if (!brand) brand = headerSettings.brandList[0];\r\n\r\n    return { brandName: brand.title, brandImage: brand.logo };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <main className=\"cont\">\r\n          <div className=\"logo\">\r\n            <img src={getActiveBrand().brandImage} alt=\"logo\" />\r\n          </div>\r\n          <ul>\r\n            {headerSettings.brandList.length > 0 && (\r\n              <li\r\n                className=\"headerBrandList\"\r\n                onClick={() => {\r\n                  setShowBrandList(!showBrandList);\r\n                }}\r\n              >\r\n                <h3>{getActiveBrand().brandName}</h3>\r\n                <img className=\"icon-img\" src={downArrow} alt=\"down-arrow\" />\r\n                {showBrandList && (\r\n                  <HeaderBrandListing\r\n                    brands={headerSettings.brandList}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              </li>\r\n            )}\r\n\r\n            <li>\r\n              <a href=\"#\">\r\n                <img\r\n                  className=\"icon-img\"\r\n                  src={projectBoardIcon}\r\n                  alt=\"projectBoard\"\r\n                />\r\n                <span>Project Board</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"mr-a\">\r\n              <Link to=\"/brands\">\r\n                <img className=\"icon-img\" src={brandsIcon} alt=\"brands\" />\r\n                <span>Brands</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <button>Outsourcer plan</button>\r\n            </li>\r\n            <li>\r\n              <img className=\"icon-img-bel\" src={bellIcon} alt=\"bell icon\" />\r\n            </li>\r\n            <li>\r\n              <img src={dummyProfileIcon} alt=\"profile\" />\r\n              <strong>{userName}</strong>\r\n              <img src={downArrow} alt=\"down-arrow\" />\r\n              <ul className=\"dropList\">\r\n                <li>Action</li>\r\n                <li>Another Action</li>\r\n                <li>Action Again</li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n          <div className=\"burger\">\r\n            <div className=\"line l1\"></div>\r\n            <div className=\"line l2\"></div>\r\n            <div className=\"line l3\"></div>\r\n          </div>\r\n        </main>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/sidebar/Sidebar.js",[],["212","213"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/HandleResponse.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/footer/Footer.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/History.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Reducer.js",["214"],"import {\r\n  LOGO_BG,\r\n  NAVBAR_BG,\r\n  SIDEBAR_BG,\r\n  THEME,\r\n  DIRECTION,\r\n  SIDEBAR_POSITION,\r\n  HEADER_POSITION,\r\n  LAYOUT,\r\n  SIDEBAR_TYPE,\r\n} from \"../constants/\";\r\n\r\nconst INIT_STATE = {\r\n  activeDir: \"ltr\",\r\n  activeThemeLayout: \"vertical\",\r\n  activeTheme: \"light\",\r\n  activeSidebarType: \"full\",\r\n  activeLogoBg: \"skin6\",\r\n  activeNavbarBg: \"skin6\",\r\n  activeSidebarBg: \"skin5\",\r\n  activeSidebarPos: \"fixed\",\r\n  activeHeaderPos: \"fixed\",\r\n  activeLayout: \"full\",\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGO_BG:\r\n      return {\r\n        ...state,\r\n        activeLogoBg: action.payload,\r\n      };\r\n    case NAVBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeNavbarBg: action.payload,\r\n      };\r\n    case SIDEBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeSidebarBg: action.payload,\r\n      };\r\n    case THEME:\r\n      return {\r\n        ...state,\r\n        activeTheme: action.payload,\r\n      };\r\n    case DIRECTION:\r\n      return {\r\n        ...state,\r\n        activeDir: action.payload,\r\n      };\r\n    case SIDEBAR_POSITION:\r\n      return {\r\n        ...state,\r\n        activeSidebarPos: action.payload,\r\n      };\r\n    case HEADER_POSITION:\r\n      return {\r\n        ...state,\r\n        activeHeaderPos: action.payload,\r\n      };\r\n    case LAYOUT:\r\n      return {\r\n        ...state,\r\n        activeLayout: action.payload,\r\n      };\r\n    case SIDEBAR_TYPE:\r\n      return {\r\n        ...state,\r\n        activeSidebarType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/Authentication.service.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/constants/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiousURL.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiosConfig.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js",["215"],"import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nimport logoImage from \"../../assets/images/xotic-logo.png\";\nimport bannerImage from \"../../assets/images/login-Banner.png\";\nimport { PROJECT_NAME } from \"../constants\";\nimport { AuthenticationService } from \"../../jwt/_services\";\n\nconst Login = (props) => {\n  return (\n    <>\n      <div className=\"bodyClone\">\n        <main className=\"loginPage\">\n          <section className=\"loginBody\">\n            <div className=\"loginForm\">\n              <img src={logoImage} alt=\"logo\" className=\"logo\" />\n              <h1>Log into Xotic Labs</h1>\n              <Formik\n                initialValues={{\n                  email: \"client@xoticlabs.com\",\n                  password: \"123\",\n                }}\n                validationSchema={Yup.object().shape({\n                  email: Yup.string().required(\"Email is required\"),\n                  password: Yup.string().required(\"Password is required\"),\n                })}\n                onSubmit={(\n                  { email, password },\n                  { setStatus, setSubmitting }\n                ) => {\n                  setStatus();\n                  AuthenticationService.login(email, password).then(\n                    (user) => {\n                      const { from } = props.location.state || {\n                        from: { pathname: \"/\" },\n                      };\n                      props.history.push(from);\n                    },\n                    (error) => {\n                      // console.log(error);\n                      setSubmitting(false);\n                      setStatus(error);\n                    }\n                  );\n                }}\n                render={({ errors, status, touched, isSubmitting }) => (\n                  <Form>\n                    {status && (\n                      <div className={\"alert alert-danger\"}>{status}</div>\n                    )}\n\n                    <div className=\"inputFields\">\n                      <div className=\"label\">\n                        <label htmlFor=\"email\">Email address</label>\n                      </div>\n                      <Field\n                        name=\"email\"\n                        id=\"email\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                      />\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"inputFields\">\n                      <div className=\"label\">\n                        <label htmlFor=\"password\">Password</label>\n                        <a href=\"#\">Forgot your password?</a>\n                      </div>\n                      <Field\n                        name=\"password\"\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                      />\n                      <ErrorMessage\n                        name=\"password\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                      LOG IN\n                    </button>\n                    <p className=\"ct-signUp\">\n                      Don’t have an account yet?{\" \"}\n                      <Link to={`/Signup`}>Sign Up</Link>\n                    </p>\n                  </Form>\n                )}\n              />\n              <p className=\"copyright\">\n                Copyright © {new Date().getFullYear()} {PROJECT_NAME}\n              </p>\n            </div>\n            <img src={bannerImage} alt=\"logo\" className=\"bg-img\" />\n          </section>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/General.services.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/FormDataHelper.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/SignUp.js",[],["216","217"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/404.js",[],["218","219"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/BrandsListing.js",["220","221"],"import React from \"react\";\n\nimport activeBrandFolderIcon from \"../../assets/images/active-brand-icon.png\";\nimport brandFolderIcon from \"../../assets/images/brand-icon.png\";\nimport gearIcon from \"../../assets/images/gear.png\";\n\nimport editIcon from \"../../assets/images/brand-listing-icon/icon Edit project.png\";\nimport deleteIcon from \"../../assets/images/brand-listing-icon/icon Delete project.png\";\n\nimport { BRAND_PAGE_TITLE } from \"../constants\";\nimport { useEffect, useState } from \"react\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { BRANDS_LISTING, BRAND_DELETE } from \"../../jwt/_services/axiousURL\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setActiveBrandId,\n  setBrandList,\n} from \"../../redux/headerSettings/Action\";\n\nimport swal from \"sweetalert\";\nimport CreateNewBrand from \"../../components/brand/createNewBrand\";\n\nconst BrandsListing = (props) => {\n  const clientId = AuthenticationService.currentUserValue.id;\n  const [brands, setBrands] = useState([]);\n  const [showCreateNewBrand, setShowCreateNewBrand] = useState(false);\n  const dispatch = useDispatch();\n  const headerSettings = useSelector((state) => state.headerSettings);\n\n  useEffect(() => {\n    fetchBrands();\n    document.title = BRAND_PAGE_TITLE;\n  }, []);\n\n  const fetchBrands = () => {\n    var bodyHelper = FormDataHelper();\n    bodyHelper.append(\"client_id\", clientId);\n\n    GeneralServices.postRequest(bodyHelper, BRANDS_LISTING).then(\n      (successResponse) => {\n        setBrands(successResponse.data);\n        dispatch(setBrandList(successResponse.data));\n      },\n      (errorResponse) => {\n        console.log(\"brand listing error\", errorResponse);\n      }\n    );\n  };\n\n  const getTitle = (title) => {\n    var length = 5;\n    if (title == null) return \"\";\n    if (title.length <= length) return title;\n\n    title = title.substring(0, length);\n    return title + \" ...\";\n  };\n\n  const closeCreateNewBrandOverlay = (callFetchBrands = false) => {\n    setShowCreateNewBrand(false);\n    if (callFetchBrands) fetchBrands();\n  };\n\n  const deleteProject = (brandId) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        var helper = FormDataHelper();\n        helper.append(\"brand_id\", brandId);\n        GeneralServices.postRequest(helper, BRAND_DELETE).then(\n          (successResponse) => {\n            swal(\"Brand added successfully!\", {\n              icon: \"success\",\n            });\n            fetchBrands();\n          },\n          (errorResponse) => {\n            console.log(\"failed to delete the brand\");\n          }\n        );\n      } else {\n        console.log(\"User oppted to not delete the brand\");\n      }\n    });\n  };\n\n  const handleBrandClicked = (brandId) => {\n    dispatch(setActiveBrandId(brandId));\n    const { from } = props.location.state || {\n      from: { pathname: `/brand/${brandId}` },\n    };\n    console.log(from);\n    props.history.push(from);\n  };\n\n  return (\n    <>\n      <section className=\"blp\">\n        <main className=\"cont\">\n          <div className=\"pageHead\">\n            <h1>Brands</h1>\n            <button onClick={() => setShowCreateNewBrand(true)}>\n              + Create brand\n            </button>\n          </div>\n\n          {showCreateNewBrand && (\n            <CreateNewBrand crossButtonCallBack={closeCreateNewBrandOverlay} />\n          )}\n\n          <div className=\"brandsBody\">\n            <h4>\n              Brands <span>({brands.length})</span>\n            </h4>\n            <div className=\"brandsList\">\n              {brands.map((brand, key) => {\n                return (\n                  <div className=\"brandsList_single\" key={key}>\n                    <div className=\"brandsList_head\">\n                      <div\n                        onClick={() => handleBrandClicked(brand.brand_id)}\n                        className=\"brandsList_left\"\n                      >\n                        <img\n                          src={\n                            brand.brand_id == headerSettings.activeBrandId\n                              ? activeBrandFolderIcon\n                              : brandFolderIcon\n                          }\n                          alt=\"brand-icon\"\n                        />\n                        <h3>{getTitle(brand.title)}</h3>\n                      </div>\n                      <button className=\"option\">\n                        <img src={gearIcon} alt=\"gear-icon\" />{\" \"}\n                        <span>Options</span>\n                        <ul className=\"optionMenu\">\n                          <h3>Options</h3>\n                          <li>\n                            <img src={editIcon} alt=\"\" />\n                            Edit Brand\n                          </li>\n                          <li onClick={() => deleteProject(brand.brand_id)}>\n                            <img src={deleteIcon} alt=\"\" />\n                            Delete Brand\n                          </li>\n                        </ul>\n                      </button>\n                    </div>\n                    <p className=\"brandsList-p\">\n                      Used in {brand.used_id} projects\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default BrandsListing;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/constants/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Reducer.js",["222"],"\nimport { ACTIVE_BRAND, BRAND_LIST } from \"../constants\";\n\nconst INIT_STATE = {\n    activeBrandId: '0',\n    brandList: [],\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case ACTIVE_BRAND:\n            return {\n                ...state,\n                activeBrandId: action.payload,\n            };\n        case BRAND_LIST:\n            return {\n                ...state,\n                brandList: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Action.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Action.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/headerBrandListing.js",["223"],"import { useDispatch } from \"react-redux\";\nimport { setActiveBrandId } from \"../redux/headerSettings/Action\";\n\nconst HeaderBrandListing = ({ brands, ...props }) => {\n  const dispatch = useDispatch();\n\n  const setActiveBrand = (brandId) => {\n    dispatch(setActiveBrandId(brandId));\n\n    const { from } = {\n      from: { pathname: `/brand/${brandId}` },\n    };\n\n    props.history.push(from);\n  };\n\n  return (\n    <>\n      <ul className=\"dropList active\">\n        {brands.map((brand, key) => {\n          return (\n            <li key={key}>\n              <a\n                onClick={() => setActiveBrand(brand.brand_id)}\n                className=\"headerBrandList\"\n              >\n                {brand.title}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default HeaderBrandListing;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/createNewBrand.js",["224"],"import crossSignIcon from \"../../assets/images/new-brand-icons/cross-sign.png\";\nimport uploadIcon from \"../../assets/images/new-brand-icons/upload.png\";\nimport addNewColorIcon from \"../../assets/images/new-brand-icons/add new color.png\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nimport * as Yup from \"yup\";\nimport ColorBox from \"../colorBox\";\nimport { useState, useEffect } from \"react\";\nimport AttachmentGuidlines from \"./attachmentGuidlines\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BRAND_ADD, INDUSTRIES_LISTING } from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\n\nconst CreateNewBrand = ({ crossButtonCallBack }) => {\n    const clientId = AuthenticationService.currentUserValue.id;\n\n    const [colors, setColors] = useState([]);\n    const [showColorBox, setShowColorBox] = useState(false);\n    const [sohwLogoFileSelected, setSohwLogoFileSelected] = useState(false);\n    const [showGuideFileSelected, setShowGuideFileSelected] = useState(false);\n    const [showAttachmentFileSelected, setShowAttachmentFileSelected] =\n        useState(false);\n    const [attachmentCount, setAttachmentCount] = useState(0);\n    const [industries, setIndustries] = useState([]);\n\n    const closeColorBoxCallBack = ({ color }) => {\n        setShowColorBox(false);\n        if (!color) return;\n        setColors([...colors, color.hex]);\n    };\n\n    const removeColor = (index) => {\n        colors.splice(index, 1);\n        setColors([...colors]);\n    };\n\n    const fetchIndustries = () => {\n        var helper = FormDataHelper();\n        GeneralServices.postRequest(helper, INDUSTRIES_LISTING).then(\n            (successResponse) => {\n                setIndustries(successResponse.data);\n            },\n            (errorResponse) => {\n                console.log(\"Failed to log industries\");\n            }\n        );\n    };\n\n    useEffect(() => {\n        fetchIndustries();\n    }, []);\n\n    return (\n        <>\n            <div className=\"cnp createNew-overLay active\">\n                <main>\n                    <img\n                        onClick={crossButtonCallBack}\n                        src={crossSignIcon}\n                        alt=\"cross\"\n                        className=\"cross\"\n                    />\n                    <h1 className=\"cnp-head\">Create a brand</h1>\n                    <p className=\"cnp-para\">\n                        A brands is a folder containing information and assets for anyone or\n                        anything that you need designs for regularly. Create a brand for\n                        clients, products, or use it to categorize and organize your design\n                        projects.\n                    </p>\n\n                    <Formik\n                        initialValues={{\n                            brandName: \"\",\n                            industry: \"\",\n                            description: \"\",\n                            website: \"\",\n                            logo: \"\",\n                        }}\n                        validationSchema={Yup.object().shape({\n                            brandName: Yup.string().required(\"Brand name is required\"),\n                            industry: Yup.number().required(\"Industry is required\"),\n                            description: Yup.string().min(1).max(150).required(),\n                            logo: Yup.mixed().required(\"logo is required\"),\n                        })}\n                        onSubmit={(values, actions) => {\n                            console.log(values);\n                            actions.setStatus();\n                            var helper = FormDataHelper();\n\n                            helper.append(\"client_id\", clientId);\n                            helper.append(\"title\", values.brandName);\n                            helper.append(\"industry_id\", values.industry);\n                            helper.append(\"description\", values.description);\n                            helper.append(\"website\", values.website);\n                            if (colors.length > 0) {\n                                helper.append(\"colors\", JSON.stringify(colors));\n                            }\n\n                            helper.append(\"logo\", values.logo);\n                            helper.append(\"guidelines\", values.guidelines);\n\n                            if (\n                                values.hasOwnProperty(\"attachments\") != \"\" &&\n                                values.attachments.length > 0\n                            ) {\n                                for (var imageFile of values.attachments) {\n                                    helper.append(\"attachments[]\", imageFile);\n                                }\n                            }\n\n                            GeneralServices.postRequest(helper, BRAND_ADD).then(\n                                (successResponse) => {\n                                    // console.log(successResponse);\n                                    // actions.setSubmitting(false);\n                                    swal(\"Brand has created!\", {\n                                        icon: \"success\",\n                                    });\n                                    crossButtonCallBack(true);\n                                },\n                                (error) => {\n                                    actions.setSubmitting(false);\n                                    actions.setStatus(error);\n                                }\n                            );\n                        }}\n                    >\n                        {({ errors, status, touched, isSubmitting, setFieldValue }) => (\n                            <Form>\n                                <div className=\"inputField\">\n                                    <label className=\"inputLabel required\" htmlFor=\"brandName\">\n                                        Brand name\n                                    </label>\n                                    <br />\n                                    <div className=\"inputDiv input\">\n                                        <Field type=\"text\" id=\"brandName\" name=\"brandName\" />\n                                    </div>\n                                    <ErrorMessage\n                                        name=\"logo\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n                                <div className=\"inputField\">\n                                    <label className=\"inputLabel required\" htmlFor=\"industry\">\n                                        Industry\n                                    </label>\n                                    <br />\n                                    <div className=\"inputDiv\">\n                                        <Field\n                                            as=\"select\"\n                                            className=\"input\"\n                                            id=\"industry\"\n                                            name=\"industry\"\n                                        >\n                                            <option value=\"\">Select a Industry</option>\n                                            {industries.map((industry) => {\n                                                return (\n                                                    <option key={industry.id} value={industry.id}>\n                                                        {industry.title}\n                                                    </option>\n                                                );\n                                            })}\n                                        </Field>\n                                    </div>\n                                    <ErrorMessage\n                                        name=\"industry\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n\n                                <div className=\"inputField description\">\n                                    <label htmlFor=\"#desc\" className=\"inputLabel required\">\n                                        Description\n                                    </label>\n\n                                    <p className=\"format-inst\">\n                                        Tell us about this brand. What product/service does it\n                                        provide? What’s special about it?\n                                    </p>\n                                    <CKEditor\n                                        editor={ClassicEditor}\n                                        config={{\n                                            removePlugins: [\n                                                \"ImageUpload\",\n                                                \"EasyImage\",\n                                                \"MediaEmbed\",\n                                                \"Link\",\n                                                \"CKFinder\",\n                                            ],\n                                        }}\n                                        data=\"<p>Insert your text here</p>\"\n                                        onReady={(editor) => {\n                                            // You can store the \"editor\" and use when it is needed.\n                                            console.log(\"Editor is ready to use!\", editor);\n                                        }}\n                                        onChange={(event, editor) => {\n                                            setFieldValue(\"description\", editor.getData());\n                                        }}\n                                    />\n\n                                    <ErrorMessage\n                                        name=\"description\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <h3 className=\"inputLabel brandGuide-head required\">\n                                        Brand Logo\n                                    </h3>\n                                    <p className=\"format-inst\">Upload your brand logo.</p>\n                                    <input\n                                        type=\"file\"\n                                        name=\"logo\"\n                                        id=\"logo\"\n                                        hidden\n                                        onChange={(event) => {\n                                            setFieldValue(\"logo\", event.currentTarget.files[0]);\n                                            setSohwLogoFileSelected(true);\n                                        }}\n                                        accept=\"image/png, image/gif, image/jpeg\"\n                                    />\n                                    <label htmlFor=\"logo\">\n                                        <img src={uploadIcon} alt=\"upload\" />\n                                        <span>Upload logo</span>\n                                        {sohwLogoFileSelected && (\n                                            <span style={{ color: \"#4ba893\" }}>\n                                                {\" \"}\n                                                1 file selected{\" \"}\n                                            </span>\n                                        )}\n                                    </label>\n                                    <ErrorMessage\n                                        name=\"logo\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n\n                                <div className=\"inputField\">\n                                    <label className=\"inputLabel\" htmlFor=\"website\">\n                                        Website\n                                    </label>\n                                    <br />\n                                    <div className=\"inputDiv\">\n                                        <Field\n                                            type=\"text\"\n                                            name=\"website\"\n                                            className=\"input\"\n                                            id=\"industry\"\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"inputField\">\n                                    <h3 className=\"inputLabel brandGuide-head\">\n                                        Brand guideline\n                                    </h3>\n                                    <p className=\"format-inst\">\n                                        Upload your existing brand guideline if you have one.\n                                    </p>\n                                    <input\n                                        type=\"file\"\n                                        name=\"guidelines\"\n                                        id=\"brandGuide\"\n                                        hidden\n                                        onChange={(event) => {\n                                            setFieldValue(\"guidelines\", event.currentTarget.files[0]);\n                                            setShowGuideFileSelected(true);\n                                        }}\n                                    />\n                                    <label htmlFor=\"brandGuide\">\n                                        <img src={uploadIcon} alt=\"upload\" />\n                                        <span>Upload guideline</span>\n                                        {showGuideFileSelected && (\n                                            <span style={{ color: \"#4ba893\" }}>\n                                                {\" \"}\n                                                1 file selected{\" \"}\n                                            </span>\n                                        )}\n                                    </label>\n                                </div>\n                                <div className=\"inputField\">\n                                    <h3 className=\"inputLabel\">Brand Colors</h3>\n                                    <div className=\"brandColors\">\n                                        <div\n                                            onClick={() => setShowColorBox(!showColorBox)}\n                                            className=\"brandColors_single createColor\"\n                                        >\n                                            <img src={addNewColorIcon} alt=\"add new color\" />\n                                        </div>\n                                        {colors.map((color, key) => {\n                                            const hStyle = { background: color };\n                                            return (\n                                                <div className=\"brandColors_single\" key={key}>\n                                                    <div className=\"color\" style={hStyle}></div>\n                                                    <span className=\"hex\">{color}</span>\n                                                    <button\n                                                        onClick={() => removeColor(key)}\n                                                        type=\"button\"\n                                                        className=\"remove\"\n                                                    >\n                                                        Remove\n                                                    </button>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                                {showColorBox && (\n                                    <ColorBox closeCallBack={closeColorBoxCallBack} />\n                                )}\n                                <div className=\"inputField\">\n                                    <p className=\"inputLabel\">Attachments</p>\n                                    <AttachmentGuidlines />\n                                    <div className=\"attach-cont\">\n                                        <input\n                                            type=\"file\"\n                                            name=\"attachments\"\n                                            id=\"atch\"\n                                            hidden\n                                            onChange={(event) => {\n                                                setFieldValue(\"attachments\", event.target.files);\n                                                setAttachmentCount(event.target.files.length);\n                                                setShowAttachmentFileSelected(true);\n                                            }}\n                                            multiple\n                                        />\n                                        <label htmlFor=\"atch\">\n                                            <img src={uploadIcon} alt=\"upload icon\" /> Upload files\n                                        </label>\n                                        <p>\n                                            Upload or drag & drop any images, files, or examples that\n                                            may be helpful explaining your project here.\n                                            {showAttachmentFileSelected && (\n                                                <span style={{ color: \"#4ba893\" }}>\n                                                    {\" \"}\n                                                    {`${attachmentCount} file(s) selected`}{\" \"}\n                                                </span>\n                                            )}\n                                        </p>\n                                    </div>\n                                </div>\n\n                                <button\n                                    type=\"submit\"\n                                    className=\"createBrandBtn\"\n                                    disabled={isSubmitting}\n                                >\n                                    Create brand\n                                </button>\n                            </Form>\n                        )}\n                    </Formik>\n                </main>\n            </div>\n        </>\n    );\n};\n\nexport default CreateNewBrand;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/colorBox.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/attachmentGuidlines.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/hashLoadSpinner.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/brand.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/activeProjects.js",["225","226","227"],"import waitingIcon from \"../../assets/images/brand-page-icons/waiting.png\";\nimport gearIcon from \"../../assets/images/gear.png\";\n\nimport { useState, useEffect } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  PROJECT_LISTING,\n  PROJECT_STATUS_UPDATE,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { useParams } from \"react-router\";\nimport ActiveProjectOptionMenu from \"../project/activeProjectOptionMenu\";\nimport QueueProjectOptionMenu from \"../project/queueProjectOptionMenu\";\nimport MoveProject from \"./moveProject\";\n\nconst ActiveProjects = ({ filterText, ...props }) => {\n  const { id } = useParams();\n\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n\n  const [queueProjects, setQueueProjects] = useState([]);\n  const [allQueueProjects, setAllQueueProjects] = useState([]);\n\n  const [showMoveToActiveOverlay, setShowMoveToActiveOverlay] = useState(false);\n  const [projectIdToMoveActive, setProjectIdToMoveActive] = useState(\"\");\n\n  const fetchProjects = (projectStatus) => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", id);\n    helper.append(\"status\", projectStatus);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        const projects = successResponse.data;\n        if (projectStatus === \"I\") {\n          setProjects(projects);\n          setAllProjects(projects);\n        } else {\n          setQueueProjects(projects);\n          setAllQueueProjects(projects);\n        }\n      },\n      (errorResponse) => {\n        if (projectStatus === \"I\") setProjects([]);\n        else setQueueProjects([]);\n      }\n    );\n  };\n\n  // Active Option Menu CallBack\n  // This function call when user mark project as complete\n  const updateProjectListingCallBack = () => {\n    fetchProjects(\"I\");\n    fetchProjects(\"Q\");\n  };\n\n  // Show Move and Switch overlay callback\n  // we get project id, on which project user tapped\n  // Queue ooption Menu\n  const showMoveToActiveOverlayCallBack = (projectId = \"\") => {\n    console.log(\"MOTHERFUCKER\", projectId);\n    setProjectIdToMoveActive(projectId);\n    setShowMoveToActiveOverlay(true);\n  };\n\n  // CallBack to close the Switch And Move Overlay\n  // Optional Param Projectid, If user select the project he wants to switch\n\n  const closeMoveToActiveOverlayCallBack = (projectId = \"\") => {\n    if (projectId !== \"\" && projectIdToMoveActive !== \"\") {\n      // update project status to active\n      updateProjectStatus(projectId, \"Q\");\n      updateProjectStatus(projectIdToMoveActive, \"I\");\n    }\n\n    setShowMoveToActiveOverlay(false);\n  };\n\n  const updateProjectStatus = (projectId, status) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"status\", status);\n\n    GeneralServices.postRequest(helper, PROJECT_STATUS_UPDATE).then(\n      (successResponse) => {\n        fetchProjects(\"I\");\n        fetchProjects(\"Q\");\n      },\n      (errorResponse) => {}\n    );\n  };\n\n  useEffect(() => {\n    fetchProjects(\"I\");\n    fetchProjects(\"Q\");\n  }, [id]);\n\n  useEffect(() => {\n    if (filterText == \"\") {\n      setProjects(allProjects);\n      setQueueProjects(allQueueProjects);\n    }\n\n    setProjects(\n      allProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n    setQueueProjects(\n      allQueueProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n  }, [filterText]);\n\n  return (\n    <>\n      <div className=\"brandsBody productsBody\">\n        <h4 className=\"productsBody_head\">\n          Active <span>({projects.length})</span>\n        </h4>\n        {projects.map((project) => {\n          return (\n            <div className=\"productList\" key={project.project_id}>\n              <div className=\"productList_single\">\n                <img\n                  className=\"productList_image\"\n                  src={project.project_logo}\n                  alt=\"\"\n                />\n                <div className=\"productList_details\">\n                  <div className=\"heading\">\n                    <h2>{project.title}</h2>\n                    <div className=\"inProg\">\n                      <span>In Progress</span> <img src={waitingIcon} alt=\"\" />\n                    </div>\n                  </div>\n                  <img\n                    src=\"./images/project person.png\"\n                    alt=\"\"\n                    className=\"person\"\n                  />\n                </div>\n                <button className=\"option\">\n                  <img src={gearIcon} alt=\"\" /> <span>Options</span>\n                  <ActiveProjectOptionMenu\n                    projectId={project.project_id}\n                    updateProjects={updateProjectListingCallBack}\n                  />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        <h4 className=\"productsBody_head\">\n          Queue <span>({queueProjects.length})</span>\n        </h4>\n        {queueProjects.map((project) => {\n          return (\n            <div className=\"productList_single\" key={project.project_id}>\n              <div className=\"productList_details\">\n                <div className=\"heading\">\n                  <h2>{project.title}</h2>\n                </div>\n              </div>\n              <button className=\"option\">\n                <img src={gearIcon} alt=\"\" /> <span>Options</span>\n                <QueueProjectOptionMenu\n                  projectId={project.project_id}\n                  showMoveToActive={showMoveToActiveOverlayCallBack}\n                  updateProjects={updateProjectListingCallBack}\n                />\n              </button>\n            </div>\n          );\n        })}\n        {showMoveToActiveOverlay && (\n          <MoveProject\n            projects={allProjects}\n            closeOverlay={closeMoveToActiveOverlayCallBack}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ActiveProjects;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/completedProjects.js",["228","229","230"],"import checkCircle from \"../../assets/images/check circle white.png\";\nimport smileIcon from \"../../assets/images/smile.png\";\nimport activeWorkIcon from \"../../assets/images/brand-page-icons/active work image.png\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { PROJECT_LISTING } from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\n\nconst CompletedProjects = ({ filterText, ...props }) => {\n  const { id } = useParams();\n\n  const [completedProjects, setCompletedProjects] = useState([]);\n  const [allCompletedProjects, setAllCompletedProjects] = useState([]);\n\n  const fetchCompletedProjects = () => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", id);\n    helper.append(\"status\", \"Y\");\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        const projects = successResponse.data;\n        setCompletedProjects(projects);\n        setAllCompletedProjects(projects);\n      },\n      (errorResponse) => {\n        setCompletedProjects([]);\n        setAllCompletedProjects([]);\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchCompletedProjects();\n  }, [id]);\n\n  useEffect(() => {\n    if (filterText === \"\") {\n      setCompletedProjects(allCompletedProjects);\n    }\n\n    setCompletedProjects(\n      allCompletedProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n  }, [filterText]);\n\n  return (\n    <>\n      <div className=\"brandsBody productsBodyComplete\">\n        <div className=\"productList\">\n          {completedProjects.map((project) => {\n            return (\n              <div className=\"productList_single\" key={project.project_id}>\n                <div className=\"head\">\n                  <img\n                    className=\"productList_image\"\n                    // src={activeWorkIcon}\n                    src={project.project_logo}\n                    alt=\"\"\n                  />\n                  <div className=\"productList_details\">\n                    <div className=\"heading\">\n                      <h2>{project.title}</h2>\n                      <div className=\"inProg\">\n                        <span>Completed</span> <img src={checkCircle} alt=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                  <button className=\"smile\">\n                    <img src={smileIcon} alt=\"\" />\n                  </button>\n                </div>\n                <div className=\"foot\">\n                  <div className=\"foot_single\">\n                    <h3>Created</h3>\n                    <p>{project.created_datetime}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Started</h3>\n                    <p>{project.start_date}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Completed</h3>\n                    <p>{project.completion_date}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Design Recieved</h3>\n                    <p>{project.design_received}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompletedProjects;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/activeProjectOptionMenu.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/queueProjectOptionMenu.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/moveProject.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/optionMenuHelper.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":29,"column":1,"nodeType":"237","endLine":29,"endColumn":36},{"ruleId":"235","severity":1,"message":"238","line":8,"column":1,"nodeType":"237","endLine":62,"endColumn":3},{"ruleId":"235","severity":1,"message":"238","line":16,"column":1,"nodeType":"237","endLine":101,"endColumn":3},{"ruleId":"239","severity":1,"message":"240","line":26,"column":29,"nodeType":"241","messageId":"242","endLine":26,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":60,"column":15,"nodeType":"245","endLine":60,"endColumn":27},{"ruleId":"231","replacedBy":"246"},{"ruleId":"233","replacedBy":"247"},{"ruleId":"235","severity":1,"message":"238","line":26,"column":1,"nodeType":"237","endLine":76,"endColumn":3},{"ruleId":"243","severity":1,"message":"244","line":73,"column":25,"nodeType":"245","endLine":73,"endColumn":37},{"ruleId":"231","replacedBy":"248"},{"ruleId":"233","replacedBy":"249"},{"ruleId":"231","replacedBy":"250"},{"ruleId":"233","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":35,"column":6,"nodeType":"254","endLine":35,"endColumn":8,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"240","line":133,"column":44,"nodeType":"241","messageId":"242","endLine":133,"endColumn":46},{"ruleId":"235","severity":1,"message":"238","line":9,"column":1,"nodeType":"237","endLine":25,"endColumn":3},{"ruleId":"243","severity":1,"message":"256","line":23,"column":15,"nodeType":"245","endLine":26,"endColumn":16},{"ruleId":"239","severity":1,"message":"257","line":108,"column":70,"nodeType":"241","messageId":"242","endLine":108,"endColumn":72},{"ruleId":"252","severity":1,"message":"258","line":97,"column":6,"nodeType":"254","endLine":97,"endColumn":10,"suggestions":"259"},{"ruleId":"239","severity":1,"message":"240","line":100,"column":20,"nodeType":"241","messageId":"242","endLine":100,"endColumn":22},{"ruleId":"252","severity":1,"message":"260","line":115,"column":6,"nodeType":"254","endLine":115,"endColumn":18,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":3,"column":8,"nodeType":"264","messageId":"265","endLine":3,"endColumn":22},{"ruleId":"252","severity":1,"message":"266","line":37,"column":6,"nodeType":"254","endLine":37,"endColumn":10,"suggestions":"267"},{"ruleId":"252","severity":1,"message":"268","line":49,"column":6,"nodeType":"254","endLine":49,"endColumn":18,"suggestions":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["270"],["271"],["270"],["271"],["270"],["271"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBrands'. Either include it or remove the dependency array.","ArrayExpression",["272"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'allProjects' and 'allQueueProjects'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProjects' needs the current value of 'allProjects'.",["274"],"no-unused-vars","'activeWorkIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchCompletedProjects'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has a missing dependency: 'allCompletedProjects'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCompletedProjects' needs the current value of 'allCompletedProjects'.",["276"],"no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [fetchBrands]",{"range":"287","text":"288"},"Update the dependencies array to be: [fetchProjects, id]",{"range":"289","text":"290"},"Update the dependencies array to be: [allProjects, allQueueProjects, filterText]",{"range":"291","text":"292"},"Update the dependencies array to be: [fetchCompletedProjects, id]",{"range":"293","text":"294"},"Update the dependencies array to be: [allCompletedProjects, filterText]",{"range":"295","text":"296"},[1422,1424],"[fetchBrands]",[3161,3165],"[fetchProjects, id]",[3561,3573],"[allProjects, allQueueProjects, filterText]",[1287,1291],"[fetchCompletedProjects, id]",[1548,1560],"[allCompletedProjects, filterText]"]