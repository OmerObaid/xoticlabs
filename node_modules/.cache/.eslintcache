[{"/Users/omerobaid/Projects/react-projects/xotic-labs/src/index.js":"1","/Users/omerobaid/Projects/react-projects/xotic-labs/src/App.js":"2","/Users/omerobaid/Projects/react-projects/xotic-labs/src/reportWebVitals.js":"3","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/spinner/Spinner.js":"4","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js":"5","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/index.js":"6","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Store.js":"7","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/BlankLayout.js":"8","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/FullLayout.js":"9","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/AuthRoutes.js":"10","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/index.js":"11","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Reducers.js":"12","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/Router.js":"13","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/index.js":"14","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/Header.js":"15","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/sidebar/Sidebar.js":"16","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/HandleResponse.js":"17","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/footer/Footer.js":"18","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js":"19","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/History.js":"20","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Reducer.js":"21","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/Authentication.service.js":"22","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/constants/index.js":"23","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiousURL.js":"24","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiosConfig.js":"25","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js":"26","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/General.services.js":"27","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/FormDataHelper.js":"28","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/SignUp.js":"29","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/404.js":"30","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/BrandsListing.js":"31","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/constants/index.js":"32","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Reducer.js":"33","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Action.js":"34","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Action.js":"35","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/headerBrandListing.js":"36","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/createNewBrand.js":"37","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/colorBox.js":"38","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/attachmentGuidlines.js":"39","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/hashLoadSpinner.js":"40","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/brand.js":"41","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/activeProjects.js":"42","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/completedProjects.js":"43","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/activeProjectOptionMenu.js":"44","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/queueProjectOptionMenu.js":"45","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/moveProject.js":"46","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/optionMenuHelper.js":"47","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/draftProjects.js":"48","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/createProject.js":"49","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/sideNotes.js":"50","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/categorySearch.js":"51","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/fileDeliverables.js":"52","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/associatedBrand.js":"53","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/attachments.js":"54","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/customHooks/useFocus.js":"55","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/editProject.js":"56","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/oldAttachments.js":"57","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/duplicateProject.js":"58","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/editBrand.js":"59","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/projectDetail.js":"60","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/sideBar.js":"61","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/DesktopHeader.js":"62","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/MobileHeader.js":"63","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/MobileHeaderSubMenu.js":"64","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/chatHistory.js":"65","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/sendMessage.js":"66","/Users/omerobaid/Projects/react-projects/xotic-labs/src/helper/siteHelper.js":"67","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/attachedFile.js":"68","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/commentImage.js":"69","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/projectDetailTabView.js":"70","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/designTabView.js":"71","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/projectImageAnnotation.js":"72","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/ThreadedContent.js":"73","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/ThreadedEditor.js":"74","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/bottomOptionsBar.js":"75","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/TextEditor.js":"76","/Users/omerobaid/Projects/react-projects/xotic-labs/src/enums/projectWorkingStatusEnum.js":"77","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/brandDefinition.js":"78","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/brandCheckBoxes.js":"79","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/user/userProfile.js":"80","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/companyProfile.js":"81","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/user/editUserProfile.js":"82","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/user/userFileTypes.js":"83","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/company/editCompanyProfile.js":"84","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/confirmPauseAccount.js":"85","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/paymentHistory.js":"86","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/creditCard.js":"87","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/paymentPlans.js":"88","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/subscribeButton.js":"89","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/stripeCreditCard.js":"90","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/useResponsiveFontSize.js":"91","/Users/omerobaid/Projects/react-projects/xotic-labs/src/helper/accountHelper.js":"92","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/updateBillingInfo.js":"93","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ForgetPassword.js":"94","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ForgetPasswordEmail.js":"95","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ResetPassword.js":"96","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/common/errorMessage.js":"97","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/common/errorMessageCustom.js":"98"},{"size":717,"mtime":1653084752319,"results":"99","hashOfConfig":"100"},{"size":1568,"mtime":1653070257872,"results":"101","hashOfConfig":"100"},{"size":362,"mtime":1629134270320,"results":"102","hashOfConfig":"100"},{"size":421,"mtime":1629137106026,"results":"103","hashOfConfig":"100"},{"size":1491,"mtime":1648286586577,"results":"104","hashOfConfig":"100"},{"size":497,"mtime":1648222970972,"results":"105","hashOfConfig":"100"},{"size":824,"mtime":1637249054926,"results":"106","hashOfConfig":"100"},{"size":600,"mtime":1653059032219,"results":"107","hashOfConfig":"100"},{"size":2774,"mtime":1648226002883,"results":"108","hashOfConfig":"100"},{"size":2711,"mtime":1653307408690,"results":"109","hashOfConfig":"100"},{"size":129,"mtime":1629215307943,"results":"110","hashOfConfig":"100"},{"size":244,"mtime":1631120309006,"results":"111","hashOfConfig":"100"},{"size":1932,"mtime":1648223174279,"results":"112","hashOfConfig":"100"},{"size":80,"mtime":1629137297465,"results":"113","hashOfConfig":"100"},{"size":3088,"mtime":1649961873071,"results":"114","hashOfConfig":"100"},{"size":9913,"mtime":1629137341677,"results":"115","hashOfConfig":"100"},{"size":591,"mtime":1629137253717,"results":"116","hashOfConfig":"100"},{"size":447,"mtime":1629995996968,"results":"117","hashOfConfig":"100"},{"size":342,"mtime":1629137253712,"results":"118","hashOfConfig":"100"},{"size":116,"mtime":1630085211702,"results":"119","hashOfConfig":"100"},{"size":1562,"mtime":1630103311081,"results":"120","hashOfConfig":"100"},{"size":1795,"mtime":1649792231712,"results":"121","hashOfConfig":"100"},{"size":2697,"mtime":1649792169157,"results":"122","hashOfConfig":"100"},{"size":3523,"mtime":1653660971401,"results":"123","hashOfConfig":"100"},{"size":292,"mtime":1654606894234,"results":"124","hashOfConfig":"100"},{"size":4496,"mtime":1653071416738,"results":"125","hashOfConfig":"100"},{"size":636,"mtime":1653573475972,"results":"126","hashOfConfig":"100"},{"size":274,"mtime":1653138614250,"results":"127","hashOfConfig":"100"},{"size":127,"mtime":1629735400806,"results":"128","hashOfConfig":"100"},{"size":119,"mtime":1629738343776,"results":"129","hashOfConfig":"100"},{"size":6166,"mtime":1648291757080,"results":"130","hashOfConfig":"100"},{"size":409,"mtime":1647864450068,"results":"131","hashOfConfig":"100"},{"size":1131,"mtime":1649791774917,"results":"132","hashOfConfig":"100"},{"size":837,"mtime":1649791808554,"results":"133","hashOfConfig":"100"},{"size":1195,"mtime":1630103239406,"results":"134","hashOfConfig":"100"},{"size":1001,"mtime":1643819962053,"results":"135","hashOfConfig":"100"},{"size":15201,"mtime":1649358781909,"results":"136","hashOfConfig":"100"},{"size":2172,"mtime":1631810252605,"results":"137","hashOfConfig":"100"},{"size":1577,"mtime":1631199403968,"results":"138","hashOfConfig":"100"},{"size":480,"mtime":1631124141120,"results":"139","hashOfConfig":"100"},{"size":3208,"mtime":1648480507969,"results":"140","hashOfConfig":"100"},{"size":8175,"mtime":1649958487529,"results":"141","hashOfConfig":"100"},{"size":3862,"mtime":1640958198406,"results":"142","hashOfConfig":"100"},{"size":3387,"mtime":1643976636148,"results":"143","hashOfConfig":"100"},{"size":2697,"mtime":1643977962163,"results":"144","hashOfConfig":"100"},{"size":4782,"mtime":1654863901585,"results":"145","hashOfConfig":"100"},{"size":2808,"mtime":1650047222140,"results":"146","hashOfConfig":"100"},{"size":7861,"mtime":1650046864035,"results":"147","hashOfConfig":"100"},{"size":12536,"mtime":1654510091138,"results":"148","hashOfConfig":"100"},{"size":1310,"mtime":1631633979230,"results":"149","hashOfConfig":"100"},{"size":6315,"mtime":1633095473245,"results":"150","hashOfConfig":"100"},{"size":2570,"mtime":1644483008214,"results":"151","hashOfConfig":"100"},{"size":3360,"mtime":1632245068166,"results":"152","hashOfConfig":"100"},{"size":2644,"mtime":1654518327555,"results":"153","hashOfConfig":"100"},{"size":238,"mtime":1631904453153,"results":"154","hashOfConfig":"100"},{"size":13154,"mtime":1644336685103,"results":"155","hashOfConfig":"100"},{"size":2831,"mtime":1638199441087,"results":"156","hashOfConfig":"100"},{"size":13184,"mtime":1644339469367,"results":"157","hashOfConfig":"100"},{"size":23329,"mtime":1644582416557,"results":"158","hashOfConfig":"100"},{"size":3872,"mtime":1649799125089,"results":"159","hashOfConfig":"100"},{"size":7214,"mtime":1649961374124,"results":"160","hashOfConfig":"100"},{"size":3809,"mtime":1649798509211,"results":"161","hashOfConfig":"100"},{"size":1397,"mtime":1637337438901,"results":"162","hashOfConfig":"100"},{"size":3143,"mtime":1649798662156,"results":"163","hashOfConfig":"100"},{"size":2820,"mtime":1644251288847,"results":"164","hashOfConfig":"100"},{"size":5660,"mtime":1653573269789,"results":"165","hashOfConfig":"100"},{"size":3461,"mtime":1649796112348,"results":"166","hashOfConfig":"100"},{"size":1070,"mtime":1637934970248,"results":"167","hashOfConfig":"100"},{"size":2773,"mtime":1644251444165,"results":"168","hashOfConfig":"100"},{"size":1650,"mtime":1638970693427,"results":"169","hashOfConfig":"100"},{"size":1031,"mtime":1638190776877,"results":"170","hashOfConfig":"100"},{"size":8443,"mtime":1652960690566,"results":"171","hashOfConfig":"100"},{"size":6011,"mtime":1652974446184,"results":"172","hashOfConfig":"100"},{"size":2006,"mtime":1652961677527,"results":"173","hashOfConfig":"100"},{"size":9026,"mtime":1640794828019,"results":"174","hashOfConfig":"100"},{"size":1623,"mtime":1652949669358,"results":"175","hashOfConfig":"100"},{"size":182,"mtime":1644335428773,"results":"176","hashOfConfig":"100"},{"size":1400,"mtime":1645982644253,"results":"177","hashOfConfig":"100"},{"size":618,"mtime":1645982661909,"results":"178","hashOfConfig":"100"},{"size":6097,"mtime":1648041093575,"results":"179","hashOfConfig":"100"},{"size":16125,"mtime":1652355549386,"results":"180","hashOfConfig":"100"},{"size":14784,"mtime":1654514639832,"results":"181","hashOfConfig":"100"},{"size":4355,"mtime":1648041610049,"results":"182","hashOfConfig":"100"},{"size":13627,"mtime":1650132218273,"results":"183","hashOfConfig":"100"},{"size":1912,"mtime":1646075265307,"results":"184","hashOfConfig":"100"},{"size":4661,"mtime":1654514870811,"results":"185","hashOfConfig":"100"},{"size":7582,"mtime":1652280755346,"results":"186","hashOfConfig":"100"},{"size":6746,"mtime":1654891539285,"results":"187","hashOfConfig":"100"},{"size":887,"mtime":1649791915529,"results":"188","hashOfConfig":"100"},{"size":2978,"mtime":1652471213855,"results":"189","hashOfConfig":"100"},{"size":476,"mtime":1647864542846,"results":"190","hashOfConfig":"100"},{"size":410,"mtime":1648290981972,"results":"191","hashOfConfig":"100"},{"size":10008,"mtime":1654514668441,"results":"192","hashOfConfig":"100"},{"size":4145,"mtime":1654514898213,"results":"193","hashOfConfig":"100"},{"size":1973,"mtime":1654514844985,"results":"194","hashOfConfig":"100"},{"size":4808,"mtime":1654514859710,"results":"195","hashOfConfig":"100"},{"size":431,"mtime":1653085089079,"results":"196","hashOfConfig":"100"},{"size":492,"mtime":1653085792336,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"r3f74b",{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"200"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"200"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"200"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"200"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"200"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"200"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"200"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"200"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"200"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"200"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"200"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"200"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"200"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"200"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"334","usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"200"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"340","usedDeprecatedRules":"200"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"200"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"200"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"200"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"200"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"200"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"200"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"200"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"200"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"372","usedDeprecatedRules":"200"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"375","usedDeprecatedRules":"200"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"200"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"200"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"200"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"200"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"200"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"200"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"200"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"200"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"200"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"200"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"200"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"200"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"200"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"200"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"200"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"200"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"200"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"/Users/omerobaid/Projects/react-projects/xotic-labs/src/index.js",[],["447","448"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/App.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/reportWebVitals.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/spinner/Spinner.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/PrivateRoutes.js",["449","450"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAccountCanceled, isAccountSuspended } from \"../helper/accountHelper\";\r\nimport { AuthenticationService } from \"../jwt/_services\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const headerSettings = useSelector((state) => state.headerSettings);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const currentUser = AuthenticationService.currentUserValue;\r\n        let goingTo = window.location.href.split(\"/\").pop();\r\n        if (!currentUser) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/authentication/Login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        if (\r\n          (isAccountCanceled(headerSettings) ||\r\n            isAccountSuspended(headerSettings)) &&\r\n          goingTo != \"user\" &&\r\n          goingTo != \"company\"\r\n        ) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/company\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Store.js",["451"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport Reducers from \"./Reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// export function configureStore(InitialState) {\r\n//   const Store = createStore(\r\n//     Reducers,\r\n//     InitialState,\r\n//     composeWithDevTools(applyMiddleware(thunk))\r\n//   );\r\n//   return Store;\r\n// }\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, Reducers);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/BlankLayout.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/FullLayout.js",["452"],"import React, { Suspense } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"./layout-components/header/Header\";\r\nimport Footer from \"./layout-components/footer/Footer\";\r\nimport ThemeRoutes from \"../routes/Router\";\r\nimport Spinner from \"./../views/spinner/Spinner\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className=\"bodyClone\">\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Header                                                                         */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Header {...props} />\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Sidebar                                                                        */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* <Sidebar {...props} routes={ThemeRoutes} /> */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Page Main-Content                                                              */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n\r\n      <Suspense fallback={<Spinner />}>\r\n        <Switch>\r\n          {ThemeRoutes.map((prop, key) => {\r\n            if (prop.navlabel) {\r\n              return null;\r\n            } else if (prop.collapse) {\r\n              return prop.child.map((prop2, key2) => {\r\n                if (prop2.collapse) {\r\n                  return prop2.subchild.map((prop3, key3) => {\r\n                    return (\r\n                      <Route\r\n                        path={prop3.path}\r\n                        component={prop3.component}\r\n                        name={prop3.name}\r\n                        key={key3}\r\n                      />\r\n                    );\r\n                  });\r\n                }\r\n                return (\r\n                  <Route\r\n                    path={prop2.path}\r\n                    component={prop2.component}\r\n                    name={prop2.name}\r\n                    key={key2}\r\n                  />\r\n                );\r\n              });\r\n            } else if (prop.redirect) {\r\n              return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\r\n            } else {\r\n              return (\r\n                <Route\r\n                  path={prop.path}\r\n                  component={prop.component}\r\n                  name={prop.name}\r\n                  key={key}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </Switch>\r\n      </Suspense>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/AuthRoutes.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/Reducers.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/routes/Router.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/Header.js",["453","454","455","456","457","458","459"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getClientName } from \"../../../helper/siteHelper\";\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n/* Import images which are need for the HEADER                                    */\r\n/*--------------------------------------------------------------------------------*/\r\n\r\nimport DesktopHeader from \"./DesktopHeader\";\r\nimport MobileHeader from \"./MobileHeader\";\r\n\r\nexport default (props) => {\r\n  const userName = getClientName();\r\n  const headerSettings = useSelector((state) => state.headerSettings);\r\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n\r\n  const getActiveBrand = () => {\r\n    var brand = headerSettings.brandList.find((brand) => {\r\n      return brand.brand_id == headerSettings.activeBrandId;\r\n    });\r\n\r\n    if (!brand && headerSettings.brandList.length < 1) {\r\n      return { brandName: \"\", brandImage: \"\" };\r\n    }\r\n    if (!brand) brand = headerSettings.brandList[0];\r\n\r\n    return { brandName: brand.title, brandImage: brand.logo };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        {headerSettings.accountPauseStatus == \"Y\" && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40px\",\r\n              lineHeight: \"40px\",\r\n              backgroundColor: \"#fdde6c\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <label style={{ color: \"black\", textAlign: \"center\" }}>\r\n              Your account is on Pause.\r\n            </label>\r\n          </div>\r\n        )}\r\n        {headerSettings.accountSuspendedStatus == \"Y\" && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40px\",\r\n              lineHeight: \"40px\",\r\n              backgroundColor: \"#fdde6c\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <label style={{ color: \"black\", textAlign: \"center\" }}>\r\n              Your account is Suspended.\r\n            </label>\r\n          </div>\r\n        )}\r\n        {headerSettings.accountCancelStatus == \"Y\" && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40px\",\r\n              lineHeight: \"40px\",\r\n              backgroundColor: \"#FF3131\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <label style={{ color: \"black\", textAlign: \"center\" }}>\r\n              Your account is Canceled.\r\n            </label>\r\n          </div>\r\n        )}\r\n        <main className=\"cont\">\r\n          <div className=\"logo\">\r\n            {getActiveBrand().brandImage && (\r\n              <img src={getActiveBrand().brandImage} alt=\"logo\" />\r\n            )}\r\n          </div>\r\n          <DesktopHeader\r\n            getActiveBrand={getActiveBrand}\r\n            userName={userName}\r\n            {...props}\r\n          />\r\n          <MobileHeader\r\n            getActiveBrand={getActiveBrand}\r\n            userName={userName}\r\n            {...props}\r\n          />\r\n        </main>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/sidebar/Sidebar.js",[],["460","461"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/HandleResponse.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/footer/Footer.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/History.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Reducer.js",["462"],"import {\r\n  LOGO_BG,\r\n  NAVBAR_BG,\r\n  SIDEBAR_BG,\r\n  THEME,\r\n  DIRECTION,\r\n  SIDEBAR_POSITION,\r\n  HEADER_POSITION,\r\n  LAYOUT,\r\n  SIDEBAR_TYPE,\r\n} from \"../constants/\";\r\n\r\nconst INIT_STATE = {\r\n  activeDir: \"ltr\",\r\n  activeThemeLayout: \"vertical\",\r\n  activeTheme: \"light\",\r\n  activeSidebarType: \"full\",\r\n  activeLogoBg: \"skin6\",\r\n  activeNavbarBg: \"skin6\",\r\n  activeSidebarBg: \"skin5\",\r\n  activeSidebarPos: \"fixed\",\r\n  activeHeaderPos: \"fixed\",\r\n  activeLayout: \"full\",\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGO_BG:\r\n      return {\r\n        ...state,\r\n        activeLogoBg: action.payload,\r\n      };\r\n    case NAVBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeNavbarBg: action.payload,\r\n      };\r\n    case SIDEBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeSidebarBg: action.payload,\r\n      };\r\n    case THEME:\r\n      return {\r\n        ...state,\r\n        activeTheme: action.payload,\r\n      };\r\n    case DIRECTION:\r\n      return {\r\n        ...state,\r\n        activeDir: action.payload,\r\n      };\r\n    case SIDEBAR_POSITION:\r\n      return {\r\n        ...state,\r\n        activeSidebarPos: action.payload,\r\n      };\r\n    case HEADER_POSITION:\r\n      return {\r\n        ...state,\r\n        activeHeaderPos: action.payload,\r\n      };\r\n    case LAYOUT:\r\n      return {\r\n        ...state,\r\n        activeLayout: action.payload,\r\n      };\r\n    case SIDEBAR_TYPE:\r\n      return {\r\n        ...state,\r\n        activeSidebarType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/Authentication.service.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/constants/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiousURL.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/axiosConfig.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_services/General.services.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/FormDataHelper.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/SignUp.js",[],["463","464"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/404.js",[],["465","466"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/BrandsListing.js",["467","468"],"import React from \"react\";\n\nimport activeBrandFolderIcon from \"../../assets/images/active-brand-icon.png\";\nimport brandFolderIcon from \"../../assets/images/brand-icon.png\";\nimport gearIcon from \"../../assets/images/gear.png\";\n\nimport editIcon from \"../../assets/images/brand-listing-icon/icon Edit project.png\";\nimport deleteIcon from \"../../assets/images/brand-listing-icon/icon Delete project.png\";\n\nimport { BRAND_PAGE_TITLE } from \"../constants\";\nimport { useEffect, useState } from \"react\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { BRANDS_LISTING, BRAND_DELETE } from \"../../jwt/_services/axiousURL\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setActiveBrandId,\n  setBrandList,\n} from \"../../redux/headerSettings/Action\";\n\nimport swal from \"sweetalert\";\nimport CreateNewBrand from \"../../components/brand/createNewBrand\";\nimport EditBrand from \"./editBrand\";\nimport { isAccountPaused } from \"../../helper/accountHelper\";\n\nconst BrandsListing = (props) => {\n  const clientId = AuthenticationService.currentUserValue.id;\n  const [brands, setBrands] = useState([]);\n  const [showCreateNewBrand, setShowCreateNewBrand] = useState(false);\n  const [showEditBrand, setShowEditBrand] = useState(false);\n  const [selectedBrandIdForEdit, setSelectedBrandIdForEdit] = useState(\"\");\n  const dispatch = useDispatch();\n  const headerSettings = useSelector((state) => state.headerSettings);\n\n  useEffect(() => {\n    fetchBrands();\n    document.title = BRAND_PAGE_TITLE;\n  }, []);\n\n  const fetchBrands = () => {\n    var bodyHelper = FormDataHelper();\n    bodyHelper.append(\"client_id\", clientId);\n\n    GeneralServices.postRequest(bodyHelper, BRANDS_LISTING).then(\n      (successResponse) => {\n        setBrands(successResponse.data);\n        dispatch(setBrandList(successResponse.data));\n      }\n    );\n  };\n\n  const getTitle = (title) => {\n    var length = 5;\n    if (title == null) return \"\";\n    if (title.length <= length) return title;\n\n    title = title.substring(0, length);\n    return title + \" ...\";\n  };\n\n  const closeCreateNewBrandOverlay = (callFetchBrands = false) => {\n    setShowCreateNewBrand(false);\n    setShowEditBrand(false);\n    if (callFetchBrands) fetchBrands();\n  };\n\n  const deleteProject = (brandId) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        var helper = FormDataHelper();\n        helper.append(\"brand_id\", brandId);\n        GeneralServices.postRequest(helper, BRAND_DELETE).then(\n          (successResponse) => {\n            swal(\"Brand deleted successfully!\", {\n              icon: \"success\",\n            });\n            fetchBrands();\n          }\n        );\n      } else {\n        console.log(\"User oppted to not delete the project\");\n      }\n    });\n  };\n\n  const handleBrandClicked = (brandId) => {\n    dispatch(setActiveBrandId(brandId));\n    const { from } = props.location.state || {\n      from: { pathname: `/brand/${brandId}` },\n    };\n    props.history.push(from);\n  };\n\n  const handleEditBrandClick = (brandId) => {\n    setSelectedBrandIdForEdit(brandId);\n    setShowEditBrand(true);\n  };\n\n  return (\n    <>\n      <section className=\"blp\">\n        <main className=\"cont\">\n          <div className=\"pageHead\">\n            <h1>Brands</h1>\n            {!isAccountPaused(headerSettings) && (\n              <button onClick={() => setShowCreateNewBrand(true)}>\n                + Create brand\n              </button>\n            )}\n          </div>\n\n          {showCreateNewBrand && (\n            <CreateNewBrand crossButtonCallBack={closeCreateNewBrandOverlay} />\n          )}\n\n          {showEditBrand && (\n            <EditBrand\n              brandId={selectedBrandIdForEdit}\n              crossButtonCallBack={closeCreateNewBrandOverlay}\n            />\n          )}\n\n          <div className=\"brandsBody\">\n            <h4>\n              Brands <span>({brands.length})</span>\n            </h4>\n            <div className=\"brandsList\">\n              {brands.map((brand, key) => {\n                return (\n                  <div className=\"brandsList_single\" key={key}>\n                    <div className=\"brandsList_head\">\n                      <div\n                        onClick={() => handleBrandClicked(brand.brand_id)}\n                        className=\"brandsList_left\"\n                      >\n                        <img\n                          src={\n                            brand.brand_id == headerSettings.activeBrandId\n                              ? activeBrandFolderIcon\n                              : brandFolderIcon\n                          }\n                          alt=\"brand-icon\"\n                        />\n                        <h3>{getTitle(brand.title)}</h3>\n                      </div>\n                      <button className=\"option\">\n                        <img src={gearIcon} alt=\"gear-icon\" />{\" \"}\n                        <span>Options</span>\n                        <ul className=\"optionMenu\">\n                          <h3>Options</h3>\n                          <li\n                            onClick={() => handleEditBrandClick(brand.brand_id)}\n                          >\n                            <img src={editIcon} alt=\"\" />\n                            Edit Brand\n                          </li>\n                          <li onClick={() => deleteProject(brand.brand_id)}>\n                            <img src={deleteIcon} alt=\"\" />\n                            Delete Brand\n                          </li>\n                        </ul>\n                      </button>\n                    </div>\n                    <p className=\"brandsList-p\">\n                      Used in {brand.used_id} projects\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default BrandsListing;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/constants/index.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Reducer.js",["469"],"import {\n  ACCOUNT_CANCEL_STATUS,\n  ACCOUNT_PAUSE_STATUS,\n  ACCOUNT_PLAN_TITLE,\n  ACCOUNT_SUSPENDED_STATUS,\n  ACTIVE_BRAND,\n  BRAND_LIST,\n} from \"../constants\";\n\nconst INIT_STATE = {\n  activeBrandId: \"0\",\n  brandList: [],\n  accountPauseStatus: \"N\",\n  accountCancelStatus: \"N\",\n  accountSuspendedStatus: \"N\",\n  accountPlanTitle: \"\",\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case ACTIVE_BRAND:\n      return {\n        ...state,\n        activeBrandId: action.payload,\n      };\n    case BRAND_LIST:\n      return {\n        ...state,\n        brandList: action.payload,\n      };\n\n    case ACCOUNT_PAUSE_STATUS:\n      return {\n        ...state,\n        accountPauseStatus: action.payload,\n      };\n\n    case ACCOUNT_CANCEL_STATUS:\n      return {\n        ...state,\n        accountCancelStatus: action.payload,\n      };\n\n    case ACCOUNT_SUSPENDED_STATUS:\n      return {\n        ...state,\n        accountSuspendedStatus: action.payload,\n      };\n\n    case ACCOUNT_PLAN_TITLE:\n      return {\n        ...state,\n        accountPlanTitle: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/headerSettings/Action.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/redux/settings/Action.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/headerBrandListing.js",["470"],"import { useDispatch } from \"react-redux\";\nimport { setActiveBrandId } from \"../redux/headerSettings/Action\";\n\nconst HeaderBrandListing = ({\n  brands,\n  ulClass,\n  headerSubMenuClossCallBack = null,\n  ...props\n}) => {\n  const dispatch = useDispatch();\n\n  const setActiveBrand = (brandId) => {\n    dispatch(setActiveBrandId(brandId));\n    if (headerSubMenuClossCallBack != null) headerSubMenuClossCallBack();\n\n    const { from } = {\n      from: { pathname: `/brand/${brandId}` },\n    };\n\n    props.history.push(from);\n  };\n\n  return (\n    <>\n      <ul style={{ overflowY: \"scroll\", height: \"200px\" }} className={ulClass}>\n        {brands.map((brand, key) => {\n          return (\n            <li key={key}>\n              <a\n                onClick={() => setActiveBrand(brand.brand_id)}\n                className=\"headerBrandList\"\n              >\n                {brand.title}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default HeaderBrandListing;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/createNewBrand.js",["471","472"],"import crossSignIcon from \"../../assets/images/new-brand-icons/cross-sign.png\";\nimport uploadIcon from \"../../assets/images/new-brand-icons/upload.png\";\nimport addNewColorIcon from \"../../assets/images/new-brand-icons/add new color.png\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nimport * as Yup from \"yup\";\nimport ColorBox from \"../colorBox\";\nimport { useState, useEffect } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport {\n  BRAND_ADD,\n  LIST_DESIGN_OPTIONS,\n  LIST_INDUSTRY_OPTIONS,\n} from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\nimport Attachments from \"../createProject/attachments\";\nimport BrandDefinition from \"./brandDefinition\";\n\nconst CreateNewBrand = ({ crossButtonCallBack }) => {\n  const clientId = AuthenticationService.currentUserValue.id;\n\n  const [colors, setColors] = useState([]);\n  const [showColorBox, setShowColorBox] = useState(false);\n  const [sohwLogoFileSelected, setSohwLogoFileSelected] = useState(false);\n  const [showGuideFileSelected, setShowGuideFileSelected] = useState(false);\n  // const [showAttachmentFileSelected, setShowAttachmentFileSelected] =\n  //   useState(false);\n  // const [attachmentCount, setAttachmentCount] = useState(0);\n  // const [industries, setIndustries] = useState([]);\n\n  const closeColorBoxCallBack = ({ color }) => {\n    setShowColorBox(false);\n    if (!color) return;\n    setColors([...colors, color.hex]);\n  };\n\n  const removeColor = (index) => {\n    colors.splice(index, 1);\n    setColors([...colors]);\n  };\n\n  // const fetchIndustries = () => {\n  //   var helper = FormDataHelper();\n  //   GeneralServices.postRequest(helper, INDUSTRIES_LISTING).then(\n  //     (successResponse) => {\n  //       setIndustries(successResponse.data);\n  //     }\n  //   );\n  // };\n\n  // useEffect(() => {\n  //   fetchIndustries();\n  // }, []);\n\n  return (\n    <>\n      <div className=\"cnp createNew-overLay active\">\n        <main>\n          <img\n            onClick={crossButtonCallBack}\n            src={crossSignIcon}\n            alt=\"cross\"\n            className=\"cross\"\n          />\n          <h1 className=\"cnp-head\">Create a brand</h1>\n          <p className=\"cnp-para\">\n            A brands is a folder containing information and assets for anyone or\n            anything that you need designs for regularly. Create a brand for\n            clients, products, or use it to categorize and organize your design\n            projects.\n          </p>\n\n          <Formik\n            initialValues={{\n              brandName: \"\",\n              industry: \"\",\n              description: \"\",\n              website: \"\",\n              logo: \"\",\n              defines: [],\n              requires: [],\n            }}\n            validationSchema={Yup.object().shape({\n              brandName: Yup.string().required(\"Brand name is required\"),\n              // industry: Yup.number().required(\"Industry is required\"),\n              requires: Yup.array().min(\n                1,\n                \"Please select at least one check box\"\n              ),\n              defines: Yup.array().min(\n                1,\n                \"Please select at least one check box\"\n              ),\n              description: Yup.string().required(),\n              logo: Yup.mixed().required(\"logo is required\"),\n            })}\n            onSubmit={(values, actions) => {\n              // console.log(values);\n              // return;\n              actions.setStatus();\n              var helper = FormDataHelper();\n\n              helper.append(\"client_id\", clientId);\n              helper.append(\"title\", values.brandName);\n              // helper.append(\"industry_id\", values.industry);\n              helper.append(\"defines\", JSON.stringify(values.defines));\n              helper.append(\"requires\", JSON.stringify(values.requires));\n              helper.append(\"description\", values.description);\n              helper.append(\"website\", values.website);\n              if (colors.length > 0) {\n                helper.append(\"colors\", JSON.stringify(colors));\n              }\n\n              helper.append(\"logo\", values.logo);\n              helper.append(\"guidelines\", values.guidelines);\n\n              if (\n                values.hasOwnProperty(\"attachments\") != \"\" &&\n                values.attachments.length > 0\n              ) {\n                for (var imageFile of values.attachments) {\n                  helper.append(\"attachments[]\", imageFile);\n                }\n              }\n\n              GeneralServices.postRequest(helper, BRAND_ADD).then(\n                (successResponse) => {\n                  swal(\"Brand has created!\", {\n                    icon: \"success\",\n                  });\n                  crossButtonCallBack(true);\n                },\n                (error) => {\n                  actions.setSubmitting(false);\n                  actions.setStatus(error);\n                }\n              );\n            }}\n          >\n            {({ errors, status, touched, isSubmitting, setFieldValue }) => (\n              <Form>\n                <div className=\"inputField\">\n                  <label className=\"inputLabel required\" htmlFor=\"brandName\">\n                    Brand name\n                  </label>\n                  <br />\n                  <div className=\"inputDiv input\">\n                    <Field type=\"text\" id=\"brandName\" name=\"brandName\" />\n                  </div>\n                  <ErrorMessage\n                    name=\"brandName\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                {/* <div className=\"inputField\">\n                  <label className=\"inputLabel required\" htmlFor=\"industry\">\n                    Industry\n                  </label>\n                  <br />\n                  <div className=\"inputDiv\">\n                    <Field\n                      as=\"select\"\n                      className=\"input\"\n                      id=\"industry\"\n                      name=\"industry\"\n                    >\n                      <option value=\"\">Select a Industry</option>\n                      {industries.map((industry) => {\n                        return (\n                          <option key={industry.id} value={industry.id}>\n                            {industry.title}\n                          </option>\n                        );\n                      })}\n                    </Field>\n                  </div>\n                  <ErrorMessage\n                    name=\"industry\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div> */}\n\n                <div className=\"inputField\">\n                  <BrandDefinition\n                    checkboxName={\"defines\"}\n                    titleString=\"What best defines your industry?\"\n                    URL={LIST_INDUSTRY_OPTIONS}\n                  >\n                    <ErrorMessage\n                      name=\"defines\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </BrandDefinition>\n                  <br />\n                </div>\n\n                <div className=\"inputField\">\n                  <BrandDefinition\n                    checkboxName={\"requires\"}\n                    titleString=\"What do you want to create?\"\n                    URL={LIST_DESIGN_OPTIONS}\n                  >\n                    <ErrorMessage\n                      name=\"requires\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </BrandDefinition>\n                  <br />\n                </div>\n\n                <div className=\"inputField description\">\n                  <label htmlFor=\"#desc\" className=\"inputLabel required\">\n                    Description\n                  </label>\n\n                  <p className=\"format-inst\">\n                    Tell us about this brand. What product/service does it\n                    provide? What’s special about it?\n                  </p>\n                  <CKEditor\n                    editor={ClassicEditor}\n                    config={{\n                      removePlugins: [\n                        \"ImageUpload\",\n                        \"EasyImage\",\n                        \"MediaEmbed\",\n                        \"Link\",\n                        \"CKFinder\",\n                      ],\n                    }}\n                    data=\"<p>Insert your text here</p>\"\n                    onChange={(event, editor) => {\n                      setFieldValue(\"description\", editor.getData());\n                    }}\n                  />\n\n                  <ErrorMessage\n                    name=\"description\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"inputField\">\n                  <h3 className=\"inputLabel brandGuide-head required\">\n                    Brand Logo\n                  </h3>\n                  <p className=\"format-inst\">Upload your brand logo.</p>\n                  <input\n                    type=\"file\"\n                    name=\"logo\"\n                    id=\"logo\"\n                    hidden\n                    onChange={(event) => {\n                      setFieldValue(\"logo\", event.currentTarget.files[0]);\n                      setSohwLogoFileSelected(true);\n                    }}\n                    accept=\"image/png, image/gif, image/jpeg\"\n                  />\n                  <label htmlFor=\"logo\">\n                    <img src={uploadIcon} alt=\"upload\" />\n                    <span>Upload logo</span>\n                    {sohwLogoFileSelected && (\n                      <span style={{ color: \"#4ba893\" }}>\n                        {\" \"}\n                        1 file selected{\" \"}\n                      </span>\n                    )}\n                  </label>\n                  <ErrorMessage\n                    name=\"logo\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n\n                <div className=\"inputField\">\n                  <label className=\"inputLabel\" htmlFor=\"website\">\n                    Website\n                  </label>\n                  <br />\n                  <div className=\"inputDiv\">\n                    <Field\n                      type=\"text\"\n                      name=\"website\"\n                      className=\"input\"\n                      id=\"industry\"\n                    />\n                  </div>\n                </div>\n                <div className=\"inputField\">\n                  <h3 className=\"inputLabel brandGuide-head\">\n                    Brand guideline\n                  </h3>\n                  <p className=\"format-inst\">\n                    Upload your existing brand guideline if you have one.\n                  </p>\n                  <input\n                    type=\"file\"\n                    name=\"guidelines\"\n                    id=\"brandGuide\"\n                    hidden\n                    onChange={(event) => {\n                      setFieldValue(\"guidelines\", event.currentTarget.files[0]);\n                      setShowGuideFileSelected(true);\n                    }}\n                  />\n                  <label htmlFor=\"brandGuide\">\n                    <img src={uploadIcon} alt=\"upload\" />\n                    <span>Upload guideline</span>\n                    {showGuideFileSelected && (\n                      <span style={{ color: \"#4ba893\" }}>\n                        {\" \"}\n                        1 file selected{\" \"}\n                      </span>\n                    )}\n                  </label>\n                </div>\n                <div className=\"inputField\">\n                  <h3 className=\"inputLabel\">Brand Colors</h3>\n                  <div className=\"brandColors\">\n                    <div\n                      onClick={() => setShowColorBox(!showColorBox)}\n                      className=\"brandColors_single createColor\"\n                    >\n                      <img src={addNewColorIcon} alt=\"add new color\" />\n                    </div>\n                    {colors.map((color, key) => {\n                      const hStyle = { background: color };\n                      return (\n                        <div className=\"brandColors_single\" key={key}>\n                          <div className=\"color\" style={hStyle}></div>\n                          <span className=\"hex\">{color}</span>\n                          <button\n                            onClick={() => removeColor(key)}\n                            type=\"button\"\n                            className=\"remove\"\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                {showColorBox && (\n                  <ColorBox closeCallBack={closeColorBoxCallBack} />\n                )}\n                <Attachments\n                  setFieldValue={setFieldValue}\n                  showGuideLines={true}\n                />\n                {/* <div className=\"inputField\">\n                  <p className=\"inputLabel\">Attachments</p>\n                  <AttachmentGuidlines />\n                  <div className=\"attach-cont\">\n                    <input\n                      type=\"file\"\n                      name=\"attachments\"\n                      id=\"atch\"\n                      hidden\n                      onChange={(event) => {\n                        setFieldValue(\"attachments\", event.target.files);\n                        setAttachmentCount(event.target.files.length);\n                        setShowAttachmentFileSelected(true);\n                      }}\n                      multiple\n                    />\n                    <label htmlFor=\"atch\">\n                      <img src={uploadIcon} alt=\"upload icon\" /> Upload files\n                    </label>\n                    <p>\n                      Upload or drag & drop any images, files, or examples that\n                      may be helpful explaining your project here.\n                      {showAttachmentFileSelected && (\n                        <span style={{ color: \"#4ba893\" }}>\n                          {\" \"}\n                          {`${attachmentCount} file(s) selected`}{\" \"}\n                        </span>\n                      )}\n                    </p>\n                  </div>\n                </div> */}\n\n                <button\n                  type=\"submit\"\n                  className=\"createBrandBtn\"\n                  disabled={isSubmitting}\n                >\n                  Create brand\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default CreateNewBrand;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/colorBox.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/attachmentGuidlines.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/hashLoadSpinner.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/brand.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/activeProjects.js",["473","474","475"],"import waitingIcon from \"../../assets/images/brand-page-icons/waiting.png\";\nimport gearIcon from \"../../assets/images/gear.png\";\n\nimport { useState, useEffect } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  CLIENT_ALLOWED_PROJECTS,\n  PROJECT_LISTING,\n  PROJECT_STATUS_UPDATE,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { useParams } from \"react-router\";\nimport ActiveProjectOptionMenu from \"../project/activeProjectOptionMenu\";\nimport QueueProjectOptionMenu from \"../project/queueProjectOptionMenu\";\nimport MoveProject from \"./moveProject\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport { isAccountPaused } from \"../../helper/accountHelper\";\nimport { useSelector } from \"react-redux\";\n\nconst ActiveProjects = ({ filterText, props }) => {\n  const { id } = useParams();\n\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n\n  const [queueProjects, setQueueProjects] = useState([]);\n  const [allQueueProjects, setAllQueueProjects] = useState([]);\n\n  const [showMoveToActiveOverlay, setShowMoveToActiveOverlay] = useState(false);\n  const [projectIdToMoveActive, setProjectIdToMoveActive] = useState(\"\");\n\n  const headerSettings = useSelector((state) => state.headerSettings);\n\n  const fetchProjects = (projectStatus) => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", id);\n    helper.append(\"status\", projectStatus);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        const projects = successResponse.data;\n        if (projectStatus === \"I\") {\n          setProjects(projects);\n          setAllProjects(projects);\n        } else {\n          setQueueProjects(projects);\n          setAllQueueProjects(projects);\n        }\n      },\n      (errorResponse) => {\n        if (projectStatus === \"I\") setProjects([]);\n        else setQueueProjects([]);\n      }\n    );\n  };\n\n  const fetchUserAllowedProjects = () => {\n    var helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n\n    GeneralServices.postRequest(helper, CLIENT_ALLOWED_PROJECTS).then(\n      (successResponse) => {\n        if (\n          successResponse.message_key == \"successful_request\" &&\n          successResponse.data.length > 0\n        ) {\n          let allowedProjects = successResponse.data[0].active_task_allowed;\n          let currentlyActiveProjects =\n            successResponse.data[0].Current_projects_in_Queue;\n\n          if (currentlyActiveProjects >= allowedProjects) {\n            setShowMoveToActiveOverlay(true);\n          } else if (currentlyActiveProjects < allowedProjects) {\n            updateProjectStatus(projectIdToMoveActive, \"I\");\n          }\n        }\n      },\n      (errorResponse) => {\n        console.log(\"failed to move task\");\n      }\n    );\n  };\n\n  // Active Option Menu CallBack\n  // This function call when user mark project as complete\n  const updateProjectListingCallBack = () => {\n    fetchProjects(\"I\");\n    fetchProjects(\"Q\");\n  };\n\n  // Show Move and Switch overlay callback\n  // we get project id, on which project user tapped\n  // Queue ooption Menu\n  const showMoveToActiveOverlayCallBack = (projectId = \"\") => {\n    setProjectIdToMoveActive(projectId);\n    fetchUserAllowedProjects();\n    // setShowMoveToActiveOverlay(true);\n  };\n\n  // CallBack to close the Switch And Move Overlay\n  // Optional Param Projectid, If user select the project he wants to switch\n\n  const closeMoveToActiveOverlayCallBack = (projectId = \"\") => {\n    if (projectId !== \"\" && projectIdToMoveActive !== \"\" && projectId !== 0) {\n      // update project status to active\n      updateProjectStatus(projectId, \"Q\");\n      updateProjectStatus(projectIdToMoveActive, \"I\");\n    }\n\n    setShowMoveToActiveOverlay(false);\n  };\n\n  const updateProjectStatus = (projectId, status) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"status\", status);\n\n    GeneralServices.postRequest(helper, PROJECT_STATUS_UPDATE).then(\n      (successResponse) => {\n        fetchProjects(\"I\");\n        fetchProjects(\"Q\");\n      }\n    );\n  };\n\n  const handleProjectClick = (projectId) => {\n    // const from = props.location.state || {\n    //   pathname: \"/project\",\n    //   state: {\n    //     projectId: projectId,\n    //   },\n    // };\n    // props.history.push(from);\n\n    const { from } = props.location.state || {\n      from: { pathname: `/projectDetail/${projectId}` },\n    };\n    props.history.push(from);\n  };\n\n  useEffect(() => {\n    fetchProjects(\"I\");\n    fetchProjects(\"Q\");\n  }, [id]);\n\n  useEffect(() => {\n    if (filterText === \"\") {\n      setProjects(allProjects);\n      setQueueProjects(allQueueProjects);\n    }\n\n    setProjects(\n      allProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n    setQueueProjects(\n      allQueueProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n  }, [filterText]);\n\n  return (\n    <>\n      <div className=\"brandsBody productsBody\">\n        <h4 className=\"productsBody_head\">\n          Active <span>({projects.length})</span>\n        </h4>\n        {projects.map((project) => {\n          return (\n            <div className=\"productList\" key={project.project_id}>\n              <div className=\"productList_single\">\n                <img\n                  className=\"productList_image\"\n                  src={project.logo}\n                  alt=\"\"\n                  style={{ maxWidth: \"150px\", height: \"auto\" }}\n                />\n                <div className=\"productList_details\">\n                  <div className=\"heading\">\n                    <h2\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => handleProjectClick(project.project_id)}\n                    >\n                      {project.title}\n                    </h2>\n                    <div\n                      className=\"inProg\"\n                      style={{ backgroundColor: `#${project.hex_number}` }}\n                    >\n                      <span>{project.project_working_status_title}</span>\n                      <img src={waitingIcon} alt=\"\" />\n                    </div>\n                  </div>\n                  <img\n                    src=\"./images/project person.png\"\n                    alt=\"\"\n                    className=\"person\"\n                  />\n                </div>\n                {!isAccountPaused(headerSettings) && (\n                  <button className=\"option\">\n                    <img src={gearIcon} alt=\"\" /> <span>Options</span>\n                    <ActiveProjectOptionMenu\n                      projectId={project.project_id}\n                      updateProjects={updateProjectListingCallBack}\n                      props={props}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        <h4 className=\"productsBody_head\">\n          Queue <span>({queueProjects.length})</span>\n        </h4>\n        {queueProjects.map((project) => {\n          return (\n            <div className=\"productList_single\" key={project.project_id}>\n              <div className=\"productList_details\">\n                <div className=\"heading\">\n                  <h2>{project.title}</h2>\n                </div>\n              </div>\n              {!isAccountPaused(headerSettings) && (\n                <button className=\"option\">\n                  <img src={gearIcon} alt=\"\" /> <span>Options</span>\n                  <QueueProjectOptionMenu\n                    projectId={project.project_id}\n                    showMoveToActive={showMoveToActiveOverlayCallBack}\n                    updateProjects={updateProjectListingCallBack}\n                    props={props}\n                  />\n                </button>\n              )}\n            </div>\n          );\n        })}\n        {showMoveToActiveOverlay && (\n          <MoveProject closeOverlay={closeMoveToActiveOverlayCallBack} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ActiveProjects;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/completedProjects.js",["476","477"],"import checkCircle from \"../../assets/images/check circle white.png\";\nimport smileIcon from \"../../assets/images/smile.png\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { PROJECT_LISTING } from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\n\nconst CompletedProjects = ({ filterText, props }) => {\n  const { id } = useParams();\n\n  const [completedProjects, setCompletedProjects] = useState([]);\n  const [allCompletedProjects, setAllCompletedProjects] = useState([]);\n\n  const handleProjectClick = (projectId) => {\n    // const from = props.location.state || {\n    //   pathname: \"/project\",\n    //   state: {\n    //     projectId: projectId,\n    //   },\n    // };\n    // props.history.push(from);\n\n    const { from } = props.location.state || {\n      from: { pathname: `/projectDetail/${projectId}` },\n    };\n    props.history.push(from);\n  };\n\n  const fetchCompletedProjects = () => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", id);\n    helper.append(\"status\", \"Y\");\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        const projects = successResponse.data;\n        setCompletedProjects(projects);\n        setAllCompletedProjects(projects);\n      },\n      (errorResponse) => {\n        setCompletedProjects([]);\n        setAllCompletedProjects([]);\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchCompletedProjects();\n  }, [id]);\n\n  useEffect(() => {\n    if (filterText === \"\") {\n      setCompletedProjects(allCompletedProjects);\n    }\n\n    setCompletedProjects(\n      allCompletedProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n  }, [filterText]);\n\n  return (\n    <>\n      <div className=\"brandsBody productsBodyComplete\">\n        <div className=\"productList\">\n          {completedProjects.map((project) => {\n            return (\n              <div className=\"productList_single\" key={project.project_id}>\n                <div className=\"head\">\n                  <img\n                    className=\"productList_image\"\n                    src={project.logo}\n                    alt=\"\"\n                  />\n                  <div className=\"productList_details\">\n                    <div className=\"heading\">\n                      <h2\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => handleProjectClick(project.project_id)}\n                      >\n                        {project.title}\n                      </h2>\n                      <div className=\"inProg\">\n                        <span>Completed</span> <img src={checkCircle} alt=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                  <button className=\"smile\">\n                    <img src={smileIcon} alt=\"\" />\n                  </button>\n                </div>\n                <div className=\"foot\">\n                  <div className=\"foot_single\">\n                    <h3>Created</h3>\n                    <p>{project.created_datetime}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Started</h3>\n                    <p>{project.start_date}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Completed</h3>\n                    <p>{project.completion_date}</p>\n                  </div>\n                  <div className=\"foot_single\">\n                    <h3>Design Recieved</h3>\n                    <p>{project.design_received}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompletedProjects;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/activeProjectOptionMenu.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/queueProjectOptionMenu.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/moveProject.js",["478"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/optionMenuHelper.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/draftProjects.js",["479","480","481"],"import moveToActiveIcon from \"../../assets/images/icon Move to active.png\";\nimport gearIcon from \"../../assets/images/gear.png\";\n\nimport { useState, useEffect } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  CLIENT_ALLOWED_PROJECTS,\n  PROJECT_LISTING,\n  PROJECT_STATUS_UPDATE,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { useParams } from \"react-router\";\nimport { OptionMenuHelper } from \"../project/optionMenuHelper\";\nimport duplicateProjectIcon from \"../../assets/images/icon Duplicate project.png\";\nimport editIcon from \"../../assets/images/brand-listing-icon/icon Edit project.png\";\nimport deleteIcon from \"../../assets/images/brand-listing-icon/icon Delete project.png\";\nimport MoveProject from \"./moveProject\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport { isAccountPaused } from \"../../helper/accountHelper\";\nimport { useSelector } from \"react-redux\";\n\nconst DraftProjects = ({ filterText, props }) => {\n  const { id } = useParams();\n\n  const [projects, setProjects] = useState([]);\n  const [allProjects, setAllProjects] = useState([]);\n  const [showMoveToActiveOverlay, setShowMoveToActiveOverlay] = useState(false);\n  const [projectIdToMoveActive, setProjectIdToMoveActive] = useState(\"\");\n  const headerSettings = useSelector((state) => state.headerSettings);\n\n  const fetchProjects = (projectStatus) => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", id);\n    helper.append(\"status\", projectStatus);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        const projects = successResponse.data;\n        if (projectStatus === \"D\") {\n          setProjects(projects);\n          setAllProjects(projects);\n        }\n      },\n      (errorResponse) => {\n        setProjects([]);\n      }\n    );\n  };\n\n  const updateProjectsCallBack = () => {\n    fetchProjects(\"D\");\n  };\n\n  const closeMoveToActiveOverlayCallBack = (projectId = \"\") => {\n    if (projectId !== \"\" && projectIdToMoveActive !== \"\" && projectId !== 0) {\n      // update project status to active\n      updateProjectStatus(projectId, \"D\");\n      updateProjectStatus(projectIdToMoveActive, \"I\");\n    }\n\n    setShowMoveToActiveOverlay(false);\n  };\n\n  const handleProjectClick = (projectId) => {\n    const { from } = props.location.state || {\n      from: { pathname: `/projectDetail/${projectId}` },\n    };\n    props.history.push(from);\n  };\n\n  const updateProjectStatus = (projectId, status) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"status\", status);\n\n    GeneralServices.postRequest(helper, PROJECT_STATUS_UPDATE).then(\n      (successResponse) => {\n        fetchProjects(\"D\");\n      }\n    );\n  };\n\n  const showMoveToActive = (projectId = \"\") => {\n    setProjectIdToMoveActive(projectId);\n    fetchUserAllowedProjects(projectId);\n    // setShowMoveToActiveOverlay(true);\n  };\n\n  const fetchUserAllowedProjects = (projectIdToMove) => {\n    var helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n\n    GeneralServices.postRequest(helper, CLIENT_ALLOWED_PROJECTS).then(\n      (successResponse) => {\n        if (\n          successResponse.message_key == \"successful_request\" &&\n          successResponse.data.length > 0\n        ) {\n          let allowedProjects = successResponse.data[0].active_task_allowed;\n          let currentlyActiveProjects =\n            successResponse.data[0].Current_projects_in_Queue;\n\n          if (currentlyActiveProjects >= allowedProjects) {\n            setShowMoveToActiveOverlay(true);\n          } else if (currentlyActiveProjects < allowedProjects) {\n            updateProjectStatus(projectIdToMove, \"I\");\n          }\n        }\n      },\n      (errorResponse) => {\n        console.log(\"failed to move task\");\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchProjects(\"D\");\n  }, [id]);\n\n  useEffect(() => {\n    if (filterText === \"\") {\n      setProjects(allProjects);\n    }\n\n    setProjects(\n      allProjects.filter((project) => {\n        return project.title.includes(filterText);\n      })\n    );\n  }, [filterText]);\n\n  return (\n    <>\n      <div className=\"brandsBody productsBody\">\n        <h4 className=\"productsBody_head\">\n          Drafts <span>({projects.length})</span>\n        </h4>\n        {projects.map((project) => {\n          return (\n            <div className=\"productList\" key={project.project_id}>\n              <div className=\"productList_single\">\n                <img className=\"productList_image\" src={project.logo} alt=\"\" />\n                <div className=\"productList_details\">\n                  <div className=\"heading\">\n                    <h2\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => handleProjectClick(project.project_id)}\n                    >\n                      {project.title}\n                    </h2>\n                  </div>\n                  <img\n                    src=\"./images/project person.png\"\n                    alt=\"\"\n                    className=\"person\"\n                  />\n                </div>\n                {!isAccountPaused(headerSettings) && (\n                  <button className=\"option\">\n                    <img src={gearIcon} alt=\"\" /> <span>Options</span>\n                    <ul className=\"optionMenu\">\n                      <h3>Options</h3>\n                      <li\n                        onClick={() => {\n                          OptionMenuHelper.handleDuplicateProjectClick(\n                            project.project_id,\n                            props\n                          );\n                        }}\n                      >\n                        <img src={duplicateProjectIcon} alt=\"\" />\n                        Duplicate project\n                      </li>\n                      <li\n                        onClick={() => {\n                          OptionMenuHelper.handleEditProjectClick(\n                            project.project_id,\n                            props\n                          );\n                        }}\n                      >\n                        <img src={editIcon} alt=\"\" />\n                        Edit project\n                      </li>\n                      <li\n                        onClick={() => showMoveToActive(project.project_id)}\n                        className=\"mta\"\n                      >\n                        <img src={moveToActiveIcon} alt=\"\" />\n                        Move to active\n                      </li>\n                      <li\n                        onClick={() =>\n                          OptionMenuHelper.updateProjectStatus(\n                            project.project_id,\n                            \"Q\",\n                            \"Project moved to Queue successfully\",\n                            () => fetchProjects(\"D\")\n                          )\n                        }\n                      >\n                        <img src={moveToActiveIcon} alt=\"\" />\n                        Move to Queue\n                      </li>\n                      <li\n                        onClick={() =>\n                          OptionMenuHelper.deleteProject(\n                            project.project_id,\n                            updateProjectsCallBack\n                          )\n                        }\n                      >\n                        <img src={deleteIcon} alt=\"\" />\n                        Delete project\n                      </li>\n                    </ul>\n                  </button>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        {showMoveToActiveOverlay && (\n          <MoveProject closeOverlay={closeMoveToActiveOverlayCallBack} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DraftProjects;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/createProject.js",["482","483","484","485"],"import backIcon from \"../../assets/images/create-project/backSymbol.png\";\n\nimport SideNotes from \"../../components/createProject/sideNotes\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CategorySearch from \"../../components/createProject/categorySearch\";\nimport {\n  IMAGE_SPECIFICATIONS_LISTING,\n  PROJECT_ADD,\n} from \"../../jwt/_services/axiousURL\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport FileDeliverables from \"../../components/createProject/fileDeliverables\";\nimport AssociatedBrand from \"../../components/createProject/associatedBrand\";\nimport Attachments from \"../../components/createProject/attachments\";\nimport CreateNewBrand from \"../../components/brand/createNewBrand\";\nimport swal from \"sweetalert\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveBrandId } from \"../../redux/headerSettings/Action\";\nimport Axios from \"axios\";\n\nconst CreateProject = (props) => {\n  let history = useHistory();\n  const scrollRef = useRef(null);\n  const dispatch = useDispatch();\n  const [allImageSpecifications, setAllImageSpecifications] = useState([]);\n  const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(\"\");\n  const [filteredImgSpecs, setFilteredImgSpecs] = useState([]);\n  const [showCreateBrand, setShowCreateBrand] = useState(false);\n  const [shouldUpdateBrand, setShouldUpdateBrand] = useState(false);\n  const [saveAsDraftSubmit, setSaveAsDraftSubmit] = useState(false);\n\n  const fetchImageSpecificatins = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, IMAGE_SPECIFICATIONS_LISTING).then(\n      (successResponse) => {\n        var imageSpecs = successResponse.data;\n        setAllImageSpecifications(imageSpecs);\n      }\n    );\n  };\n\n  /**\n   *\n   * @param {*} subCategoryId\n   * Callback from Category Search component\n   * Selected SubCategory ID is received\n   */\n  const setSelectedSubCategoryCallBack = (subCategoryId) => {\n    setSelectedSubCategoryId(subCategoryId);\n  };\n\n  /**\n   *\n   * Callback from associated brand component\n   * Create brand overlay show and scroll to create brand\n   *\n   */\n  const showCreateBrandOverlayCallBack = () => {\n    setShowCreateBrand(true);\n    executeScroll();\n  };\n\n  /**\n   * Scrolls to the view\n   * @returns\n   */\n  const executeScroll = () =>\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n  /**\n   *\n   * @param callFetchBrands\n   * Callback from CreateBrandOverlay\n   * if brand iis added callFetchBrands will be true\n   * if brand is added notify associated brands to update their brands\n   *\n   */\n  const closeCreateNewBrandOverlay = (callFetchBrands = false) => {\n    setShowCreateBrand(false);\n    if (callFetchBrands) setShouldUpdateBrand(true);\n  };\n\n  useEffect(() => {\n    fetchImageSpecificatins();\n  }, []);\n\n  /**\n   *\n   * Use Effect for showing Image Specification Drop Down\n   * This will call when user select the sub category\n   *\n   */\n  useEffect(() => {\n    if (selectedSubCategoryId === 0 || selectedSubCategoryId === \"\") {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    if (allImageSpecifications.length < 1) {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    var imgSpecs = allImageSpecifications.filter((singleImgSpec) =>\n      singleImgSpec.sub_category_id == selectedSubCategoryId ? true : false\n    );\n    setFilteredImgSpecs(imgSpecs);\n  }, [selectedSubCategoryId]);\n\n  return (\n    <>\n      <section className=\"cnp\" ref={scrollRef}>\n        {showCreateBrand && (\n          <CreateNewBrand crossButtonCallBack={closeCreateNewBrandOverlay} />\n        )}\n        <div className=\"bg-black\"></div>\n        <main className=\"cont\">\n          <main className=\"inCont\">\n            <div onClick={() => history.goBack()} className=\"backText\">\n              <img src={backIcon} alt=\"backSymbol\" />\n              <span>Back</span>\n            </div>\n            <h1 className=\"cnp-head\">Create a new project</h1>\n\n            <Formik\n              values={{}}\n              initialValues={{\n                title: \"\",\n                subCategoryId: \"\",\n                imageSpecification: \"\",\n                description: \"\",\n                deliverable: \"\",\n                associatedBrand: \"\",\n                attachments: \"\",\n              }}\n              validationSchema={Yup.object().shape({\n                title: Yup.string().required(\"Project title is required\"),\n                subCategoryId: Yup.number().required(\"Please select category\"),\n                imageSpecification: Yup.string(),\n                description: Yup.string().required(),\n                deliverable: Yup.string().required(\n                  \"Please Select File deliverables type \"\n                ),\n                associatedBrand: Yup.string().required(\n                  \"Please Select brand of the project \"\n                ),\n              })}\n              onSubmit={(values, actions) => {\n                // console.log(JSON.stringify(values.deliverable));\n                // console.log(\"valuesssssss bitcch\", values);\n                // return;\n                setSaveAsDraftSubmit(false);\n                var helper = FormDataHelper();\n\n                helper.append(\"title\", values.title);\n                helper.append(\"sub_category_id\", values.subCategoryId);\n                helper.append(\n                  \"image_specfication_id\",\n                  values.imageSpecification\n                );\n                helper.append(\"description\", values.description);\n                helper.append(\n                  \"file_deliverables\",\n                  JSON.stringify(values.deliverable)\n                );\n                helper.append(\"brand_id\", values.associatedBrand);\n                if (saveAsDraftSubmit) helper.append(\"is_draft\", \"1\");\n\n                if (\n                  values.hasOwnProperty(\"attachments\") != \"\" &&\n                  values.attachments.length > 0\n                ) {\n                  for (var imageFile of values.attachments) {\n                    helper.append(\"attachments[]\", imageFile);\n                  }\n                }\n\n                GeneralServices.postRequest(helper, PROJECT_ADD).then(\n                  (successResponse) => {\n                    swal(\"Project has created!\", {\n                      icon: \"success\",\n                    });\n\n                    dispatch(setActiveBrandId(values.associatedBrand));\n                    const { from } = props.location.state || {\n                      from: { pathname: `/brand/${values.associatedBrand}` },\n                    };\n                    props.history.push(from);\n                  },\n                  (error) => {\n                    actions.setSubmitting(false);\n                    actions.setStatus(error);\n                  }\n                );\n                // return;\n              }}\n            >\n              {({ isSubmitting, submitForm, setFieldValue, values }) => (\n                <Form name=\"parentForm\">\n                  <div className=\"inputField\">\n                    <label className=\"inputLabel\" htmlFor=\"projTitle\">\n                      Project title\n                    </label>\n                    <br />\n                    <Field\n                      type=\"text\"\n                      className=\"input\"\n                      name=\"title\"\n                      id=\"projTitle\"\n                      placeholder=\"Roller Blading Monkey\"\n                    />\n                    <ErrorMessage\n                      name=\"title\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <CategorySearch\n                    getSelectedSubCategoryId={setSelectedSubCategoryCallBack}\n                    setFieldValue={setFieldValue}\n                  >\n                    <ErrorMessage\n                      name=\"subCategoryId\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </CategorySearch>\n\n                  {filteredImgSpecs.length > 0 && (\n                    <div className=\"inputField\">\n                      <label className=\"inputLabel required\" htmlFor=\"industry\">\n                        Image Specification\n                      </label>\n                      <br />\n                      <div className=\"inputDiv\">\n                        <Field\n                          as=\"select\"\n                          className=\"input\"\n                          name=\"imageSpecification\"\n                        >\n                          <option value=\"\">Select image specification</option>\n                          {filteredImgSpecs.map((imgSpec) => {\n                            return (\n                              <option key={imgSpec.id} value={imgSpec.id}>\n                                {imgSpec.title}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"inputField description\">\n                    <label htmlFor=\"desc\" className=\"inputLabel\">\n                      Description\n                    </label>\n                    <SideNotes />\n                    <p className=\"format-inst\">\n                      Format your paragraphs and create checklists to make your\n                      description easy to read and follow. Well written\n                      instructions = better designs.\n                    </p>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      config={{\n                        removePlugins: [\n                          \"ImageUpload\",\n                          \"EasyImage\",\n                          \"MediaEmbed\",\n                          \"Link\",\n                          \"CKFinder\",\n                        ],\n                      }}\n                      data=\"<p>Insert your text here</p>\"\n                      onChange={(event, editor) => {\n                        setFieldValue(\"description\", editor.getData());\n                      }}\n                    />\n\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <Attachments setFieldValue={setFieldValue} />\n\n                  <FileDeliverables>\n                    <ErrorMessage\n                      name=\"deliverable\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </FileDeliverables>\n                  <AssociatedBrand\n                    shouldUpdateBrand={shouldUpdateBrand}\n                    showCreateBrandOverLay={showCreateBrandOverlayCallBack}\n                    setFieldValue={setFieldValue}\n                  >\n                    <ErrorMessage\n                      name=\"associatedBrand\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </AssociatedBrand>\n                  <button\n                    className=\"createBrandBtn\"\n                    type=\"button\"\n                    // disabled={isSubmitting}\n                    onClick={() => {\n                      setSaveAsDraftSubmit(false);\n                      submitForm();\n                    }}\n                  >\n                    Create Project\n                  </button>\n                  <button\n                    style={{ marginTop: \"10px\" }}\n                    className=\"createBrandBtn\"\n                    id=\"second-button\"\n                    type=\"button\"\n                    // disabled={isSubmitting}\n                    onClick={() => {\n                      setSaveAsDraftSubmit(true);\n                      submitForm();\n                    }}\n                  >\n                    Save as Draft\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </main>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default CreateProject;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/sideNotes.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/categorySearch.js",["486","487","488","489"],"import { useEffect, useState } from \"react\";\nimport checkCircle from \"../../assets/images/check circle.png\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  CATEGORIES_LISTING,\n  SUB_CATEGORIES_LISTING,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport searchIcon from \"../../assets/images/brand-page-icons/magnifying-glass.png\";\nimport useFocus from \"../customHooks/useFocus\";\n\nconst CategorySearch = ({\n  getSelectedSubCategoryId,\n  setFieldValue,\n  isEditMode = false,\n  categoryTitleParam,\n  categoryIdParam,\n  children,\n}) => {\n  const [inputRef, setInputFocus] = useFocus();\n\n  const [allCategories, setAllCategories] = useState([]); // all Categories\n  const [allSubCategories, setAllSubCategories] = useState([]); // all sub categories\n  const [searchListingData, setSearchListingData] = useState([]); // combine data categories and sub categories for drop down\n\n  const [showSearchListing, setShowSearchListing] = useState(false); // show drop down\n  const [showSelectedSubCategory, setShowSelectedSubCategory] = useState(false); // show selected category\n  const [selectedSubCategory, setSelectedSubCategory] = useState(\"\"); // selected sub category\n  const [searchText, setSearchText] = useState(\"\"); // search text\n\n  const fetchCategories = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, CATEGORIES_LISTING).then(\n      (successResponse) => {\n        var categories = successResponse.data;\n        setAllCategories(categories);\n      }\n    );\n  };\n  const fetchSubCategories = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, SUB_CATEGORIES_LISTING).then(\n      (successResponse) => {\n        var subCategories = successResponse.data;\n        setAllSubCategories(subCategories);\n      }\n    );\n  };\n\n  const readyDataForSearchListing = () => {\n    if (allCategories.length < 1) {\n      setSearchListingData([]);\n      return;\n    }\n    var tempArray = Array();\n\n    allCategories.forEach((singleCategory) => {\n      var relatedSubCat = allSubCategories.filter((subCategory) => {\n        if (\n          subCategory.category_id === singleCategory.id &&\n          (subCategory.title.toLowerCase().includes(searchText.toLowerCase()) ||\n            singleCategory.title\n              .toLowerCase()\n              .includes(searchText.toLowerCase()))\n        )\n          return true;\n        else return false;\n      });\n\n      if (relatedSubCat.length > 0) {\n        var tempObj = {\n          categoryId: singleCategory.id,\n          categoryTitle: singleCategory.title,\n          subCategories: relatedSubCat,\n        };\n        tempArray.push(tempObj);\n      }\n    });\n    setSearchListingData(tempArray);\n  };\n\n  const handleSubCategoryClick = (e) => {\n    var categoryId = e.target.getAttribute(\"data-value\");\n    var categoryTitle = e.target.getAttribute(\"data-title\");\n\n    getSelectedSubCategoryId(categoryId);\n    setFieldValue(\"subCategoryId\", categoryId);\n    setSelectedSubCategory(categoryTitle);\n\n    setShowSearchListing(false);\n    setShowSelectedSubCategory(true);\n  };\n\n  const handleChangeCategoryClick = () => {\n    getSelectedSubCategoryId(\"\");\n    setFieldValue(\"subCategoryId\", \"\");\n    setSelectedSubCategory(\"\");\n    setInputFocus();\n    setShowSearchListing(true);\n    setShowSelectedSubCategory(false);\n\n    return false; // because of anchor tag\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchSubCategories();\n  }, []);\n\n  useEffect(() => {\n    readyDataForSearchListing();\n  }, [allCategories, allSubCategories, searchText]);\n\n  useEffect(() => {\n    if (isEditMode && categoryIdParam) {\n      getSelectedSubCategoryId(categoryIdParam);\n      setFieldValue(\"subCategoryId\", categoryIdParam);\n      setSelectedSubCategory(categoryTitleParam);\n\n      setShowSearchListing(false);\n      setShowSelectedSubCategory(true);\n    }\n  }, [isEditMode, categoryTitleParam, categoryIdParam]);\n\n  return (\n    <>\n      <div className=\"inputField\">\n        <label htmlFor=\"catInput\" className=\"inputLabel\">\n          Design Catagory\n        </label>\n\n        <div className=\"input desCat\">\n          {showSelectedSubCategory && (\n            <div className=\"desCat_selected active\">\n              <img src={checkCircle} alt=\"check circle\" />\n              <p>\n                {selectedSubCategory}{\" \"}\n                <a onClick={handleChangeCategoryClick}>Change catagory</a>\n              </p>\n            </div>\n          )}\n          <input\n            type=\"text\"\n            id=\"catInput\"\n            value={searchText}\n            onBlur={() => setShowSearchListing(false)}\n            onChange={(e) => setSearchText(e.target.value)}\n            // onClick={() => setShowSearchListing(!showSearchListing)}\n            ref={inputRef}\n            onFocus={() => setShowSearchListing(true)}\n          />\n          <img className=\"searchCat\" src={searchIcon} alt=\"magnifying-glass\" />\n          {showSearchListing && (\n            <div className=\"cat active\">\n              <div className=\"cat-block\">\n                {searchListingData.map((category) => {\n                  return (\n                    <div key={category.categoryId}>\n                      <h3 className=\"cat-head\">{category.categoryTitle}</h3>\n                      <ul className=\"cat-ul\">\n                        {category.subCategories.map((subCategory) => {\n                          return (\n                            <li\n                              key={subCategory.id}\n                              onMouseDown={handleSubCategoryClick}\n                              data-value={subCategory.id}\n                              data-title={subCategory.title}\n                            >\n                              {subCategory.title}\n                            </li>\n                          );\n                        })}\n                      </ul>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n          {children}\n        </div>\n        {/* <p className=\"disclaim\">\n          <span>Disclaimer</span> : Poster may cause project to exceed 48 hour\n          delivery time\n        </p> */}\n      </div>\n    </>\n  );\n};\n\nexport default CategorySearch;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/fileDeliverables.js",["490"],"import checkCircle from \"../../assets/images/check circle.png\";\nimport anyFileIcon from \"../../assets/images/create-project/any file.png\";\nimport photoshopIcon from \"../../assets/images/create-project/photoshop.png\";\nimport pdfIcon from \"../../assets/images/create-project/pdf.png\";\nimport inDesignIcon from \"../../assets/images/create-project/inDesign.png\";\nimport illustratorIcon from \"../../assets/images/create-project/illustrator.png\";\nimport { Field } from \"formik\";\n\nconst FileDeliverables = ({ children }) => {\n  return (\n    <>\n      <div className=\"inputField\">\n        <label className=\"inputLabel\">File deliverables</label>\n        <p className=\"format-inst\">Select which source file type you want.</p>\n        <div className=\"deliverables\">\n          <Field type=\"checkbox\" name=\"deliverable\" hidden id=\"any\" value=\"1\" />\n          <label htmlFor=\"any\" className=\"deliverables_single\">\n            <img src={anyFileIcon} alt=\"any file\" />\n            <h3>Any</h3>\n            <img src={checkCircle} alt=\"check-circle\" />\n          </label>\n\n          <Field type=\"checkbox\" name=\"deliverable\" hidden id=\"psd\" value=\"2\" />\n          <label htmlFor=\"psd\" className=\"deliverables_single\">\n            <img src={photoshopIcon} alt=\"psd file\" />\n            <h3>Photoshop</h3>\n            <img src={checkCircle} alt=\"check-circle\" />\n          </label>\n\n          <Field\n            type=\"checkbox\"\n            name=\"deliverable\"\n            hidden\n            id=\"illustrator\"\n            value=\"3\"\n            hidden\n          />\n          <label htmlFor=\"illustrator\" className=\"deliverables_single\">\n            <img src={illustratorIcon} alt=\"illustrator file\" />\n            <h3>Illustrator</h3>\n            <img src={checkCircle} alt=\"check-circle\" />\n          </label>\n\n          <Field\n            type=\"checkbox\"\n            name=\"deliverable\"\n            hidden\n            id=\"indesign\"\n            value=\"4\"\n          />\n          <label htmlFor=\"indesign\" className=\"deliverables_single\">\n            <img src={inDesignIcon} alt=\"indesign file\" />\n            <h3>inDesign</h3>\n            <img src={checkCircle} alt=\"check-circle\" />\n          </label>\n\n          <Field type=\"checkbox\" name=\"deliverable\" hidden id=\"pdf\" value=\"5\" />\n          <label htmlFor=\"pdf\" className=\"deliverables_single\">\n            <img src={pdfIcon} alt=\"pdf file\" />\n            <h3>PDF</h3>\n            <img src={checkCircle} alt=\"check-circle\" />\n          </label>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default FileDeliverables;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/associatedBrand.js",["491","492"],"import brandIcon from \"../../assets/images/brand-icon.png\";\nimport activeBrandIcon from \"../../assets/images/active-brand-icon.png\";\nimport createNewBrandIcon from \"../../assets/images/create-project/create-new-brand.png\";\nimport { useEffect } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BRANDS_LISTING } from \"../../jwt/_services/axiousURL\";\nimport { useState } from \"react\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { useDispatch } from \"react-redux\";\nimport { setBrandList } from \"../../redux/headerSettings/Action\";\n\nconst AssociatedBrand = ({\n  showCreateBrandOverLay,\n  shouldUpdateBrand,\n  brand = \"\",\n  setFieldValue,\n  children,\n}) => {\n  const clientId = AuthenticationService.currentUserValue.id;\n  const [brands, setBrands] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleCreateBrandClick = () => {\n    showCreateBrandOverLay();\n  };\n\n  const handleBrandClick = (e) => {\n    var brandId = e.target.getAttribute(\"data-value\");\n    setFieldValue(\"associatedBrand\", brandId);\n    setSelectedBrand(brandId);\n  };\n\n  const fetchBrands = () => {\n    var helper = FormDataHelper();\n    helper.append(\"client_id\", clientId);\n    GeneralServices.postRequest(helper, BRANDS_LISTING).then(\n      (successResponse) => {\n        var brands = successResponse.data;\n        setBrands(brands);\n        dispatch(setBrandList(brands));\n      }\n    );\n  };\n  useEffect(() => {\n    if (brands.length < 1 || shouldUpdateBrand) {\n      fetchBrands();\n      shouldUpdateBrand = false;\n    }\n  }, [shouldUpdateBrand]);\n\n  useEffect(() => {\n    setSelectedBrand(brand);\n  }, [brand]);\n\n  return (\n    <>\n      <div className=\"inputField\">\n        <p className=\"inputLabel\">Associated brand</p>\n        <div className=\"assocBrands\">\n          {brands.length > 0 &&\n            brands.map((brand) => {\n              return (\n                <div\n                  className=\"assocBrands_single\"\n                  key={brand.brand_id}\n                  onClick={handleBrandClick}\n                  data-value={brand.brand_id}\n                >\n                  <input type=\"radio\" name=\"associatedBrand\" hidden />\n                  <div className=\"assocBrands_head\" data-value={brand.brand_id}>\n                    <img\n                      src={\n                        brand.brand_id == selectedBrand\n                          ? activeBrandIcon\n                          : brandIcon\n                      }\n                      data-value={brand.brand_id}\n                      alt=\"brand\"\n                    />\n                    <label data-value={brand.brand_id}>{brand.title}</label>\n                  </div>\n                  <p\n                    data-value={brand.brand_id}\n                  >{`Used in ${brand.used_id} projects`}</p>\n                </div>\n              );\n            })}\n          <div className=\"assocBrands_single\" onClick={handleCreateBrandClick}>\n            <div className=\"assocBrands_head\">\n              <img src={createNewBrandIcon} alt=\"create brand\" />\n              New Brand\n            </div>\n          </div>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default AssociatedBrand;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/createProject/attachments.js",["493","494","495","496"],"import React, { useCallback, useEffect } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport { useState } from \"react\";\nimport uploadIcon from \"../../assets/images/new-brand-icons/upload.png\";\nimport AttachmentGuidlines from \"../brand/attachmentGuidlines\";\n\nconst Attachments = ({ setFieldValue, showGuideLines = false }) => {\n  const [count, setCount] = useState(1);\n  const [acceptedFilesState, setAcceptedFilesState] = useState([]);\n  const handleFileUploadChange = (acceptedFiles) => {\n    let tmp = [...acceptedFilesState];\n    let pCount = count;\n    acceptedFiles.forEach((element) => {\n      let tmpObj = {\n        id: pCount,\n        file: element,\n      };\n      tmp.push(tmpObj);\n      pCount++;\n    });\n    setCount(pCount);\n    setAcceptedFilesState(tmp);\n  };\n\n  // const onDrop = handleChange;\n  const onDrop = handleFileUploadChange;\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n  });\n\n  const handleFileDelete = (fileId) => {\n    let tmpArr = [...acceptedFilesState];\n    tmpArr = tmpArr.filter((singleFile) => singleFile.id != fileId);\n    setAcceptedFilesState(tmpArr);\n  };\n\n  useEffect(() => {\n    let tmp = Array();\n    acceptedFilesState.forEach((element) => tmp.push(element.file));\n    setFieldValue(\"attachments\", tmp);\n  }, [acceptedFilesState]);\n\n  return (\n    <>\n      <div className=\"inputField\">\n        <p className=\"inputLabel\">Attachments</p>\n        {showGuideLines && <AttachmentGuidlines />}\n        <div {...getRootProps()}>\n          <div className=\"attach-cont\">\n            <div>\n              <input name=\"attachment\" id=\"atch\" hidden {...getInputProps()} />\n            </div>\n            <label>\n              <img src={uploadIcon} alt=\"\" /> Upload files\n            </label>\n            {isDragActive ? (\n              <p>Drop the files here ...</p>\n            ) : (\n              <p>\n                Upload or drag & drop any images, files, or examples that may be\n                helpful explaining your project here.\n              </p>\n            )}\n          </div>\n        </div>\n        <div>\n          <ul className=\"file-list\">\n            {acceptedFilesState.map((singleFile) => {\n              return (\n                <li key={singleFile.id}>\n                  {singleFile.file.name}\n                  <span\n                    className=\"remove-list\"\n                    onClick={() => handleFileDelete(singleFile.id)}\n                  >\n                    X\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Attachments;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/customHooks/useFocus.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/editProject.js",["497","498","499","500","501"],"import backIcon from \"../../assets/images/create-project/backSymbol.png\";\n\nimport SideNotes from \"../../components/createProject/sideNotes\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CategorySearch from \"../../components/createProject/categorySearch\";\nimport {\n  IMAGE_SPECIFICATIONS_LISTING,\n  PROJECT_LISTING,\n  PROJECT_UPDATE,\n} from \"../../jwt/_services/axiousURL\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport FileDeliverables from \"../../components/createProject/fileDeliverables\";\nimport AssociatedBrand from \"../../components/createProject/associatedBrand\";\nimport Attachments from \"../../components/createProject/attachments\";\nimport CreateNewBrand from \"../../components/brand/createNewBrand\";\nimport swal from \"sweetalert\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveBrandId } from \"../../redux/headerSettings/Action\";\nimport { useParams } from \"react-router\";\nimport OldAttachments from \"../../components/project/oldAttachments\";\n\nconst EditProject = (props) => {\n  let history = useHistory();\n  const { id } = useParams();\n  const scrollRef = useRef(null);\n  const dispatch = useDispatch();\n  const [allImageSpecifications, setAllImageSpecifications] = useState([]);\n  const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(\"\");\n  const [filteredImgSpecs, setFilteredImgSpecs] = useState([]);\n  const [showCreateBrand, setShowCreateBrand] = useState(false);\n  const [shouldUpdateBrand, setShouldUpdateBrand] = useState(false);\n  const [project, setProject] = useState({\n    title: \"\",\n    description: \"\",\n    attachments: [],\n  });\n\n  const fetchImageSpecificatins = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, IMAGE_SPECIFICATIONS_LISTING).then(\n      (successResponse) => {\n        var imageSpecs = successResponse.data;\n        setAllImageSpecifications(imageSpecs);\n      }\n    );\n  };\n\n  /**\n   *\n   * @param {*} subCategoryId\n   * Callback from Category Search component\n   * Selected SubCategory ID is received\n   */\n  const setSelectedSubCategoryCallBack = (subCategoryId) => {\n    setSelectedSubCategoryId(subCategoryId);\n  };\n\n  /**\n   *\n   * Callback from associated brand component\n   * Create brand overlay show and scroll to create brand\n   *\n   */\n  const showCreateBrandOverlayCallBack = () => {\n    setShowCreateBrand(true);\n    executeScroll();\n  };\n\n  /**\n   * Scrolls to the view\n   * @returns\n   */\n  const executeScroll = () =>\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n  /**\n   *\n   * @param callFetchBrands\n   * Callback from CreateBrandOverlay\n   * if brand iis added callFetchBrands will be true\n   * if brand is added notify associated brands to update their brands\n   *\n   */\n  const closeCreateNewBrandOverlay = (callFetchBrands = false) => {\n    setShowCreateBrand(false);\n    if (callFetchBrands) setShouldUpdateBrand(true);\n  };\n\n  const fetchProject = () => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", id);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        var project = successResponse.data;\n        if (project.length > 0) {\n          let deliverableArr = project[0][\"file_deliverables\"];\n          let deliverableIdsArr = Array();\n          deliverableArr.forEach((element) => {\n            deliverableIdsArr.push(element[\"id\"]);\n          });\n\n          project[0][\"file_deliverables\"] = deliverableIdsArr;\n          console.log(project);\n          setProject(project[0]);\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchImageSpecificatins();\n  }, []);\n\n  /**\n   *\n   * Use Effect for showing Image Specification Drop Down\n   * This will call when user select the sub category\n   *\n   */\n  useEffect(() => {\n    if (selectedSubCategoryId === 0 || selectedSubCategoryId === \"\") {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    if (allImageSpecifications.length < 1) {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    var imgSpecs = allImageSpecifications.filter((singleImgSpec) =>\n      singleImgSpec.sub_category_id == selectedSubCategoryId ? true : false\n    );\n    setFilteredImgSpecs(imgSpecs);\n  }, [selectedSubCategoryId]);\n\n  /**\n   * USE EFFECT FOR FETCHING PROJECT DETAILS\n   */\n\n  useEffect(() => {\n    fetchProject();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }, []);\n\n  return (\n    <>\n      <section className=\"cnp\" ref={scrollRef}>\n        {showCreateBrand && (\n          <CreateNewBrand crossButtonCallBack={closeCreateNewBrandOverlay} />\n        )}\n        <div className=\"bg-black\"></div>\n        <main className=\"cont\">\n          <main className=\"inCont\">\n            <div onClick={() => history.goBack()} className=\"backText\">\n              <img src={backIcon} alt=\"backSymbol\" />\n              <span>Back</span>\n            </div>\n            <h1 className=\"cnp-head\">Edit project</h1>\n\n            <Formik\n              enableReinitialize={true}\n              initialValues={{\n                title: project.title,\n                subCategoryId: project.sub_category_id,\n                imageSpecification: \"\",\n                description: project.description,\n                deliverable: project.file_deliverables,\n                associatedBrand: project.brand_id,\n                attachments: \"\",\n              }}\n              validationSchema={Yup.object().shape({\n                title: Yup.string().required(\"Project title is required\"),\n                subCategoryId: Yup.number().required(\"Please select category\"),\n                imageSpecification: Yup.string(),\n                description: Yup.string().required(),\n                deliverable: Yup.string().required(\n                  \"Please Select File deliverables type \"\n                ),\n                associatedBrand: Yup.string().required(\n                  \"Please Select brand of the project \"\n                ),\n              })}\n              onSubmit={(values, actions) => {\n                var helper = FormDataHelper();\n\n                helper.append(\"project_id\", id);\n                helper.append(\"title\", values.title);\n                helper.append(\"sub_category_id\", values.subCategoryId);\n                helper.append(\n                  \"image_specfication_id\",\n                  values.imageSpecification\n                );\n                helper.append(\"description\", values.description);\n                helper.append(\n                  \"file_deliverables\",\n                  JSON.stringify(values.deliverable)\n                );\n                helper.append(\"brand_id\", values.associatedBrand);\n\n                if (\n                  values.hasOwnProperty(\"attachments\") != \"\" &&\n                  values.attachments.length > 0\n                ) {\n                  for (var imageFile of values.attachments) {\n                    helper.append(\"attachments[]\", imageFile);\n                  }\n                }\n\n                GeneralServices.postRequest(helper, PROJECT_UPDATE).then(\n                  (successResponse) => {\n                    swal(successResponse.message, {\n                      icon: \"success\",\n                    });\n\n                    dispatch(setActiveBrandId(values.associatedBrand));\n                    const { from } = props.location.state || {\n                      from: { pathname: `/brand/${values.associatedBrand}` },\n                    };\n                    props.history.push(from);\n                  },\n                  (error) => {\n                    actions.setSubmitting(false);\n                    actions.setStatus(error);\n                  }\n                );\n                // return;\n              }}\n            >\n              {({ isSubmitting, setFieldValue, values }) => (\n                <Form name=\"parentForm\">\n                  <div className=\"inputField\">\n                    <label className=\"inputLabel\" htmlFor=\"projTitle\">\n                      Project title\n                    </label>\n                    <br />\n                    <Field\n                      type=\"text\"\n                      className=\"input\"\n                      name=\"title\"\n                      id=\"projTitle\"\n                      placeholder=\"Roller Blading Monkey\"\n                    />\n                    <ErrorMessage\n                      name=\"title\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <CategorySearch\n                    getSelectedSubCategoryId={setSelectedSubCategoryCallBack}\n                    setFieldValue={setFieldValue}\n                    isEditMode={true}\n                    categoryTitleParam={project.subcategory_title}\n                    categoryIdParam={project.sub_category_id}\n                  >\n                    <ErrorMessage\n                      name=\"subCategoryId\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </CategorySearch>\n\n                  {filteredImgSpecs.length > 0 && (\n                    <div className=\"inputField\">\n                      <label className=\"inputLabel required\" htmlFor=\"industry\">\n                        Image Specification\n                      </label>\n                      <br />\n                      <div className=\"inputDiv\">\n                        <Field\n                          as=\"select\"\n                          className=\"input\"\n                          name=\"imageSpecification\"\n                        >\n                          <option value=\"\">Select image specification</option>\n                          {filteredImgSpecs.map((imgSpec) => {\n                            return (\n                              <option key={imgSpec.id} value={imgSpec.id}>\n                                {imgSpec.title}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"inputField description\">\n                    <label htmlFor=\"desc\" className=\"inputLabel\">\n                      Description\n                    </label>\n                    <SideNotes />\n                    <p className=\"format-inst\">\n                      Format your paragraphs and create checklists to make your\n                      description easy to read and follow. Well written\n                      instructions = better designs.\n                    </p>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      config={{\n                        removePlugins: [\n                          \"ImageUpload\",\n                          \"EasyImage\",\n                          \"MediaEmbed\",\n                          \"Link\",\n                          \"CKFinder\",\n                        ],\n                      }}\n                      data={values.description}\n                      onChange={(event, editor) => {\n                        setFieldValue(\"description\", editor.getData());\n                      }}\n                    />\n\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <Attachments setFieldValue={setFieldValue} />\n                  {project.attachments.length > 0 && (\n                    <OldAttachments attachmentsParam={project.attachments} />\n                  )}\n\n                  <FileDeliverables>\n                    <ErrorMessage\n                      name=\"deliverable\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </FileDeliverables>\n                  <AssociatedBrand\n                    shouldUpdateBrand={shouldUpdateBrand}\n                    showCreateBrandOverLay={showCreateBrandOverlayCallBack}\n                    brand={values.associatedBrand}\n                    setFieldValue={setFieldValue}\n                  >\n                    <ErrorMessage\n                      name=\"associatedBrand\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </AssociatedBrand>\n                  <button\n                    className=\"createBrandBtn\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Update Project\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </main>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default EditProject;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/oldAttachments.js",["502","503","504","505","506","507"],"import crossSignIcon from \"../../assets/images/new-brand-icons/cross-sign.png\";\nimport fileAttachmentIcon from \"../../assets/images/create-project/attach file.png\";\nimport { PROJECT_ATTACHMENT_DELETE } from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { useState } from \"react\";\n\nconst OldAttachments = ({\n  attachmentsParam,\n  deleteURL = PROJECT_ATTACHMENT_DELETE,\n}) => {\n  const [attachments, setAttachments] = useState(attachmentsParam);\n  const handleDeleteClick = (attachmentId) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        var helper = FormDataHelper();\n        if (deleteURL == PROJECT_ATTACHMENT_DELETE)\n          helper.append(\"attachment_id\", attachmentId);\n        else helper.append(\"id\", attachmentId);\n\n        GeneralServices.postRequest(helper, deleteURL).then(\n          (successResponse) => {\n            swal(successResponse.message, {\n              icon: \"success\",\n            });\n            updateAttachments(attachmentId);\n          }\n        );\n      } else {\n        console.log(\"User oppted to not delete the attachment\");\n      }\n    });\n  };\n\n  const updateAttachments = (attachmentId) => {\n    var newAttachments = attachments.filter((singleAttachment) => {\n      return singleAttachment.id != attachmentId;\n    });\n\n    setAttachments([...newAttachments]);\n  };\n\n  if (attachments.length > 0) {\n    return (\n      <>\n        <div className=\"old-attachmennt-cnt\">\n          {attachments.map((singleAttachment) => {\n            return (\n              <div className=\"item\" key={singleAttachment.id}>\n                <img src={fileAttachmentIcon} className=\"attachment-img\"></img>\n                <a\n                  className=\"attachment-link\"\n                  href={\n                    deleteURL == PROJECT_ATTACHMENT_DELETE\n                      ? singleAttachment.attachment\n                      : singleAttachment.url\n                  }\n                  download\n                  target=\"_blank\"\n                >\n                  {singleAttachment.file_name\n                    ? singleAttachment.file_name\n                    : \"Attachment\"}\n                </a>\n                <img\n                  src={crossSignIcon}\n                  onClick={() => handleDeleteClick(singleAttachment.id)}\n                  className=\"attachment-img last pointer\"\n                ></img>\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default OldAttachments;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/duplicateProject.js",["508","509","510","511","512"],"import backIcon from \"../../assets/images/create-project/backSymbol.png\";\n\nimport SideNotes from \"../../components/createProject/sideNotes\";\n\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport CategorySearch from \"../../components/createProject/categorySearch\";\nimport {\n  IMAGE_SPECIFICATIONS_LISTING,\n  PROJECT_ADD,\n  PROJECT_LISTING,\n} from \"../../jwt/_services/axiousURL\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport FileDeliverables from \"../../components/createProject/fileDeliverables\";\nimport AssociatedBrand from \"../../components/createProject/associatedBrand\";\nimport Attachments from \"../../components/createProject/attachments\";\nimport CreateNewBrand from \"../../components/brand/createNewBrand\";\nimport swal from \"sweetalert\";\nimport { useDispatch } from \"react-redux\";\nimport { setActiveBrandId } from \"../../redux/headerSettings/Action\";\nimport { useParams } from \"react-router\";\n// import OldAttachments from \"../../components/project/oldAttachments\";\n\nconst DuplicateProject = (props) => {\n  let history = useHistory();\n  const { id } = useParams();\n  const scrollRef = useRef(null);\n  const dispatch = useDispatch();\n  const [allImageSpecifications, setAllImageSpecifications] = useState([]);\n  const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(\"\");\n  const [filteredImgSpecs, setFilteredImgSpecs] = useState([]);\n  const [showCreateBrand, setShowCreateBrand] = useState(false);\n  const [shouldUpdateBrand, setShouldUpdateBrand] = useState(false);\n  const [project, setProject] = useState({\n    title: \"\",\n    description: \"\",\n    attachments: [],\n  });\n\n  const fetchImageSpecificatins = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, IMAGE_SPECIFICATIONS_LISTING).then(\n      (successResponse) => {\n        var imageSpecs = successResponse.data;\n        setAllImageSpecifications(imageSpecs);\n      }\n    );\n  };\n\n  /**\n   *\n   * @param {*} subCategoryId\n   * Callback from Category Search component\n   * Selected SubCategory ID is received\n   */\n  const setSelectedSubCategoryCallBack = (subCategoryId) => {\n    setSelectedSubCategoryId(subCategoryId);\n  };\n\n  /**\n   *\n   * Callback from associated brand component\n   * Create brand overlay show and scroll to create brand\n   *\n   */\n  const showCreateBrandOverlayCallBack = () => {\n    setShowCreateBrand(true);\n    executeScroll();\n  };\n\n  /**\n   * Scrolls to the view\n   * @returns\n   */\n  const executeScroll = () =>\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n  /**\n   *\n   * @param callFetchBrands\n   * Callback from CreateBrandOverlay\n   * if brand iis added callFetchBrands will be true\n   * if brand is added notify associated brands to update their brands\n   *\n   */\n  const closeCreateNewBrandOverlay = (callFetchBrands = false) => {\n    setShowCreateBrand(false);\n    if (callFetchBrands) setShouldUpdateBrand(true);\n  };\n\n  const fetchProject = () => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", id);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        var project = successResponse.data;\n        if (project.length > 0) {\n          let deliverableArr = project[0][\"file_deliverables\"];\n          let deliverableIdsArr = Array();\n          deliverableArr.forEach((element) => {\n            deliverableIdsArr.push(element[\"id\"]);\n          });\n\n          project[0][\"file_deliverables\"] = deliverableIdsArr;\n          console.log(project);\n          setProject(project[0]);\n        } else {\n          console.log(\"wtfffff\");\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchImageSpecificatins();\n  }, []);\n\n  /**\n   *\n   * Use Effect for showing Image Specification Drop Down\n   * This will call when user select the sub category\n   *\n   */\n  useEffect(() => {\n    if (selectedSubCategoryId === 0 || selectedSubCategoryId === \"\") {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    if (allImageSpecifications.length < 1) {\n      setFilteredImgSpecs([]);\n      return;\n    }\n\n    var imgSpecs = allImageSpecifications.filter((singleImgSpec) =>\n      singleImgSpec.sub_category_id == selectedSubCategoryId ? true : false\n    );\n    setFilteredImgSpecs(imgSpecs);\n  }, [selectedSubCategoryId]);\n\n  /**\n   * USE EFFECT FOR FETCHING PROJECT DETAILS\n   */\n\n  useEffect(() => {\n    fetchProject();\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }, []);\n\n  return (\n    <>\n      <section className=\"cnp\" ref={scrollRef}>\n        {showCreateBrand && (\n          <CreateNewBrand crossButtonCallBack={closeCreateNewBrandOverlay} />\n        )}\n        <div className=\"bg-black\"></div>\n        <main className=\"cont\">\n          <main className=\"inCont\">\n            <div onClick={() => history.goBack()} className=\"backText\">\n              <img src={backIcon} alt=\"backSymbol\" />\n              <span>Back</span>\n            </div>\n            <h1 className=\"cnp-head\">Duplicate project</h1>\n\n            <Formik\n              enableReinitialize={true}\n              initialValues={{\n                title: \"\",\n                subCategoryId: project.sub_category_id,\n                imageSpecification: \"\",\n                description: project.description,\n                deliverable: project.file_deliverables,\n                associatedBrand: project.brand_id,\n                attachments: \"\",\n              }}\n              validationSchema={Yup.object().shape({\n                title: Yup.string().required(\"Project title is required\"),\n                subCategoryId: Yup.number().required(\"Please select category\"),\n                imageSpecification: Yup.string(),\n                description: Yup.string().min(1).max(150).required(),\n                deliverable: Yup.string().required(\n                  \"Please Select File deliverables type \"\n                ),\n                associatedBrand: Yup.string().required(\n                  \"Please Select brand of the project \"\n                ),\n              })}\n              onSubmit={(values, actions) => {\n                var helper = FormDataHelper();\n\n                helper.append(\"title\", values.title);\n                helper.append(\"sub_category_id\", values.subCategoryId);\n                helper.append(\n                  \"image_specfication_id\",\n                  values.imageSpecification\n                );\n                helper.append(\"description\", values.description);\n                helper.append(\n                  \"file_deliverables\",\n                  JSON.stringify(values.deliverable)\n                );\n                helper.append(\"brand_id\", values.associatedBrand);\n\n                if (\n                  values.hasOwnProperty(\"attachments\") != \"\" &&\n                  values.attachments.length > 0\n                ) {\n                  for (var imageFile of values.attachments) {\n                    helper.append(\"attachments[]\", imageFile);\n                  }\n                }\n\n                GeneralServices.postRequest(helper, PROJECT_ADD).then(\n                  (successResponse) => {\n                    swal(successResponse.message, {\n                      icon: \"success\",\n                    });\n\n                    dispatch(setActiveBrandId(values.associatedBrand));\n                    const { from } = props.location.state || {\n                      from: { pathname: `/brand/${values.associatedBrand}` },\n                    };\n                    props.history.push(from);\n                  },\n                  (error) => {\n                    actions.setSubmitting(false);\n                    actions.setStatus(error);\n                  }\n                );\n                // return;\n              }}\n            >\n              {({ isSubmitting, setFieldValue, values }) => (\n                <Form name=\"parentForm\">\n                  <div className=\"inputField\">\n                    <label className=\"inputLabel\" htmlFor=\"projTitle\">\n                      Project title\n                    </label>\n                    <br />\n                    <Field\n                      type=\"text\"\n                      className=\"input\"\n                      name=\"title\"\n                      id=\"projTitle\"\n                      placeholder=\"Roller Blading Monkey\"\n                    />\n                    <ErrorMessage\n                      name=\"title\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <CategorySearch\n                    getSelectedSubCategoryId={setSelectedSubCategoryCallBack}\n                    setFieldValue={setFieldValue}\n                    isEditMode={true}\n                    categoryTitleParam={project.subcategory_title}\n                    categoryIdParam={project.sub_category_id}\n                  >\n                    <ErrorMessage\n                      name=\"subCategoryId\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </CategorySearch>\n\n                  {filteredImgSpecs.length > 0 && (\n                    <div className=\"inputField\">\n                      <label className=\"inputLabel required\" htmlFor=\"industry\">\n                        Image Specification\n                      </label>\n                      <br />\n                      <div className=\"inputDiv\">\n                        <Field\n                          as=\"select\"\n                          className=\"input\"\n                          name=\"imageSpecification\"\n                        >\n                          <option value=\"\">Select image specification</option>\n                          {filteredImgSpecs.map((imgSpec) => {\n                            return (\n                              <option key={imgSpec.id} value={imgSpec.id}>\n                                {imgSpec.title}\n                              </option>\n                            );\n                          })}\n                        </Field>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"inputField description\">\n                    <label htmlFor=\"desc\" className=\"inputLabel\">\n                      Description\n                    </label>\n                    <SideNotes />\n                    <p className=\"format-inst\">\n                      Format your paragraphs and create checklists to make your\n                      description easy to read and follow. Well written\n                      instructions = better designs.\n                    </p>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      config={{\n                        removePlugins: [\n                          \"ImageUpload\",\n                          \"EasyImage\",\n                          \"MediaEmbed\",\n                          \"Link\",\n                          \"CKFinder\",\n                        ],\n                      }}\n                      data={values.description}\n                      onChange={(event, editor) => {\n                        setFieldValue(\"description\", editor.getData());\n                      }}\n                    />\n\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <Attachments setFieldValue={setFieldValue} />\n                  {/* {project.attachments.length > 0 && (\n                    <OldAttachments attachmentsParam={project.attachments} />\n                  )} */}\n\n                  <FileDeliverables>\n                    <ErrorMessage\n                      name=\"deliverable\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </FileDeliverables>\n                  <AssociatedBrand\n                    shouldUpdateBrand={shouldUpdateBrand}\n                    showCreateBrandOverLay={showCreateBrandOverlayCallBack}\n                    brand={values.associatedBrand}\n                    setFieldValue={setFieldValue}\n                  >\n                    <ErrorMessage\n                      name=\"associatedBrand\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </AssociatedBrand>\n                  <button\n                    className=\"createBrandBtn\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    Duplicate Project\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </main>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default DuplicateProject;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/brands/editBrand.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534"],"import crossSignIcon from \"../../assets/images/new-brand-icons/cross-sign.png\";\nimport uploadIcon from \"../../assets/images/new-brand-icons/upload.png\";\nimport addNewColorIcon from \"../../assets/images/new-brand-icons/add new color.png\";\nimport fileAttachmentIcon from \"../../assets/images/create-project/attach file.png\";\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nimport * as Yup from \"yup\";\n// import ColorBox from \"../colorBox\";\nimport { useState, useEffect } from \"react\";\n// import AttachmentGuidlines from \"./attachmentGuidlines\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { AuthenticationService } from \"../../jwt/_services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport {\n  BRANDS_LISTING,\n  BRAND_DELETE_ATTACHMENT,\n  BRAND_DELETE_GUIDELINE,\n  BRAND_DELETE_LOGO,\n  BRAND_UPDATE,\n  COLOR_DELETE,\n  INDUSTRIES_LISTING,\n  LIST_DESIGN_OPTIONS,\n  LIST_INDUSTRY_OPTIONS,\n} from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\nimport ColorBox from \"../../components/colorBox\";\nimport AttachmentGuidlines from \"../../components/brand/attachmentGuidlines\";\nimport OldAttachments from \"../../components/project/oldAttachments\";\nimport Attachments from \"../../components/createProject/attachments\";\nimport BrandDefinition from \"../../components/brand/brandDefinition\";\n\nconst EditBrand = ({ brandId, crossButtonCallBack }) => {\n  const clientId = AuthenticationService.currentUserValue.id;\n\n  const [colors, setColors] = useState([]);\n  const [showColorBox, setShowColorBox] = useState(false);\n  const [sohwLogoFileSelected, setSohwLogoFileSelected] = useState(false);\n  const [showGuideFileSelected, setShowGuideFileSelected] = useState(false);\n  const [showAttachmentFileSelected, setShowAttachmentFileSelected] =\n    useState(false);\n  const [attachmentCount, setAttachmentCount] = useState(0);\n  const [industries, setIndustries] = useState([]);\n  const [brandDetail, setBrandDetail] = useState({\n    title: \"\",\n    industry_id: 0,\n    description: \"\",\n    website: \"\",\n    logo: \"\",\n    colors: [],\n    guidelines: \"\",\n    attachments: [],\n  });\n\n  const [showBrandDetail, setShowBrandDetail] = useState(false);\n\n  const closeColorBoxCallBack = ({ color }) => {\n    setShowColorBox(false);\n    if (!color) return;\n    setColors([...colors, color.hex]);\n  };\n\n  const removeColor = (index) => {\n    var colorId = getColorIdFromBrandData(colors[index]);\n\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteColorApi(colorId, index);\n      } else {\n        console.log(\"User oppted to not delete the color\");\n      }\n    });\n  };\n\n  const getColorIdFromBrandData = (colorHex) => {\n    const element = brandDetail.colors.find((element) => {\n      return element.hex_code == colorHex;\n    });\n    if (element) return element.id;\n    else return 0;\n  };\n\n  const deleteColorApi = (colorId, index) => {\n    if (colorId == 0) {\n      removeColorFromArrays(index, colorId);\n      return;\n    }\n    var helper = FormDataHelper();\n    helper.append(\"brand_color_id\", colorId);\n    GeneralServices.postRequest(helper, COLOR_DELETE).then(\n      (successResponse) => {\n        removeColorFromArrays(index);\n      },\n      (errorResponse) => {\n        console.log(\"failed to delete the color:\", errorResponse);\n      }\n    );\n  };\n\n  const removeColorFromArrays = (index, colorId) => {\n    colors.splice(index, 1);\n    setColors([...colors]);\n\n    if (colorId != 0) {\n      brandDetail.colors.forEach((singleColor, counter) => {\n        if (singleColor.id == colorId) brandDetail.colors.splice(counter, 1);\n      });\n    }\n  };\n\n  const fetchIndustries = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, INDUSTRIES_LISTING).then(\n      (successResponse) => {\n        setIndustries(successResponse.data);\n      }\n    );\n  };\n\n  const fetchBrand = () => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", brandId);\n\n    GeneralServices.postRequest(helper, BRANDS_LISTING).then(\n      (successResponse) => {\n        var brand = successResponse.data;\n        if (brand.length > 0) {\n          if (brand[0][\"requires\"].length > 0) {\n            var tmpRequires = Array();\n            brand[0][\"requires\"].forEach((element) => {\n              tmpRequires.push(element.id);\n            });\n\n            brand[0][\"requires\"] = tmpRequires;\n          }\n\n          if (brand[0][\"defines\"].length > 0) {\n            var tmpDefines = Array();\n            brand[0][\"defines\"].forEach((element) => {\n              tmpDefines.push(element.id);\n            });\n            brand[0][\"defines\"] = tmpDefines;\n          }\n\n          setBrandDetail(brand[0]);\n          setShowBrandDetail(true);\n          brand[0].colors.forEach((mycolor) => {\n            setColors((colors) => {\n              return [...colors, mycolor.hex_code];\n            });\n          });\n        }\n      }\n    );\n  };\n\n  const handleLogoDeletClick = (vlaues) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        vlaues.logo = \"\";\n        deleteLogoApi();\n      } else {\n        console.log(\"User oppted to not delete the logo\");\n      }\n    });\n  };\n\n  const deleteLogoApi = () => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", brandId);\n\n    GeneralServices.postRequest(helper, BRAND_DELETE_LOGO).then(\n      (successResponse) => {\n        setBrandDetail({ ...brandDetail, logo: \"\" });\n      },\n      (errorResponse) => {\n        console.log(\"failed to delete logo in edit brand\");\n      }\n    );\n  };\n\n  const handleGuidelineDeleteClick = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteGuidelineApi();\n      } else {\n        console.log(\"User oppted to not delete the logo\");\n      }\n    });\n  };\n\n  const deleteGuidelineApi = () => {\n    var helper = FormDataHelper();\n    helper.append(\"brand_id\", brandId);\n\n    GeneralServices.postRequest(helper, BRAND_DELETE_GUIDELINE).then(\n      (successResponse) => {\n        setBrandDetail({ ...brandDetail, guidelines: \"\" });\n      },\n      (errorResponse) => {\n        console.log(\"failed to delete logo in edit brand\");\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchIndustries();\n  }, []);\n\n  useEffect(() => {\n    fetchBrand();\n  }, [brandId]);\n\n  if (showBrandDetail) {\n    return (\n      <>\n        <div className=\"cnp createNew-overLay active\">\n          <main>\n            <img\n              onClick={crossButtonCallBack}\n              src={crossSignIcon}\n              alt=\"cross\"\n              className=\"cross\"\n            />\n            <h1 className=\"cnp-head\">Edit brand</h1>\n            <p className=\"cnp-para\">\n              A brands is a folder containing information and assets for anyone\n              or anything that you need designs for regularly. Create a brand\n              for clients, products, or use it to categorize and organize your\n              design projects.\n            </p>\n\n            <Formik\n              // enableReinitialize={true}\n              initialValues={{\n                brandName: brandDetail.title,\n                // industry: brandDetail.industry_id,\n                description: brandDetail.description,\n                website: brandDetail.website,\n                logo: brandDetail.logo,\n                defines: brandDetail.defines,\n                requires: brandDetail.requires,\n              }}\n              validationSchema={Yup.object().shape({\n                brandName: Yup.string().required(\"Brand name is required\"),\n                // industry: Yup.number().required(\"Industry is required\"),\n                requires: Yup.array().min(\n                  1,\n                  \"Please select at least one check box\"\n                ),\n                defines: Yup.array().min(\n                  1,\n                  \"Please select at least one check box\"\n                ),\n                description: Yup.string().required(),\n                logo: Yup.mixed().required(\"logo is required\"),\n              })}\n              onSubmit={(values, actions) => {\n                actions.setStatus();\n\n                var helper = FormDataHelper();\n\n                helper.append(\"client_id\", clientId);\n                helper.append(\"brand_id\", brandId);\n                helper.append(\"title\", values.brandName);\n                helper.append(\"defines\", JSON.stringify(values.defines));\n                helper.append(\"requires\", JSON.stringify(values.requires));\n                // helper.append(\"industry_id\", values.industry);\n                helper.append(\"description\", values.description);\n                helper.append(\"website\", values.website);\n\n                if (colors.length > 0) {\n                  helper.append(\"colors\", JSON.stringify(colors));\n                }\n\n                helper.append(\"logo\", values.logo);\n                helper.append(\"guidelines\", values.guidelines);\n\n                if (\n                  values.hasOwnProperty(\"attachments\") != \"\" &&\n                  values.attachments.length > 0\n                ) {\n                  for (var imageFile of values.attachments) {\n                    helper.append(\"attachments[]\", imageFile);\n                  }\n                }\n\n                GeneralServices.postRequest(helper, BRAND_UPDATE).then(\n                  (successResponse) => {\n                    swal(\"Brand has updated!\", {\n                      icon: \"success\",\n                    });\n                    crossButtonCallBack(true);\n                  },\n                  (error) => {\n                    actions.setSubmitting(false);\n                    actions.setStatus(error);\n                  }\n                );\n              }}\n            >\n              {({ isSubmitting, values, setFieldValue }) => (\n                <Form>\n                  <div className=\"inputField\">\n                    <label className=\"inputLabel required\" htmlFor=\"brandName\">\n                      Brand name\n                    </label>\n                    <br />\n                    <div className=\"inputDiv input\">\n                      <Field type=\"text\" id=\"brandName\" name=\"brandName\" />\n                    </div>\n                    <ErrorMessage\n                      name=\"brandName\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  {/* <div className=\"inputField\">\n                    <label className=\"inputLabel required\" htmlFor=\"industry\">\n                      Industry\n                    </label>\n                    <br />\n                    <div className=\"inputDiv\">\n                      <Field\n                        as=\"select\"\n                        className=\"input\"\n                        id=\"industry\"\n                        name=\"industry\"\n                      >\n                        <option value=\"\">Select a Industry</option>\n                        {industries.map((industry) => {\n                          return (\n                            <option key={industry.id} value={industry.id}>\n                              {industry.title}\n                            </option>\n                          );\n                        })}\n                      </Field>\n                    </div>\n                    <ErrorMessage\n                      name=\"industry\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div> */}\n\n                  <div className=\"inputField\">\n                    <BrandDefinition\n                      checkboxName={\"defines\"}\n                      titleString=\"What best defines your industry?\"\n                      URL={LIST_INDUSTRY_OPTIONS}\n                    >\n                      <ErrorMessage\n                        name=\"defines\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BrandDefinition>\n                    <br />\n                  </div>\n\n                  <div className=\"inputField\">\n                    <BrandDefinition\n                      checkboxName={\"requires\"}\n                      titleString=\"What do you want to create?\"\n                      URL={LIST_DESIGN_OPTIONS}\n                    >\n                      <ErrorMessage\n                        name=\"requires\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BrandDefinition>\n                    <br />\n                  </div>\n\n                  <div className=\"inputField description\">\n                    <label htmlFor=\"#desc\" className=\"inputLabel required\">\n                      Description\n                    </label>\n\n                    <p className=\"format-inst\">\n                      Tell us about this brand. What product/service does it\n                      provide? What’s special about it?\n                    </p>\n                    <CKEditor\n                      editor={ClassicEditor}\n                      config={{\n                        removePlugins: [\n                          \"ImageUpload\",\n                          \"EasyImage\",\n                          \"MediaEmbed\",\n                          \"Link\",\n                          \"CKFinder\",\n                        ],\n                      }}\n                      data={values.description}\n                      onChange={(event, editor) => {\n                        setFieldValue(\"description\", editor.getData());\n                      }}\n                    />\n\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n\n                  <div className=\"inputField\">\n                    <h3 className=\"inputLabel brandGuide-head required\">\n                      Brand Logo\n                    </h3>\n                    {brandDetail.logo != \"\" && (\n                      <div\n                        className=\"brand-logo-container\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <img\n                          className=\"brand-logo-img\"\n                          src={brandDetail.logo}\n                        />\n                        <img\n                          onClick={() => handleLogoDeletClick(values)}\n                          src={crossSignIcon}\n                          className=\"brand-logo-cross-img\"\n                        />\n                      </div>\n                    )}\n                    {brandDetail.logo == \"\" && (\n                      <>\n                        <p className=\"format-inst\">Upload your brand logo.</p>\n                        <input\n                          type=\"file\"\n                          name=\"logo\"\n                          id=\"logo\"\n                          value={\"\"}\n                          hidden\n                          onChange={(event) => {\n                            setFieldValue(\"logo\", event.currentTarget.files[0]);\n                            setSohwLogoFileSelected(true);\n                          }}\n                          accept=\"image/png, image/gif, image/jpeg\"\n                        />\n                        <label htmlFor=\"logo\">\n                          <img src={uploadIcon} alt=\"upload\" />\n                          <span>Upload logo</span>\n                          {sohwLogoFileSelected && (\n                            <span style={{ color: \"#4ba893\" }}>\n                              {\" \"}\n                              1 file selected{\" \"}\n                            </span>\n                          )}\n                        </label>\n                      </>\n                    )}\n                    <ErrorMessage\n                      name=\"logo\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n\n                  <div className=\"inputField\">\n                    <label className=\"inputLabel\" htmlFor=\"website\">\n                      Website\n                    </label>\n                    <br />\n                    <div className=\"inputDiv\">\n                      <Field\n                        type=\"text\"\n                        name=\"website\"\n                        className=\"input\"\n                        id=\"industry\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"inputField\">\n                    <h3 className=\"inputLabel brandGuide-head\">\n                      Brand guideline\n                    </h3>\n                    {brandDetail.guidelines != \"\" && (\n                      <div className=\"brandColors_single\">\n                        <div>\n                          <img\n                            src={fileAttachmentIcon}\n                            className=\"attachment-img\"\n                          ></img>\n                        </div>\n                        <span className=\"hex\">\n                          <a\n                            className=\"attachment-link\"\n                            href={brandDetail.guidelines}\n                            download\n                            target=\"_blank\"\n                          >\n                            Brand guideline\n                          </a>\n                        </span>\n                        <button\n                          onClick={handleGuidelineDeleteClick}\n                          type=\"button\"\n                          className=\"remove\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    )}\n                    {brandDetail.guidelines == \"\" && (\n                      <>\n                        <p className=\"format-inst\">\n                          Upload your existing brand guideline if you have one.\n                        </p>\n                        <input\n                          type=\"file\"\n                          name=\"guidelines\"\n                          id=\"brandGuide\"\n                          hidden\n                          onChange={(event) => {\n                            setFieldValue(\n                              \"guidelines\",\n                              event.currentTarget.files[0]\n                            );\n                            setShowGuideFileSelected(true);\n                          }}\n                        />\n                        <label htmlFor=\"brandGuide\">\n                          <img src={uploadIcon} alt=\"upload\" />\n                          <span>Upload guideline</span>\n                          {showGuideFileSelected && (\n                            <span style={{ color: \"#4ba893\" }}>\n                              {\" \"}\n                              1 file selected{\" \"}\n                            </span>\n                          )}\n                        </label>\n                      </>\n                    )}\n                  </div>\n                  <div className=\"inputField\">\n                    <h3 className=\"inputLabel\">Brand Colors</h3>\n                    <div className=\"brandColors\">\n                      <div\n                        onClick={() => setShowColorBox(!showColorBox)}\n                        className=\"brandColors_single createColor\"\n                      >\n                        <img src={addNewColorIcon} alt=\"add new color\" />\n                      </div>\n                      {colors.map((color, key) => {\n                        const hStyle = { background: color };\n                        return (\n                          <div className=\"brandColors_single\" key={key}>\n                            <div className=\"color\" style={hStyle}></div>\n                            <span className=\"hex\">{color}</span>\n                            <button\n                              onClick={() => removeColor(key)}\n                              type=\"button\"\n                              className=\"remove\"\n                            >\n                              Remove\n                            </button>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  {showColorBox && (\n                    <ColorBox closeCallBack={closeColorBoxCallBack} />\n                  )}\n                  {/* <div className=\"inputField\">\n                  <p className=\"inputLabel\">Attachments</p>\n                  <AttachmentGuidlines />\n                  <div className=\"attach-cont\">\n                    <input\n                      type=\"file\"\n                      name=\"attachments\"\n                      id=\"atch\"\n                      hidden\n                      onChange={(event) => {\n                        setFieldValue(\"attachments\", event.target.files);\n                        setAttachmentCount(event.target.files.length);\n                        setShowAttachmentFileSelected(true);\n                      }}\n                      multiple\n                    />\n                    <label htmlFor=\"atch\">\n                      <img src={uploadIcon} alt=\"upload icon\" /> Upload files\n                    </label>\n                    <p>\n                      Upload or drag & drop any images, files, or examples that\n                      may be helpful explaining your project here.\n                      {showAttachmentFileSelected && (\n                        <span style={{ color: \"#4ba893\" }}>\n                          {\" \"}\n                          {`${attachmentCount} file(s) selected`}{\" \"}\n                        </span>\n                      )}\n                    </p>\n                  </div>\n                </div> */}\n\n                  <Attachments\n                    setFieldValue={setFieldValue}\n                    showGuideLines={true}\n                  />\n\n                  {brandDetail.attachments.length > 0 && (\n                    <OldAttachments\n                      attachmentsParam={brandDetail.attachments}\n                      deleteURL={BRAND_DELETE_ATTACHMENT}\n                    />\n                  )}\n\n                  <button\n                    type=\"submit\"\n                    className=\"createBrandBtn\"\n                    disabled={isSubmitting}\n                  >\n                    Update brand\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </main>\n        </div>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default EditBrand;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/project/projectDetail.js",["535","536"],"import { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport {\n  COMMENT_LISTING,\n  PROJECT_DESIGNS,\n  PROJECT_LISTING,\n  PROJECT_STATUS_UPDATE,\n} from \"../../jwt/_services/axiousURL\";\n\nimport { useEffect, useState } from \"react\";\nimport SideBar from \"../../components/project/projectDetail/sideBar\";\nimport ChatHistory from \"../../components/project/projectDetail/chatHistory\";\nimport SendMessage from \"../../components/project/projectDetail/sendMessage\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst ProjectDetail = (props) => {\n  const { id } = useParams();\n  const projectId = id;\n\n  const [projectState, setProjectState] = useState({\n    project_id: \"\",\n    title: \"\",\n    brand_title: \"\",\n    description: \"\",\n    subcategory_title: \"\",\n    attachments: [],\n    status: \"\",\n  });\n\n  const [projectDesigns, setProjectDesigns] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const headerSettings = useSelector((state) => state.headerSettings);\n  let chatPadding = \"54px 0 0\";\n  if (headerSettings.accountPauseStatus == \"Y\") chatPadding = \"94px 0 0\";\n\n  /**\n   *\n   * FUNCTTIONS STARTTING\n   */\n\n  const updateProjectStatus = (projectId) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"status\", \"Y\");\n\n    GeneralServices.postRequest(helper, PROJECT_STATUS_UPDATE).then(\n      (successResp) => {\n        fetchProject(projectId);\n      },\n      (errorResponse) => {\n        console.log(\"failed to update the status\");\n      }\n    );\n  };\n\n  const fetchProject = (projectId) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n\n    GeneralServices.postRequest(helper, PROJECT_LISTING).then(\n      (successResponse) => {\n        var project = successResponse.data[0];\n        setProjectState(project);\n      },\n      (errorResponse) => {}\n    );\n  };\n\n  const fetchProjectComments = (projectId) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n\n    GeneralServices.postRequest(helper, COMMENT_LISTING).then(\n      (successResponse) => {\n        if (successResponse.data.length > 0) {\n          setChatHistory([...chatHistory, ...successResponse.data]);\n        }\n      }\n    );\n  };\n\n  const fetchProjectDesigns = (projectId) => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n\n    GeneralServices.postRequest(helper, PROJECT_DESIGNS).then(\n      (successResponse) => {\n        if (successResponse.data.length > 0) {\n          setProjectDesigns(successResponse.data);\n        }\n      }\n    );\n  };\n\n  const sendMessageHandler = (message) => {\n    setChatHistory([...chatHistory, message]);\n  };\n\n  useEffect(() => {\n    fetchProject(projectId);\n    fetchProjectDesigns(projectId);\n    fetchProjectComments(projectId);\n  }, [projectId]);\n\n  return (\n    <>\n      <section className=\"chat\" style={{ padding: chatPadding }}>\n        <main className=\"cont\">\n          <div className=\"chatCont\">\n            <main>\n              <SideBar\n                projectState={projectState}\n                projectDesigns={projectDesigns}\n                projectId={projectId}\n                updateProjectStatus={updateProjectStatus}\n                props={props}\n              />\n              <div className=\"message\">\n                <ChatHistory\n                  chatHistory={chatHistory}\n                  projectId={projectId}\n                  props={props}\n                />\n                <SendMessage\n                  projectId={projectId}\n                  sendMessageHandler={sendMessageHandler}\n                />\n              </div>\n            </main>\n          </div>\n        </main>\n      </section>\n    </>\n  );\n};\n\nexport default ProjectDetail;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/sideBar.js",["537","538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"import backIcon from \"../../../assets/images/create-project/backSymbol.png\";\nimport waitingIcon from \"../../../assets/images/brand-page-icons/waiting.png\";\nimport gearIcon from \"../../../assets/images/gear.png\";\nimport checkCircle from \"../../../assets/images/check circle white.png\";\n\nimport { useHistory } from \"react-router\";\nimport swal from \"sweetalert\";\nimport { useState } from \"react\";\nimport ProjectDetailTabView from \"./projectDetailTabView\";\nimport DesignTabView from \"./designTabView\";\nimport ActiveProjectOptionMenu from \"../activeProjectOptionMenu\";\n\nimport Dropdown from \"react-dropdown\";\n// https://reactjsexample.com/a-dead-simple-dropdown-component-for-react/\nimport \"react-dropdown/style.css\";\nimport { useEffect } from \"react\";\nimport { FormDataHelper } from \"../../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../../jwt/_services/General.services\";\nimport {\n  PROJECT_UPDATE_WORKING_STATUS,\n  PROJECT_WORKING_STATUSES,\n} from \"../../../jwt/_services/axiousURL\";\nimport { ProjectWorkingStatuses } from \"../../../enums/projectWorkingStatusEnum\";\nimport { useSelector } from \"react-redux\";\n\nconst SideBar = ({\n  projectState,\n  projectDesigns,\n  projectId,\n  updateProjectStatus,\n  props,\n}) => {\n  let history = useHistory();\n  const [showDesignTab, setShowDesignTab] = useState(false);\n  const [projectStatuses, setProjectStatuses] = useState([]);\n  const [workingStatusesArray, setWorkingStatusesArray] = useState([]);\n  const headerSettings = useSelector((state) => state.headerSettings);\n  const [accountPaused, setAccountPaused] = useState(\n    headerSettings.accountPauseStatus == \"Y\" ? true : false\n  );\n  const [currentHex, setCurrentHex] = useState(\"000000\");\n  let defaultOption = projectState.project_working_status_title; //options[0];\n\n  const handleMarkCompleteClick = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"You want to mark project complete?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: false,\n    }).then((markComplete) => {\n      if (markComplete) {\n        updateProjectStatus(projectId);\n      } else {\n        console.log(\"User oppted to not delete the attachment\");\n      }\n    });\n  };\n\n  const getButtonText = () => {\n    if (projectState.status == \"Y\") return \"Completed\";\n    else return \"Mark as Complete\";\n  };\n\n  const handleTabClick = (tabName) => {\n    if (tabName == \"design\") setShowDesignTab(true);\n    else setShowDesignTab(false);\n  };\n\n  const handleProjectWorkingStatusChange = (data) => {\n    // console.log(data);\n    // return;\n    let id;\n    let selectedStatus = workingStatusesArray.find((element) => {\n      return element.title == data.label;\n    });\n\n    if (selectedStatus) id = selectedStatus.id;\n    else return;\n\n    setCurrentHex(selectedStatus.hex_number);\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"project_working_status_id\", id);\n\n    GeneralServices.postRequest(helper, PROJECT_UPDATE_WORKING_STATUS).then(\n      (SR) => {\n        // defaultOption = data.label;\n        fetchProjectWorkingStatuses();\n        // setDefaultOption(data.label);\n      },\n      (ER) => {\n        console.log(ER);\n      }\n    );\n  };\n\n  const fetchProjectWorkingStatuses = () => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    GeneralServices.postRequest(helper, PROJECT_WORKING_STATUSES).then(\n      (SR) => {\n        let statusesString = [];\n        setWorkingStatusesArray(SR.data);\n        SR.data.forEach((element) => {\n          let option = {\n            value: element.title,\n            label: element.title,\n            className: getClassName(element.id),\n          };\n          statusesString.push(option);\n        });\n        setProjectStatuses(statusesString);\n      },\n      (ER) => {\n        console.log(ER);\n      }\n    );\n  };\n\n  const getClassName = (status) => {\n    if (ProjectWorkingStatuses.AssignedToTeamNotStarted == status)\n      return \"dropdown-option-color-not-started\";\n    else if (ProjectWorkingStatuses.AssetOnHold == status)\n      return \"dropdown-option-color-hold\";\n    else if (ProjectWorkingStatuses.FirstDraftInDesign == status)\n      return \"dropdown-option-color-draft\";\n    else if (ProjectWorkingStatuses.AssetRevisions == status)\n      return \"dropdown-option-color-revision\";\n    else if (ProjectWorkingStatuses.ReadyForReview == status)\n      return \"dropdown-option-color-review\";\n    else if (ProjectWorkingStatuses.RequestCompleted == status)\n      return \"dropdown-option-color-complete\";\n  };\n\n  useEffect(() => {\n    fetchProjectWorkingStatuses();\n  }, [defaultOption]);\n\n  useEffect(() => {\n    setCurrentHex(projectState.hex_number);\n  }, [projectState]);\n\n  return (\n    <>\n      <div className=\"people\">\n        <div onClick={() => history.goBack()} className=\"backText\">\n          <img src={backIcon} alt=\"backSymbol\" />\n          <span>Back</span>\n        </div>\n        {/* <div style={{ textAlign: \"center\" }} className=\"rev\">\n          Revision\n          <img src={waitingIcon} alt=\"waiting\" />\n        </div> */}\n        <div\n          className=\"new_class\"\n          style={{ backgroundColor: `#${currentHex}` }}\n        >\n          <Dropdown\n            options={projectStatuses}\n            onChange={handleProjectWorkingStatusChange}\n            className=\"status_drop_down\"\n            value={defaultOption}\n            placeholder=\"Select an option\"\n            menuClassName=\"drop_down_menu\"\n            disabled={accountPaused ? true : false}\n          />\n        </div>\n        <div className=\"people_body\">\n          <div className=\"people_body_head\">\n            <h2>{projectState.title}</h2>\n            {/* <button className=\"option\">\n              <img src={gearIcon} alt=\"gear\" />\n              <span>Options</span> */}\n            {/* <ActiveProjectOptionMenu\n                projectId={projectId}\n                updateProjects={null}\n                props={props}\n              /> */}\n            {/* </button> */}\n          </div>\n\n          {!accountPaused && (\n            <button onClick={handleMarkCompleteClick} className=\"markComp\">\n              <img src={checkCircle} alt=\"\" />\n              <span>{getButtonText()}</span>\n            </button>\n          )}\n          <button className=\"markComp showChat\">\n            <span>Show Chat</span>\n          </button>\n          <div className=\"people_body_body\">\n            <ul>\n              <li\n                onClick={() => handleTabClick(\"details\")}\n                style={{ cursor: \"pointer\" }}\n                className={`${!showDesignTab ? \"active\" : \"\"}`}\n              >\n                Details\n              </li>\n              <li\n                onClick={() => handleTabClick(\"design\")}\n                style={{ cursor: \"pointer\" }}\n                className={`${showDesignTab ? \"active\" : \"\"}`}\n              >\n                Designs\n              </li>\n            </ul>\n            {!showDesignTab && (\n              <ProjectDetailTabView projectState={projectState} />\n            )}\n            {showDesignTab && <DesignTabView projectDesigns={projectDesigns} />}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SideBar;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/DesktopHeader.js",["552","553","554"],"import downArrow from \"../../../assets/images/header-icons/down-arrow.png\";\nimport projectBoardIcon from \"../../../assets/images/header-icons/projectBoard icon.png\";\nimport bellIcon from \"../../../assets/images/header-icons/bell.png\";\nimport brandsIcon from \"../../../assets/images/header-icons/brands icon.png\";\nimport dummyProfileIcon from \"../../../assets/images/header-icons/dummy-profile-icon.png\";\n\nimport { Link } from \"react-router-dom\";\nimport HeaderBrandListing from \"../../../components/headerBrandListing\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { AuthenticationService } from \"../../../jwt/_services\";\nimport { getHeaderTagPrpos, openInNewTab } from \"../../../helper/siteHelper\";\n\nconst DesktopHeader = ({ getActiveBrand, userName, ...props }) => {\n  const headerSettings = useSelector((state) => state.headerSettings);\n  const [showBrandList, setShowBrandList] = useState(false);\n  const [showRightMenu, setshowRightMenu] = useState(false);\n  let info = getHeaderTagPrpos(headerSettings);\n\n  const openProjectsPage = () => {\n    const { from } = props.location.state || {\n      from: { pathname: `/brand/${headerSettings.activeBrandId}` },\n    };\n    props.history.push(from);\n  };\n\n  const handleHelpCenterClick = () => {};\n\n  useEffect(() => {\n    info = getHeaderTagPrpos(headerSettings);\n  }, [headerSettings]);\n\n  return (\n    <>\n      <ul className=\"realMenu\">\n        {headerSettings.brandList.length > 0 && (\n          <li\n            className=\"headerBrandList\"\n            onClick={() => {\n              setShowBrandList(!showBrandList);\n            }}\n          >\n            <h3>{getActiveBrand().brandName}</h3>\n            <img className=\"icon-img\" src={downArrow} alt=\"down-arrow\" />\n            {showBrandList && (\n              <HeaderBrandListing\n                brands={headerSettings.brandList}\n                ulClass={\"dropList active\"}\n                {...props}\n              />\n            )}\n          </li>\n        )}\n\n        <li>\n          <a onClick={openProjectsPage}>\n            <img\n              className=\"icon-img\"\n              src={projectBoardIcon}\n              alt=\"projectBoard\"\n            />\n            <span>Project Board</span>\n          </a>\n        </li>\n        <li className=\"mr-a\">\n          <Link to=\"/brands\">\n            <img className=\"icon-img\" src={brandsIcon} alt=\"brands\" />\n            <span>Brands</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/company\">\n            <button\n              type=\"button\"\n              style={{ backgroundColor: info.color, opacity: info.opacity }}\n            >\n              {info.title}\n            </button>\n          </Link>\n        </li>\n        <li>\n          <img\n            className=\"icon-img-bel disabled-buttons\"\n            src={bellIcon}\n            alt=\"bell icon\"\n          />\n        </li>\n        <li\n          onClick={() => setshowRightMenu(!showRightMenu)}\n          style={{ cursor: \"pointer\" }}\n        >\n          <img src={dummyProfileIcon} alt=\"profile\" />\n          <strong>{userName}</strong>\n          <img src={downArrow} alt=\"down-arrow\" />\n          <ul className={`dropList ${showRightMenu ? \"active\" : \"\"}`}>\n            <li>\n              <Link to=\"/company\">Company Profile</Link>\n            </li>\n            <li>\n              <Link to=\"/user\">My Profile</Link>\n            </li>\n            <li\n              onClick={() => {\n                openInNewTab(\"https://xoticlabs.com/help-center/\");\n              }}\n            >\n              Help Center\n            </li>\n            {/* <li>Notification Settings</li> */}\n\n            <li onClick={AuthenticationService.logout}>Log Out</li>\n          </ul>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default DesktopHeader;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/MobileHeader.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/layouts/layout-components/header/MobileHeaderSubMenu.js",["555","556","557"],"import downArrowIcon from \"../../../assets/images/header-icons/down-arrow.png\";\nimport projectBoardIcon from \"../../../assets/images/header-icons/projectBoard icon.png\";\nimport brandsIcon from \"../../../assets/images/header-icons/brands icon.png\";\nimport dummyProfileIcon from \"../../../assets/images/header-icons/dummy-profile-icon.png\";\nimport downArrowBlackIcon from \"../../../assets/images/header-icons/down-arrow-black.png\";\n\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport HeaderBrandListing from \"../../../components/headerBrandListing\";\nimport { Link } from \"react-router-dom\";\nimport { getHeaderTagPrpos } from \"../../../helper/siteHelper\";\n\nconst MobileHeaderSubMenu = ({\n  getActiveBrand,\n  headerSubMenuClossCallBack,\n  userName,\n  ...props\n}) => {\n  const headerSettings = useSelector((state) => state.headerSettings);\n  let info = getHeaderTagPrpos(headerSettings);\n  const [brands, setBrands] = useState(headerSettings.brandList);\n  const [showBrandListing, setshowBrandListin] = useState(false);\n\n  const openProjectsPage = () => {\n    const { from } = props.location.state || {\n      from: { pathname: `/brand/${headerSettings.activeBrandId}` },\n    };\n    props.history.push(from);\n  };\n\n  return (\n    <>\n      <ul className=\"fakeMenu active\">\n        {brands.length && (\n          <li onClick={() => setshowBrandListin(!showBrandListing)}>\n            <span>{getActiveBrand().brandName}</span>\n            <img\n              className=\"icon-img\"\n              src={downArrowBlackIcon}\n              alt=\"down-arrow\"\n            />\n            {showBrandListing && (\n              <HeaderBrandListing\n                brands={brands}\n                ulClass={\"dropList-fake active\"}\n                headerSubMenuClossCallBack={headerSubMenuClossCallBack}\n                {...props}\n              />\n            )}\n            <ul className=\"dropList-fake\">\n              <li>User Profile</li>\n              <li>Log Out</li>\n            </ul>\n          </li>\n        )}\n        <li>\n          <a onClick={openProjectsPage}>\n            <img\n              className=\"icon-img\"\n              src={projectBoardIcon}\n              alt=\"projectBoard\"\n            />\n            <span>Project Board</span>\n          </a>\n        </li>\n        <li className=\"mr-a\" onClick={headerSubMenuClossCallBack}>\n          <Link to=\"/brands\">\n            <img className=\"icon-img\" src={brandsIcon} alt=\"brands\" />\n            <span>Brands</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/company\">\n            <button\n              type=\"button\"\n              style={{ backgroundColor: info.color, opacity: info.opacity }}\n            >\n              {info.title}\n            </button>\n          </Link>\n        </li>\n        <li>\n          <img src={dummyProfileIcon} alt=\"profile\" />\n          <strong>{userName}</strong>\n          <img src={downArrowBlackIcon} alt=\"down-arrow\" />\n          <ul className=\"dropList-fake\">\n            <li>User Profile</li>\n            <li>Log Out</li>\n          </ul>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default MobileHeaderSubMenu;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/chatHistory.js",["558","559","560","561","562","563","564"],"import heIcon from \"../../../assets/images/project-detail-page-icons/he.png\";\nimport profileImageIcon from \"../../../assets/images/project-detail-page-icons/profile image.png\";\nimport React, { useEffect, useRef } from \"react\";\nimport CommentImage from \"./commentImage\";\nimport { getCommentInfo, getInitials } from \"../../../helper/siteHelper\";\n\nconst ChatHistory = ({ chatHistory, projectId, props }) => {\n  console.log(\"chat history\", chatHistory);\n  const scrollRef = useRef(null);\n\n  let designCount = 0;\n  var designsHash = new Map();\n\n  const getDesignCount = (chat) => {\n    if (getCommentInfo(chat).userType == \"designer\" && chat.revisions == \"0\") {\n      designsHash.set(chat.id, designCount + 1);\n      return ++designCount;\n    } else if (\n      getCommentInfo(chat).userType == \"designer\" &&\n      chat.revisions != \"0\"\n    ) {\n      return designsHash.get(chat.parent_id);\n    }\n  };\n\n  useEffect(() => {\n    scrollRef.current.scrollIntoView();\n  }, [chatHistory]);\n  return (\n    <>\n      <div className=\"message_main\">\n        {chatHistory.map((chat, key) => {\n          return (\n            <div\n              key={key}\n              className={`message_single ${\n                getCommentInfo(chat).userType == \"client\" ? \"iSend\" : \"heSend\"\n              }`}\n            >\n              <div className=\"sender\">\n                {/* <img src={profileImageIcon} alt=\"\" /> */}\n                <p data-letters={getInitials(getCommentInfo(chat).name)} />\n              </div>\n              <div className=\"message_body\">\n                <div className=\"message_head\">\n                  <h3 className=\"senderName\">{getCommentInfo(chat).name}</h3>\n                  <p className=\"senderTime\">{chat.created_datetime}</p>\n                </div>\n                {chat.comment && (\n                  <p className=\"msgPara\">\n                    {chat.comment.split(/\\r\\n|\\n|\\r/gm).map((line, key) => {\n                      return (\n                        <React.Fragment key={key}>\n                          {line}\n                          <br />\n                        </React.Fragment>\n                      );\n                    })}\n                  </p>\n                )}\n                {chat.image && (\n                  <CommentImage\n                    imageUrl={chat.image}\n                    imageName={chat.file_name}\n                    commentId={chat.id}\n                    revisions={chat.revisions}\n                    designCount={getDesignCount(chat)}\n                    projectId={projectId}\n                    userType={getCommentInfo(chat).userType}\n                    props={props}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n        <div ref={scrollRef}></div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatHistory;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/sendMessage.js",["565","566"],"import profileImageIcon from \"../../../assets/images/project-detail-page-icons/profile image.png\";\nimport sendMessageIcon from \"../../../assets/images/project-detail-page-icons/sendMsg.png\";\nimport attachIcon from \"../../../assets/images/project-detail-page-icons/attach file.png\";\nimport { useRef, useState } from \"react\";\nimport {\n  displayTime,\n  getClientId,\n  getClientName,\n  getInitials,\n} from \"../../../helper/siteHelper\";\nimport { FormDataHelper } from \"../../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../../jwt/_services/General.services\";\nimport {\n  COMMENT_ADD,\n  TEMP_IMAGE_UPLOAD,\n} from \"../../../jwt/_services/axiousURL\";\nimport AttachedFile from \"./attachedFile\";\nimport Axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst SendMessage = ({ projectId, sendMessageHandler }) => {\n  const [messageText, setMessageText] = useState(\"\");\n  const [attachedFile, setAttachedFile] = useState([]);\n  const [progressValue, setProgressValue] = useState(0);\n  const [axiosSource, setAxiosSource] = useState(() => {});\n  const [tempImageData, setTempImageData] = useState({\n    url: \"\",\n    name: \"\",\n  });\n\n  const fileRef = useRef();\n\n  /**\n   *\n   * FUNCTIONS\n   */\n\n  const fileAttached = (e) => {\n    const fileSize = e.target.files[0].size / 1024 / 1024;\n    if (fileSize > 100) {\n      swal(\"Image size can not be greator than 100MB\", {\n        icon: \"error\",\n      });\n      fileRef.current.value = \"\";\n      return;\n    }\n    setAttachedFile(e.target.files);\n    uploadTempFileApi(e.target.files[0]);\n  };\n\n  const handleRemoveImage = () => {\n    setAttachedFile([]);\n    axiosSource.cancel();\n    setTempImageData({});\n    fileRef.current.value = \"\";\n  };\n\n  const handleMessageSendClick = () => {\n    if (messageText || (tempImageData.url && tempImageData.name))\n      sendMessageApi();\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.shiftKey) return;\n    if (event.keyCode === 13 || event.key === \"Enter\") {\n      event.preventDefault();\n      handleMessageSendClick();\n    }\n  };\n\n  const sendMessageApi = () => {\n    var helper = FormDataHelper();\n    helper.append(\"project_id\", projectId);\n    helper.append(\"client_id\", getClientId());\n    helper.append(\"parent_id\", 0);\n    helper.append(\"comment\", messageText);\n\n    if (tempImageData.url) helper.append(\"path\", tempImageData.url);\n    if (tempImageData.name) helper.append(\"file_name\", tempImageData.name);\n\n    GeneralServices.postRequest(helper, COMMENT_ADD).then(\n      (successResponse) => {\n        if (successResponse.data.length > 0) {\n          const comment = successResponse.data[0];\n          sendMessageHandler(comment);\n          setMessageText(\"\");\n          setAttachedFile([]);\n          setTempImageData({});\n          fileRef.current.value = \"\";\n        }\n      },\n      (errorResponse) => {\n        console.log(\"send message error: \", errorResponse);\n      }\n    );\n  };\n\n  const uploadTempFileApi = (file) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n    setAxiosSource(source);\n    var helper = FormDataHelper();\n    helper.append(\"image\", file);\n    GeneralServices.postRequest(\n      helper,\n      TEMP_IMAGE_UPLOAD,\n      handleProgress,\n      source.token\n    ).then(\n      (successResponse) => {\n        const res = successResponse.data;\n        setTempImageData({\n          ...tempImageData,\n          url: res.image,\n          name: res.file_name,\n        });\n      },\n      (errorResponse) => {\n        console.log(\"error: \", errorResponse);\n      }\n    );\n  };\n\n  const handleProgress = (progressEvent) => {\n    const totalLength = progressEvent.lengthComputable\n      ? progressEvent.total\n      : progressEvent.target.getResponseHeader(\"content-length\") ||\n        progressEvent.target.getResponseHeader(\"x-decompressed-content-length\");\n    // console.log(\"onUploadProgress\", totalLength);\n    if (totalLength !== null) {\n      // console.log(Math.round((progressEvent.loaded * 100) / totalLength));\n      setProgressValue(Math.round((progressEvent.loaded * 100) / totalLength));\n    }\n  };\n\n  /**\n   * RENDER\n   */\n\n  return (\n    <>\n      {attachedFile.length > 0 && (\n        <AttachedFile\n          fileName={attachedFile[0].name}\n          handleRemoveImage={handleRemoveImage}\n          progressValue={progressValue}\n        />\n      )}\n      <div\n        className=\"message_single message_msgMake\"\n        style={{ padding: \"0px !important\" }}\n      >\n        <div className=\"sender\">\n          {/* <img src={profileImageIcon} alt=\"\" /> */}\n          <p data-letters={getInitials(getClientName())} />\n        </div>\n        <div className=\"message_body\">\n          <textarea\n            placeholder=\"Add comment...\"\n            type=\"text\"\n            className=\"msgInp scroll\"\n            value={messageText}\n            onChange={(e) => setMessageText(e.target.value)}\n            onKeyDown={handleKeyDown}\n          />\n          <div className=\"icons\">\n            <img\n              src={sendMessageIcon}\n              onClick={handleMessageSendClick}\n              alt=\"\"\n              style={{ cursor: \"pointer\" }}\n            />\n            <input\n              type=\"file\"\n              hidden\n              id=\"attachmennt\"\n              onChange={(e) => fileAttached(e)}\n              accept=\".png,.jpg,.jpeg\"\n              ref={fileRef}\n            />\n            <label htmlFor=\"attachmennt\" style={{ cursor: \"pointer\" }}>\n              <img src={attachIcon} alt=\"\" />\n            </label>\n          </div>\n        </div>\n      </div>\n      <button className=\"message_backButton\">SHOW DETAILS</button>\n    </>\n  );\n};\n\nexport default SendMessage;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/helper/siteHelper.js",["567","568","569","570","571","572","573","574","575","576"],"import { AuthenticationService } from \"../jwt/_services\";\n\nexport function displayTime() {\n  var str = \"\";\n\n  var currentTime = new Date();\n  var hours = currentTime.getHours();\n  var minutes = currentTime.getMinutes();\n  var seconds = currentTime.getSeconds();\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  str += hours + \":\" + minutes + \" \";\n  if (hours > 11) {\n    str += \"PM\";\n  } else {\n    str += \"AM\";\n  }\n  return str;\n}\n\nexport function getClientId() {\n  return AuthenticationService.currentUserValue.id;\n}\n\nexport function getClientProfileId() {\n  return AuthenticationService.currentUserValue.client_profile_id;\n}\n\nexport function getClientName() {\n  return (\n    AuthenticationService.currentUserValue.first_name +\n    \" \" +\n    AuthenticationService.currentUserValue.last_name\n  );\n}\n\nexport function getClientFirstName() {\n  return AuthenticationService.currentUserValue.first_name;\n}\n\nexport function getClientLastName() {\n  return AuthenticationService.currentUserValue.last_name;\n}\n\n/**\n *\n * @param {*} comment\n * @returns name of the commentor and userType i.e the commentor is admin, designer or the client\n */\nexport function getCommentInfo(comment) {\n  let name = \"\";\n  let userType = \"\";\n  if (comment.admin_id && comment.admin_id != \"\" && comment.admin_id != \"0\") {\n    name = comment.admin_name;\n    userType = \"admin\";\n  } else if (\n    comment.designer_id &&\n    comment.designer_id != \"\" &&\n    comment.designer_id != \"0\"\n  ) {\n    name = comment.designer_name;\n    userType = \"designer\";\n  } else if (\n    comment.client_id &&\n    comment.client_id != \"\" &&\n    comment.client_id != \"0\"\n  ) {\n    name = comment.client_name;\n    userType = \"client\";\n  }\n\n  return { name, userType };\n}\n\nexport function getInitials(string) {\n  var names = string.split(\" \"),\n    initials = names[0].substring(0, 1).toUpperCase();\n\n  if (names.length > 1) {\n    initials += names[names.length - 1].substring(0, 1).toUpperCase();\n  }\n  return initials;\n}\n\nexport function downloadFile(fileUrl, fileName) {\n  fetch(fileUrl, {\n    method: \"GET\",\n    headers: {},\n  })\n    .then((response) => {\n      response.arrayBuffer().then(function (buffer) {\n        const url = window.URL.createObjectURL(new Blob([buffer]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport function getUserName(data) {\n  if (data.client_id) return data.client_firstname + \" \" + data.client_lastname;\n  else if (data.designer_id)\n    return data.designer_firstname + \" \" + data.designer_lastname;\n}\n\nexport function openInNewTab(url) {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n  if (newWindow) newWindow.opener = null;\n}\n\nexport function getHeaderTagPrpos(headerSettings) {\n  if (headerSettings.accountPauseStatus == \"Y\")\n    return { title: \"Account Paused\", color: \"#d5de16\", opacity: \"100%\" };\n  else if (headerSettings.accountSuspendedStatus == \"Y\")\n    return { title: \"Account Suspended\", color: \"#b41818\", opacity: \"100%\" };\n  else if (headerSettings.accountCancelStatus == \"Y\")\n    return { title: \"Account Cancelled\", color: \"#b41818\", opacity: \"100%\" };\n  else\n    return {\n      title: headerSettings.accountPlanTitle + \" Plan\",\n      color: \"white\",\n      opacity: \"50%\",\n    };\n}\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/attachedFile.js",["577","578","579"],"import { ProgressBar } from \"react-bootstrap\";\n\nconst AttachedFile = ({ fileName, handleRemoveImage, progressValue }) => {\n  return (\n    <>\n      <div style={{ display: \"flex\", marginTop: \"auto\" }}>\n        <div style={{ width: \"8.5%\" }}></div>\n        <div\n          style={{\n            display: \"flex\",\n            backgroundColor: \"#f5f5f5\",\n            flex: \"1\",\n            padding: \"1rem\",\n            marginRight: \"0.7rem\",\n            marginBottom: \"0\",\n            textAlign: \"center\",\n          }}\n        >\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <p style={{ textAlign: \"start\" }}>{fileName}</p>\n            {progressValue != \"100\" && (\n              <progress value={progressValue} max={100}></progress>\n            )}\n          </div>\n          <p\n            style={{ verticalAlign: \"center\" }}\n            onClick={handleRemoveImage}\n            style={{ marginLeft: \"auto\", cursor: \"pointer\" }}\n          >\n            X\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttachedFile;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/commentImage.js",["580","581","582","583"],"import viewAllIcon from \"../../../assets/images/project-detail-page-icons/viewAll.png\";\nimport viewDesIcon from \"../../../assets/images/project-detail-page-icons/viewDes.png\";\nimport revisionIcon from \"../../../assets/images/project-detail-page-icons/Revisions.png\";\nimport downloadIcon from \"../../../assets/images/project-detail-page-icons/download.png\";\nimport shareIcon from \"../../../assets/images/project-detail-page-icons/share.png\";\nimport { downloadFile } from \"../../../helper/siteHelper\";\n\nconst CommentImage = ({\n  imageUrl,\n  imageName,\n  commentId,\n  revisions,\n  designCount,\n  projectId,\n  userType,\n  props,\n}) => {\n  const goToAnnotationPage = () => {\n    localStorage.setItem(\"commentId\", commentId);\n    localStorage.setItem(\"projectId\", projectId);\n    localStorage.setItem(\"imageUrl\", imageUrl);\n    localStorage.setItem(\"imageName\", imageName);\n\n    const from = props.location.state || {\n      pathname: \"/comments/annotation\",\n      // state: {\n      //   commentId: commentId,\n      //   projectId: projectId,\n      //   imageUrl: imageUrl,\n      //   imageName: imageName,\n      // },\n    };\n    props.history.push(from);\n  };\n  return (\n    <>\n      <div className=\"msgSTUFF\">\n        <div className=\"msgSTUFF_imgBox\">\n          <img className=\"actImage\" src={imageUrl} alt=\"\" />\n          <div className=\"msgSTUFF_overlay\"></div>\n          <button onClick={goToAnnotationPage} className=\"viewbtn viewbtnDes\">\n            <img src={viewDesIcon} alt=\"\" />\n            <span>View design</span>\n          </button>\n          <button className=\"viewbtn viewbtnAll\">\n            <img src={viewAllIcon} alt=\"\" />\n            <span>1</span>\n          </button>\n        </div>\n        {userType == \"designer\" && (\n          <div className=\"msgSTUFF_fileTitle msgSTUFF_fileDetails\">\n            <h3 className=\"fileName\">{imageName}</h3>\n            <p className=\"fileInfo\">Design {designCount}</p>\n            <p className=\"fileInfo\">\n              {revisions == \"0\" ? `0 Revisions` : `Revision ${revisions}`}\n            </p>\n          </div>\n        )}\n        <div className=\"msgSTUFF_fileAction msgSTUFF_fileDetails\">\n          {/* <div className=\"fileAction\" style={{ cursor: \"pointer\" }}>\n            <img src={revisionIcon} alt=\"\" />\n            <p>Revisions</p>\n          </div> */}\n          {/* <div className=\"fileAction\">\n            <img src={shareIcon} alt=\"\" />\n            <p>Share</p>\n          </div> */}\n          <div\n            className=\"fileAction\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => downloadFile(imageUrl, imageName)}\n          >\n            <img src={downloadIcon} alt=\"\" />\n            <p>Download</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CommentImage;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/projectDetailTabView.js",["584"],"import brandGrayIcon from \"../../../assets/images/project-detail-page-icons/brand-icon-gray.png\";\n\nconst ProjectDetailTabView = ({ projectState }) => {\n  return (\n    <>\n      <div className=\"inSider\">\n        <h3>Project Details</h3>\n        <div className=\"inSider_details\">\n          <h4>Type</h4>\n          <p>{projectState.subcategory_title}</p>\n        </div>\n        <div className=\"inSider_details\">\n          <h4>Brand</h4>\n          <div className=\"inSider_brand\">\n            <img src={brandGrayIcon} alt=\"\" />\n            <p>{projectState.brand_title}</p>\n          </div>\n        </div>\n        <div className=\"inSider_details\">\n          <h4>Description</h4>\n          <div dangerouslySetInnerHTML={{ __html: projectState.description }} />\n        </div>\n        <div className=\"inSider_details\">\n          <h4>Files & attachments</h4>\n          <div className=\"inSider_attach\">\n            {projectState.attachments.length > 0 &&\n              projectState.attachments.map((singleAttachment) => {\n                return (\n                  <div\n                    key={singleAttachment.id}\n                    className=\"inSider_attach_single\"\n                  >\n                    <img src={brandGrayIcon} alt=\"\" />\n                    <a\n                      href={singleAttachment.attachment}\n                      download\n                      target=\"_blank\"\n                    >\n                      <p>{singleAttachment.file_name}</p>\n                    </a>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDetailTabView;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/project/projectDetail/designTabView.js",["585"],"import brandGrayIcon from \"../../../assets/images/project-detail-page-icons/brand-icon-gray.png\";\n\nconst DesignTabView = ({ projectDesigns }) => {\n  console.log(projectDesigns);\n  return (\n    <>\n      <div className=\"inSider\">\n        <h3>Project Designs</h3>\n        <div className=\"inSider_details\">\n          {/* <h4>Files & attachments</h4> */}\n          <div className=\"inSider_attach\">\n            {projectDesigns.length > 0 &&\n              projectDesigns.map((singleAttachment) => {\n                return (\n                  <div\n                    key={singleAttachment.id}\n                    className=\"inSider_attach_single\"\n                  >\n                    <img src={brandGrayIcon} alt=\"\" />\n                    <a href={singleAttachment.image} download target=\"_blank\">\n                      <p>{singleAttachment.file_name}</p>\n                    </a>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DesignTabView;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/projectImageAnnotation.js",["586","587","588","589","590","591","592","593","594"],"import { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Annotation from \"react-image-annotation\";\n// import {  } from \"react-image-annotation\";\nimport img from \"./images/p1.jpeg\";\n// import {\n//   ADD_ANNOTATION,\n//   ANNOTATION_COMMENT_DELETE,\n// } from \"../_services/axiousURL\";\nimport ThreadedEditor from \"./ThreadedEditor\";\nimport ThreadedContent from \"./ThreadedContent\";\nimport BottomOptionsBar from \"./bottomOptionsBar\";\n\nimport clossIcon from \"./images/close-icon.png\";\nimport dotsIcon from \"./images/dots-icon.png\";\nimport downloadIcon from \"./images/download-icon.png\";\nimport editIcon from \"./images/edit-icon.png\";\nimport clockIcon from \"./images/clock-icon.png\";\nimport linkIcon from \"./images/link-icon.png\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  ADD_ANNOTATION,\n  ANNOTATION_COMMENT_DELETE,\n  ANNOTATION_LISTING,\n} from \"../../jwt/_services/axiousURL\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  getClientFirstName,\n  getClientId,\n  getClientLastName,\n} from \"../../helper/siteHelper\";\n\nconst ProjectImageAnnotation = (props) => {\n  //   mainCommentId = 107;\n  // const mainCommentId = props.history.location.state?.commentId;\n  // const projectId = props.history.location.state?.projectId;\n  // const imageUrl = props.history.location.state?.imageUrl;\n  // const imageName = props.history.location.state?.imageName;\n\n  const mainCommentId = localStorage.getItem(\"commentId\");\n  const projectId = localStorage.getItem(\"projectId\");\n  const imageUrl = localStorage.getItem(\"imageUrl\");\n  const imageName = localStorage.getItem(\"imageName\");\n\n  const [activeAnnotations, setActiveAnnotations] = useState([]);\n  const [allAnnotations, setAllAnnotations] = useState([]);\n  const [singleAnnotation, setSingleAnnotation] = useState({});\n  const [selectorType, setSelectorType] = useState(\"RECTANGLE\");\n  const [hideAnnotations, setHideAnnotations] = useState(false);\n  const [fakeAnnotations, setFakeAnnotations] = useState([]);\n  const history = useHistory();\n\n  const onChange = (annotation) => setSingleAnnotation(annotation);\n  const onSubmit = (annotation) => addAnnotationApi(annotation);\n\n  const addAnnotationApi = (annotation) => {\n    let helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n    helper.append(\"comment_id\", mainCommentId);\n    helper.append(\"geometry\", JSON.stringify(annotation.geometry));\n    helper.append(\"text\", annotation.data.comments[0].text);\n\n    GeneralServices.postRequest(helper, ADD_ANNOTATION).then(\n      (successResponse) => {\n        let data = successResponse.data;\n        let commentId = data[\"annotation_comment_id\"];\n        let annotationId = data[\"annotation_id\"];\n\n        addAnnotation(annotation, commentId, annotationId);\n      },\n      (errorResponse) => {\n        console.log(\"failed to add annotation.\");\n      }\n    );\n  };\n\n  const addAnnotation = (annotation, commentId, annotationId) => {\n    const { geometry, data } = annotation;\n    annotation.data.comments[0].id = commentId;\n    annotation.data.comments[0].client_firstname = getClientFirstName();\n    annotation.data.comments[0].client_lastname = getClientLastName();\n    annotation.data.comments[0].client_id = getClientId();\n    setSingleAnnotation({});\n    setAllAnnotations(\n      allAnnotations.concat({ geometry, data: { ...data, id: annotationId } })\n    );\n  };\n\n  const renderEditor = (props) => {\n    const { geometry } = props.annotation;\n    if (!geometry) return null;\n\n    return <ThreadedEditor {...props} />;\n  };\n\n  const renderContent = ({ key, annotation }) => {\n    return (\n      <ThreadedContent\n        key={key}\n        annotation={annotation}\n        annotations={allAnnotations}\n        setAnnotations={(annotations) => setAllAnnotations(annotations)}\n        onFocus={onFocus(key)}\n        onBlur={onBlur(key)}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const onFocus = (id) => (e) => {\n    setActiveAnnotations([...activeAnnotations, id]);\n  };\n  const onBlur = (id) => (e) => {\n    const index = activeAnnotations.indexOf(id);\n    setActiveAnnotations([\n      ...activeAnnotations.slice(0, index),\n      ...activeAnnotations.slice(index + 1),\n    ]);\n  };\n\n  const onDelete = (annotationCommentId, annotation) =>\n    onDeleteApi(annotationCommentId, annotation);\n\n  const onDeleteApi = (annotationCommentId, annotation) => {\n    let helper = FormDataHelper();\n    helper.append(\"annotation_comment_id\", annotationCommentId);\n\n    GeneralServices.postRequest(helper, ANNOTATION_COMMENT_DELETE).then(\n      (successResponse) => {\n        let tmpAllAnnotations = [...allAnnotations];\n        let allComments =\n          tmpAllAnnotations[tmpAllAnnotations.indexOf(annotation)].data\n            .comments;\n\n        let tmpComment = allComments.filter((comment) => {\n          return comment.id != annotationCommentId;\n        });\n\n        tmpAllAnnotations[tmpAllAnnotations.indexOf(annotation)].data.comments =\n          tmpComment;\n\n        setAllAnnotations(tmpAllAnnotations);\n      },\n      (errorResponse) => {}\n    );\n  };\n\n  const activeAnnotationComparator = (a, b) => {\n    return a.data.id === b;\n  };\n\n  const getAnnotations = () => {\n    var helper = FormDataHelper();\n    helper.append(\"comment_id\", mainCommentId);\n    GeneralServices.postRequest(helper, ANNOTATION_LISTING).then(\n      (successResp) => {\n        console.log(\"wow\", successResp);\n        let annotation;\n        successResp.data.forEach((singleAnnotation) => {\n          let geometry = JSON.parse(singleAnnotation.geometry);\n          let id = singleAnnotation.id;\n          let comments = singleAnnotation.annotation_comments;\n          let data = { comments, id };\n          annotation = { data: data, geometry };\n          setAllAnnotations((prevState) => [...prevState, annotation]);\n        });\n      },\n      (errResp) => {\n        console.log(errResp);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getAnnotations();\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <BottomOptionsBar\n          handleRectangleClick={() => setSelectorType(\"RECTANGLE\")}\n          handleOvalClick={() => setSelectorType(\"OVAL\")}\n          handlePointClick={() => setSelectorType(\"POINT\")}\n          handleHideClick={() => {\n            setHideAnnotations(!hideAnnotations);\n          }}\n        />\n\n        {/* HEADER START */}\n        <div className=\"header\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"media\">\n                  <div className=\"header-left\">\n                    <div className=\"heading\">\n                      <h2>{imageName}</h2>\n                      {/* <p>Deleting brand popup window is wrong</p> */}\n                    </div>\n                  </div>\n                  <div className=\"header-right\">\n                    <ul>\n                      <li\n                        onClick={() => history.goBack()}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <img src={clossIcon} alt=\"\" />\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* HEADER END */}\n        <div className=\"brand-inner\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"image-holder\">\n                  <Annotation\n                    src={imageUrl}\n                    alt=\"Two pebbles anthropomorphized holding hands\"\n                    activeAnnotationComparator={activeAnnotationComparator}\n                    activeAnnotations={activeAnnotations}\n                    annotations={\n                      hideAnnotations ? fakeAnnotations : allAnnotations\n                    }\n                    type={selectorType}\n                    value={singleAnnotation}\n                    renderEditor={renderEditor}\n                    renderContent={renderContent}\n                    onChange={onChange}\n                    onSubmit={onSubmit}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectImageAnnotation;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/ThreadedContent.js",["595","596","597","598","599","600","601"],"import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n// import { helper } from \"../helper\";\n// import { ADD_COMMENT_TO_ANNOTATION } from \"../_services/axiousURL\";\n// import { FormDataHelper } from \"../_services/FormDataHelper\";\n// import { GeneralServices } from \"../_services/General.services\";\nimport TextEditor from \"./TextEditor\";\nimport \"./css/annotationStyle.css\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { ADD_COMMENT_TO_ANNOTATION } from \"../../jwt/_services/axiousURL\";\nimport {\n  getClientFirstName,\n  getClientId,\n  getClientLastName,\n  getInitials,\n  getUserName,\n} from \"../../helper/siteHelper\";\n\nconst Comment = styled.div`\n  border-bottom: 1px solid whitesmoke;\n  padding: 8px 16px;\n`;\n\nconst CommentDescription = styled.div`\n  margin: 10px 0;\n`;\n\nconst UserPill = styled.span`\n  background-color: #2fb3c6;\n  border-radius: 4px;\n  color: white;\n  padding: 2px 4px;\n  font-size: 13.5px;\n`;\n\nconst Content = styled.div`\n  background: white;\n  border-radius: 2px;\n  box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);\n  margin: 8px 0;\n`;\n\nconst ContentClearanceTop = styled.div`\n  position: absolute;\n  height: 8px;\n  top: -8px;\n  left: -17px;\n  right: -17px;\n`;\n\nconst ContentClearanceLeft = styled.div`\n  position: absolute;\n  height: 100%;\n  left: -17px;\n  width: 20px;\n`;\n\nconst ContentClearanceRight = styled.div`\n  position: absolute;\n  height: 100%;\n  right: 0px;\n  width: 20px;\n`;\n\nclass ThreadedContent extends Component {\n  state = {\n    editorText: \"\",\n  };\n\n  onUpdateEditorText = (e) => {\n    this.setState({ editorText: e.target.value });\n  };\n\n  renderComment(comment, annotation, onDelete) {\n    return (\n      // <Comment key={comment.id}>\n      //   {comment.text}\n      //   <button onClick={() => onDelete(comment.id, annotation)}>X</button>\n      //   <CommentDescription>\n      //     <UserPill>{helper.getUserName(comment)}</UserPill>\n      //   </CommentDescription>\n      // </Comment>\n\n      <div className=\"client-modal-box\" key={comment.id}>\n        <div className=\"image-holder\">\n          {getInitials(getUserName(comment))}\n          {/* <p data-letters={getInitials(getUserName(comment))} /> */}\n        </div>\n        <div className=\"text-box\">\n          <h4>\n            {getUserName(comment)}\n            {/* <span>5 mint ago </span> */}\n            {/* <button\n              style={{ marginLeft: \"30px\", backgroundColor: \"transparent\" }}\n              onClick={() => onDelete(comment.id, annotation)}\n            >\n              x\n            </button> */}\n          </h4>\n          <p>{comment.text}</p>\n        </div>\n      </div>\n    );\n  }\n\n  addAnnotationCommentAPI(commentText, annotation, comments) {\n    var helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n    helper.append(\"text\", commentText);\n    helper.append(\"annotation_id\", annotation.data.id);\n    GeneralServices.postRequest(helper, ADD_COMMENT_TO_ANNOTATION).then(\n      (successResponse) => {\n        let annotationCommentId = successResponse.data.annotation_comment_id;\n\n        const annotationIndex = this.props.annotations.indexOf(annotation);\n        const annotations = this.props.annotations.map((annotation, i) =>\n          i === annotationIndex\n            ? {\n                ...annotation,\n                data: {\n                  ...annotation.data,\n                  comments: [\n                    ...comments,\n                    {\n                      id: annotationCommentId,\n                      text: commentText,\n                      client_id: getClientId(),\n                      client_firstname: getClientFirstName(),\n                      client_lastname: getClientLastName(),\n                    },\n                  ],\n                },\n              }\n            : annotation\n        );\n\n        this.setState({ editorText: \"\" });\n        this.props.setAnnotations(annotations);\n      },\n      (errorResponse) => {\n        console.log(errorResponse);\n      }\n    );\n  }\n\n  render() {\n    const { props } = this;\n    const { annotation } = props;\n    const { geometry } = annotation;\n    const comments = annotation.data && annotation.data.comments;\n\n    return (\n      <React.Fragment>\n        <div\n          key={props.annotation.data.id}\n          style={{\n            position: \"absolute\",\n            left: `${geometry.x}%`,\n            top: `${geometry.y + geometry.height}%`,\n            zIndex: \"40001\",\n          }}\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-body\">\n              <div className=\"modal-body-inner\">\n                {/* <Content\n          key={props.annotation.data.id}\n          style={{\n            position: \"absolute\",\n            left: `${geometry.x}%`,\n            top: `${geometry.y + geometry.height}%`,\n          }}\n        > */}\n                {/* <ContentClearanceTop />\n          <ContentClearanceLeft />\n          <ContentClearanceRight /> */}\n                {comments &&\n                  comments.map((comment) =>\n                    this.renderComment(comment, annotation, this.props.onDelete)\n                  )}\n                <TextEditor\n                  value={this.state.editorText}\n                  onChange={this.onUpdateEditorText}\n                  onBlur={props.onBlur}\n                  onFocus={props.onFocus}\n                  onSubmit={(e) => {\n                    console.log(\"i am called i think for adding comment\");\n                    this.addAnnotationCommentAPI(\n                      this.state.editorText,\n                      annotation,\n                      comments\n                    );\n                  }}\n                />\n                {/* </Content> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ThreadedContent;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/ThreadedEditor.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/bottomOptionsBar.js",["602"],"import clockIcon from \"./images/clock-icon.png\";\nimport \"./css/annotationStyle.css\";\n\nconst BottomOptionsBar = ({\n  handleRectangleClick,\n  handleOvalClick,\n  handlePointClick,\n  handleHideClick,\n}) => {\n  return (\n    <>\n      <div className=\"brand-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"brand-bottom-inner\">\n                <div className=\"brand-media\">\n                  <ul>\n                    {/* RECTANGLE ICON SVG */}\n                    <li\n                      style={{ cursor: \"pointer\" }}\n                      onClick={handleRectangleClick}\n                    >\n                      <svg\n                        wrike-icon-rectangle=\"\"\n                        class=\"_ngcontent-byp-19\"\n                        fill=\"#fff\"\n                        height=\"16\"\n                        viewBox=\"0 0 16 16\"\n                        width=\"16\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        role=\"presentation\"\n                      >\n                        <path d=\"M1.875 3c-.518 0-.938.448-.938 1v8c0 .552.42 1 .938 1h11.25c.518 0 .938-.448.938-1V4c0-.552-.42-1-.938-1H1.875zm0-1h11.25C14.161 2 15 2.895 15 4v8c0 1.105-.84 2-1.875 2H1.875C.839 14 0 13.105 0 12V4c0-1.105.84-2 1.875-2z\"></path>\n                      </svg>\n                    </li>\n                    {/* OVAL ICON SVG */}\n                    <li style={{ cursor: \"pointer\" }} onClick={handleOvalClick}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        version=\"1.0\"\n                        width=\"10.000000pt\"\n                        height=\"10.000000pt\"\n                        viewBox=\"0 0 1120.000000 1280.000000\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                      >\n                        <metadata>\n                          Created by potrace 1.15, written by Peter Selinger\n                          2001-2017\n                        </metadata>\n                        <g\n                          transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\n                          fill=\"#FFFF\"\n                          stroke=\"none\"\n                        >\n                          <path d=\"M5315 12693 c-16 -1 -104 -10 -195 -19 -171 -16 -354 -43 -475 -70 -38 -9 -88 -20 -110 -24 -113 -24 -449 -119 -510 -144 -64 -27 -141 -56 -148 -56 -18 0 -371 -157 -492 -218 -413 -209 -851 -506 -1180 -801 -241 -215 -637 -643 -755 -815 -8 -11 -27 -37 -42 -56 -41 -51 -36 -43 -139 -190 -338 -484 -579 -955 -798 -1563 -277 -766 -425 -1667 -408 -2472 9 -385 44 -787 93 -1065 38 -220 47 -262 70 -365 138 -601 306 -1073 590 -1650 139 -284 234 -447 413 -710 381 -560 905 -1097 1447 -1481 277 -197 659 -410 964 -539 474 -200 868 -305 1415 -377 147 -19 218 -22 520 -22 221 -1 381 3 435 11 47 7 135 17 195 23 180 19 629 112 720 149 11 5 42 14 70 20 46 11 96 30 137 52 10 5 26 9 37 9 48 0 441 160 653 266 410 205 816 480 1173 795 200 175 504 488 640 658 28 35 65 79 83 99 18 21 49 62 70 92 20 30 55 78 77 106 63 82 145 200 210 303 33 53 70 110 83 128 12 17 22 34 22 38 0 3 15 29 33 58 85 134 347 647 372 727 4 14 11 30 15 35 24 31 161 405 245 665 155 482 268 1085 305 1621 19 277 9 1084 -15 1169 -2 8 -11 80 -20 160 -36 322 -115 729 -201 1039 -19 69 -41 149 -49 176 -20 73 -117 356 -155 455 -128 331 -372 835 -516 1062 -15 24 -37 59 -49 78 -254 403 -469 677 -815 1044 -272 288 -719 643 -1091 868 -186 112 -412 231 -583 308 -447 200 -1024 359 -1451 400 -66 6 -153 15 -193 21 -67 8 -628 11 -697 2z m685 -1733 c98 -11 354 -60 450 -86 336 -93 676 -244 960 -426 373 -239 621 -463 985 -888 41 -47 47 -55 132 -170 141 -192 193 -268 193 -285 0 -8 5 -15 10 -15 6 0 10 -6 10 -14 0 -7 12 -29 28 -48 15 -20 56 -93 92 -164 36 -71 68 -131 71 -134 10 -8 53 -99 79 -165 13 -33 28 -67 35 -75 6 -8 19 -42 30 -74 11 -32 29 -80 42 -105 12 -25 41 -104 64 -176 23 -71 45 -139 50 -150 15 -38 48 -160 89 -335 22 -96 45 -189 50 -206 6 -17 10 -43 10 -59 0 -16 5 -54 10 -84 6 -31 17 -99 26 -151 8 -52 21 -133 29 -180 8 -47 14 -126 15 -175 0 -50 5 -96 10 -101 11 -11 14 -308 5 -424 -2 -36 -7 -99 -10 -140 -10 -140 -35 -375 -46 -425 -5 -27 -16 -101 -24 -165 -8 -63 -19 -135 -25 -160 -5 -25 -21 -99 -35 -165 -14 -66 -30 -129 -35 -140 -5 -11 -21 -67 -35 -124 -37 -144 -130 -420 -170 -505 -18 -39 -45 -100 -60 -136 -43 -103 -241 -485 -308 -595 -319 -520 -720 -956 -1157 -1260 -503 -349 -1032 -552 -1605 -615 -119 -13 -530 -13 -675 1 -348 31 -755 149 -1097 316 -237 116 -311 160 -600 361 -57 40 -161 122 -187 148 -39 40 -178 154 -186 154 -14 0 -131 122 -157 164 -14 21 -32 40 -41 43 -18 5 -125 130 -228 267 -68 91 -234 331 -234 339 0 3 -23 42 -51 88 -68 109 -243 461 -314 629 -110 261 -214 606 -286 945 -7 33 -18 65 -25 70 -7 6 -19 64 -28 130 -9 66 -21 140 -27 164 -26 113 -54 485 -53 726 0 184 5 269 35 580 15 155 80 525 120 685 71 278 145 512 234 740 192 488 440 900 791 1310 116 135 378 388 521 503 401 320 832 543 1288 666 197 53 381 84 635 105 79 7 501 -3 600 -14z\" />\n                        </g>\n                      </svg>\n                    </li>\n                    {/* DOT ICON SVG */}\n                    <li\n                      style={{ cursor: \"pointer\" }}\n                      onClick={handlePointClick}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        version=\"1.0\"\n                        width=\"10.000000pt\"\n                        height=\"10.000000pt\"\n                        viewBox=\"0 0 1280.000000 1280.000000\"\n                        preserveAspectRatio=\"xMidYMid meet\"\n                      >\n                        <metadata>\n                          Created by potrace 1.15, written by Peter Selinger\n                          2001-2017\n                        </metadata>\n                        <g\n                          transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\n                          fill=\"#ffffff\"\n                          stroke=\"none\"\n                        >\n                          <path d=\"M6325 10478 c-44 -4 -144 -15 -222 -23 -747 -81 -1487 -401 -2088 -904 -116 -97 -370 -351 -466 -466 -407 -488 -695 -1063 -824 -1646 -140 -630 -136 -1225 15 -1834 108 -441 281 -833 535 -1220 573 -872 1478 -1482 2503 -1690 164 -33 382 -61 605 -76 196 -13 404 -4 682 31 1132 144 2153 781 2780 1735 255 388 427 781 535 1220 167 680 155 1368 -35 2031 -153 533 -406 1006 -774 1449 -106 129 -366 383 -508 499 -512 418 -1097 696 -1728 821 -155 31 -252 44 -555 74 -120 13 -338 12 -455 -1z\" />\n                        </g>\n                      </svg>\n                    </li>\n\n                    {/* \n                    EYE ICON SV\n                     */}\n\n                    <li style={{ cursor: \"pointer\" }} onClick={handleHideClick}>\n                      <svg\n                        icon=\"\"\n                        fill=\"#fff\"\n                        height=\"16\"\n                        viewBox=\"0 0 16 16\"\n                        width=\"16\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        role=\"presentation\"\n                      >\n                        <path d=\"M8 10c-1.1045695 0-2-.8954305-2-2s.8954305-2 2-2 2 .8954305 2 2-.8954305 2-2 2zm0-1c.55228475 0 1-.44771525 1-1s-.44771525-1-1-1-1 .44771525-1 1 .44771525 1 1 1zm0-4c-2.04473536 0-3.93575293.97746613-5.70308348 3C4.06424707 10.0225339 5.95526464 11 8 11c2.0447354 0 3.9357529-.9774661 5.7030835-3C11.9357529 5.97746613 10.0447354 5 8 5zm0 7c-2.57732883 0-4.91066217-1.3333333-7-4 2.08933783-2.66666667 4.42267117-4 7-4 2.5773288 0 4.9106622 1.33333333 7 4-2.0893378 2.6666667-4.4226712 4-7 4z\"></path>\n                      </svg>\n                    </li>\n                    {/* <li>\n                      <a href=\"#\">\n                        <img src={clockIcon} alt=\"\" />\n                      </a>\n                    </li>\n                  </ul>\n                  <div className=\"zoomin\">\n                    <a href=\"#\">-</a>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"98%\"\n                    />\n                    <a href=\"#\">+</a>\n                  </div>\n                  <ul>\n                    <li>\n                      <a href=\"#\">\n                        <img src={clockIcon} alt=\"\" />\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\">\n                        <img src={clockIcon} alt=\"\" />\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\">\n                        <img src={clockIcon} alt=\"\" />\n                      </a>\n                    </li> */}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BottomOptionsBar;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/imageAnnotations/TextEditor.js",["603","604"],"import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Inner = styled.div`\n  padding: 8px 16px;\n\n  textarea {\n    border: 0;\n    font-size: 14px;\n    margin: 6px 0;\n    min-height: 60px;\n    outline: 0;\n  }\n`;\n\nconst Button = styled.div`\n  background: #212529;\n  border: 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1rem;\n  margin: 0;\n  outline: 0;\n  padding: 8px 16px;\n  text-align: center;\n  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);\n  width: 100%;\n\n  transition: background 0.21s ease-in-out;\n\n  &:focus,\n  &:hover {\n    background: #212529;\n  }\n`;\n\nfunction TextEditor(props) {\n  return (\n    <React.Fragment>\n      {/* <Inner> */}\n      {/* <textarea\n          placeholder=\"Write description\"\n          onFocus={props.onFocus}\n          onBlur={props.onBlur}\n          onChange={props.onChange}\n          value={props.value}\n        ></textarea> */}\n      <input\n        placeholder=\"Write description\"\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        onChange={props.onChange}\n        value={props.value}\n        type=\"text\"\n        className=\"form-control\"\n        style={{\n          backgroundColor: \"#212529\",\n          outline: \"none\",\n          border: \"0px\",\n          borderRadius: \"0\",\n          width: \"270px\",\n          paddingRight: \"0px\",\n          color: \"#fff\",\n          height: \"30px\",\n          paddingLeft: \"15px\",\n          zIndex: \"40000\",\n        }}\n      />\n      {/* </Inner> */}\n      {props.value && <Button onClick={props.onSubmit}>Submit</Button>}\n    </React.Fragment>\n  );\n}\n\nexport default TextEditor;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/enums/projectWorkingStatusEnum.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/brandDefinition.js",["605"],"import React, { useEffect, useState } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport BrandCheckBoxes from \"./brandCheckBoxes\";\n\nconst BrandDefinition = ({\n  checkboxName,\n  titleString,\n  URL,\n  checkBoxLabelClass,\n  checkBoxClass = \"check-boxes\",\n  children,\n}) => {\n  const [allCheckBoxes, setAllCheckBoxes] = useState([]);\n  const getAllCheckBoxes = () => {\n    var helper = FormDataHelper();\n    GeneralServices.postRequest(helper, URL).then(\n      (successResponse) => {\n        if (successResponse.data.length > 0)\n          setAllCheckBoxes(successResponse.data);\n      },\n      (errorResponse) => {\n        console.log(errorResponse);\n      }\n    );\n  };\n  useEffect(() => {\n    getAllCheckBoxes();\n  }, []);\n\n  return (\n    <>\n      <span className=\"inputLabel required\">{titleString}</span>\n      <div className=\"check-boxes-container\">\n        {allCheckBoxes.map((data) => {\n          return (\n            <BrandCheckBoxes\n              labelTitle={data.title}\n              checkboxName={checkboxName}\n              checkBoxLabelClass={checkBoxLabelClass}\n              checkBoxClass={checkBoxClass}\n              id={data.id}\n              key={data.id}\n            />\n          );\n        })}\n      </div>\n      {children}\n    </>\n  );\n};\n\nexport default BrandDefinition;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/brand/brandCheckBoxes.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/user/userProfile.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/companyProfile.js",["606","607","608","609","610","611","612","613","614"],"import React, { useEffect } from \"react\";\nimport \"../../assets/css/profile1.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencil } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrashCan } from \"@fortawesome/free-solid-svg-icons\";\nimport EditCompanyProfile from \"../../components/company/editCompanyProfile\";\nimport { useState } from \"react\";\nimport ConfirmPauseAccount from \"./confirmPauseAccount\";\nimport PaymentHistory from \"./paymentHistory\";\nimport CreditCard from \"./creditCard\";\nimport PaymentPlans from \"./paymentPlans\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport {\n  CLIENT_PAYMENT_METHODS,\n  LIST_COMPANY,\n  UPDATE_CANCEL_STATUS,\n  UPDATE_COMPANY_PAUSE_STATUS,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setAccountCancelStatus,\n  setAccountPauseStatus,\n  setAccountSuspendedStatus,\n} from \"../../redux/headerSettings/Action\";\nimport swal from \"sweetalert\";\nimport UpdateBillingInfo from \"./updateBillingInfo\";\n\nconst CompanyProfile = () => {\n  const [showEditCompanyProfile, setShowEditCompanyProfile] = useState(false);\n  const [showPauseAccount, setShowPauseAccount] = useState(false);\n  const [showPaymentHistory, setShowPaymentHistory] = useState(false);\n  const [showCCPopup, setShowCCPopup] = useState(false);\n  const [companyInfo, setCompanyInfo] = useState({});\n  const [paymentMethods, setPaymentMethods] = useState({\n    name: \"\",\n    brand: \"\",\n    last4: \"\",\n    billing_address: \"\",\n    address1: \"\",\n    address2: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    postal_code: \"\",\n  });\n  const [showUpdateBillingDetailsPopup, setShowUpdateBillingDetailsPopup] =\n    useState(false);\n\n  const dispatch = useDispatch();\n\n  const closeEditProfileCallBack = () => {\n    getCompanyInformation();\n    setShowEditCompanyProfile(false);\n  };\n\n  const closePauseAccountCallBack = () => {\n    getCompanyInformation();\n    setShowPauseAccount(false);\n  };\n\n  const closePaymentHistoryCallBack = () => {\n    setShowPaymentHistory(false);\n  };\n\n  const closeCCPopupCallBack = () => {\n    setShowCCPopup(false);\n    getPaymentMethod();\n  };\n\n  const closeUpdateBillingInfoPopupCallBack = () => {\n    setShowUpdateBillingDetailsPopup(false);\n    getPaymentMethod();\n  };\n\n  const getPaymentMethod = () => {\n    let helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n\n    GeneralServices.postRequest(helper, CLIENT_PAYMENT_METHODS).then(\n      (resp) => {\n        let tmpPM = resp.data[0];\n        setPaymentMethods(tmpPM);\n      },\n      (error) => {\n        console.log(\"payment methods errror\", error);\n      }\n    );\n  };\n\n  const getCompanyInformation = () => {\n    let helper = FormDataHelper();\n    helper.append(\"client_id\", getClientId());\n\n    GeneralServices.postRequest(helper, LIST_COMPANY).then((resp) => {\n      let tmpCompanyData = resp.data[0];\n\n      if (tmpCompanyData[\"requires\"].length > 0) {\n        var tmpRequires = Array();\n        tmpCompanyData[\"requires\"].forEach((element) => {\n          tmpRequires.push(element.id);\n        });\n\n        tmpCompanyData[\"requires\"] = tmpRequires;\n      }\n\n      if (tmpCompanyData[\"defines\"].length > 0) {\n        var tmpDefines = Array();\n        tmpCompanyData[\"defines\"].forEach((element) => {\n          tmpDefines.push(element.id);\n        });\n        tmpCompanyData[\"defines\"] = tmpDefines;\n      }\n\n      setCompanyInfo(tmpCompanyData);\n      dispatch(setAccountPauseStatus(tmpCompanyData.is_pause));\n      dispatch(setAccountCancelStatus(tmpCompanyData.is_canceled));\n      dispatch(setAccountSuspendedStatus(tmpCompanyData.is_suspended));\n    });\n  };\n\n  const handleReActivateAccount = () => {\n    let helper = FormDataHelper();\n    helper.append(\"client_id\", companyInfo.id);\n    helper.append(\"status\", \"N\");\n\n    GeneralServices.postRequest(helper, UPDATE_COMPANY_PAUSE_STATUS).then(\n      (resp) => {\n        swal(\"Account activated successfully !\", {\n          icon: \"success\",\n        });\n        getCompanyInformation();\n      },\n      (error) => {}\n    );\n  };\n\n  const handleCancelAccount = () => {\n    swal({\n      title: \"Xotic-Labs\",\n      text: \"Are you sure you want to cancel account?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((resp) => {\n      if (resp) {\n        let helper = FormDataHelper();\n        helper.append(\"client_id\", companyInfo.id);\n        helper.append(\"status\", \"Y\");\n\n        GeneralServices.postRequest(helper, UPDATE_CANCEL_STATUS).then(\n          (resp) => {\n            swal(\"Account status updated!\", {\n              icon: \"success\",\n            });\n\n            getCompanyInformation();\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n      } else {\n        console.log(\"User oppted not to cancel account\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    getCompanyInformation();\n    getPaymentMethod();\n  }, []);\n\n  return (\n    <>\n      <div className=\"font\">\n        <div className=\"top\">\n          <div className=\"profile\">\n            Company Settings\n            {showEditCompanyProfile && (\n              <EditCompanyProfile\n                companyInfo={companyInfo}\n                closePopup={closeEditProfileCallBack}\n              />\n            )}\n          </div>\n          <div className=\"invite\">\n            <button className=\"invite-in\">\n              <FontAwesomeIcon icon={faPlus} />\n              Invite\n            </button>\n          </div>\n        </div>\n        {showPauseAccount && (\n          <ConfirmPauseAccount\n            companyId={companyInfo.id}\n            closePopup={closePauseAccountCallBack}\n          />\n        )}\n        {showPaymentHistory && (\n          <PaymentHistory\n            companyId={companyInfo.id}\n            closePopup={closePaymentHistoryCallBack}\n          />\n        )}\n        {showCCPopup && (\n          <CreditCard\n            userName={paymentMethods.name}\n            userBillingAddress={paymentMethods.billing_address}\n            closePopup={closeCCPopupCallBack}\n          />\n        )}\n        {showUpdateBillingDetailsPopup && (\n          <UpdateBillingInfo\n            billingInfo={paymentMethods}\n            closePopup={closeUpdateBillingInfoPopupCallBack}\n          />\n        )}\n        <div className=\"main2\">\n          <div className=\"le\">\n            <div className=\"head1\">\n              <div className=\"head-text\">\n                <div className=\"person\">Company Information</div>\n                <div\n                  className=\"icon\"\n                  onClick={() => {\n                    setShowEditCompanyProfile(true);\n                  }}\n                >\n                  <FontAwesomeIcon icon={faPencil} id=\"myBtn\" size=\"xs\" />\n                </div>\n              </div>\n              <div className=\"container con-1\">\n                <div className=\"col-1\">\n                  <div>\n                    <label htmlFor=\"Company Name\" className=\"first-label\">\n                      <b>Company Name</b>\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"Company Name\"\n                      className=\"name\"\n                      value={\n                        companyInfo.company_name ? companyInfo.company_name : \"\"\n                      }\n                      readOnly\n                    />\n                  </div>\n                  <div>\n                    <div>\n                      <label htmlFor=\"Team Size\" className=\"first-label\">\n                        <b>Team Size</b>\n                      </label>\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"Team Size\"\n                      className=\"name\"\n                      value={\n                        companyInfo.team_size_title\n                          ? companyInfo.team_size_title\n                          : \"\"\n                      }\n                      readOnly\n                    />\n                  </div>\n                </div>\n                <div className=\"col-1\">\n                  <div>\n                    <label htmlFor=\"Administrator\" className=\"first-label\">\n                      <b>Administrator</b>\n                    </label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"Administrator\"\n                      className=\"name\"\n                      value={`${companyInfo.first_name} ${companyInfo.last_name}`}\n                      readOnly\n                    />\n                  </div>\n                  <div>\n                    <div>\n                      <label htmlFor=\"Primary Email\" className=\"first-label\">\n                        <b>Primary Email</b>\n                      </label>\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"Primary Email\"\n                      className=\"name\"\n                      value={\n                        companyInfo.email_address\n                          ? companyInfo.email_address\n                          : \"\"\n                      }\n                      readOnly\n                    />\n                  </div>\n                  <div>\n                    <div>\n                      <label htmlFor=\"Phone\" className=\"first-label\">\n                        <b>Phone</b>\n                      </label>\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"\"\n                      name=\"Phone\"\n                      className=\"name\"\n                      value={\n                        companyInfo.phone_number ? companyInfo.phone_number : \"\"\n                      }\n                      readOnly\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"head-text\">\n              <div className=\"container secnd\">\n                <h4 className=\"billing\">Billing Information</h4>\n                <div className=\"main-bill\">\n                  <div className=\"left-bill\">\n                    <div className=\"label-space\">\n                      <div className=\"credit-p\">\n                        {`Credit Card `}\n                        <span\n                          className=\"credit-i\"\n                          onClick={() => {\n                            setShowCCPopup(true);\n                          }}\n                        >\n                          <i>\n                            <FontAwesomeIcon icon={faPencil} size=\"xs\" />\n                          </i>\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <label htmlFor=\"credit card\">\n                        {paymentMethods.brand}\n                      </label>\n                      <div>\n                        <input\n                          type=\"text\"\n                          placeholder={`*******${paymentMethods.last4}`}\n                          name=\"credit card\"\n                          className=\"credit\"\n                          readOnly\n                        />\n                        <div>\n                          <label htmlFor=\"\" className=\"active-metod\">\n                            Active Payment Method\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"right-bill\">\n                    <div>\n                      <div className=\"label-space\">\n                        <div className=\"credit-p\">\n                          {`Billing Address `}\n                          <span\n                            className=\"credit-i\"\n                            onClick={() =>\n                              setShowUpdateBillingDetailsPopup(\n                                !showUpdateBillingDetailsPopup\n                              )\n                            }\n                          >\n                            <FontAwesomeIcon icon={faPencil} size=\"xs\" />\n                          </span>\n                          <div>\n                            <input\n                              type=\"text\"\n                              placeholder={paymentMethods.address1}\n                              name=\"credit card\"\n                              className=\"credit\"\n                              readOnly\n                            />\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"comp2\">\n                          <div className=\"label-space\">\n                            <div className=\"credit-p\">\n                              Invoices\n                              <div></div>\n                              <div\n                                className=\"label-space\"\n                                onClick={() => {\n                                  setShowPaymentHistory(true);\n                                }}\n                              >\n                                <label\n                                  htmlFor=\"\"\n                                  className=\"billing-h\"\n                                  id=\"myBtn2\"\n                                >\n                                  <span className=\"blue\">\n                                    View Billing History\n                                  </span>\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"le\">\n            <div className=\"head1\">\n              <div className=\"head-text\">\n                <div className=\"person\">Subscription</div>\n                <div className=\"icon-2\"></div>\n              </div>\n\n              {companyInfo.is_canceled != \"Y\" && (\n                <p className=\"trash \">\n                  Manage your creative service subscription here.\n                </p>\n              )}\n\n              {companyInfo.is_canceled != \"Y\" && (\n                <div className=\"trash2\">\n                  <span\n                    onClick={handleCancelAccount}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <FontAwesomeIcon icon={faTrashCan} />\n                    {` Cancel Account.`}\n                  </span>\n                  {companyInfo.is_pause == \"N\" &&\n                    companyInfo.is_suspended == \"N\" && (\n                      <span\n                        className=\"blue1 \"\n                        id=\"myBtn1\"\n                        onClick={() => {\n                          if (companyInfo.is_pause == \"N\")\n                            setShowPauseAccount(true);\n                          else handleReActivateAccount();\n                        }}\n                      >\n                        {companyInfo.is_pause == \"Y\"\n                          ? ` Re Activate Account`\n                          : ` Put Account on Pause`}\n                      </span>\n                    )}\n                </div>\n              )}\n              <hr />\n              {companyInfo && (\n                <PaymentPlans\n                  companyInfo={companyInfo}\n                  getCompanyInformationCallBack={getCompanyInformation}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyProfile;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/user/editUserProfile.js",["615","616","617","618","619","620","621"],"import * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport React, { useState, useEffect } from \"react\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport {\n  CLIENT_UPDATE_INFO,\n  LIST_COUNTRIES,\n  LIST_STATES,\n} from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\n\nconst EditUserProfile = ({ user, closePopup }) => {\n  const [allCountries, setAllCountries] = useState([]);\n  const [allStates, setAllStates] = useState([]);\n  const [filteredStates, setFilteredStates] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleCountryChange = (e, handleChange) => {\n    let tmpStates = allStates.filter((state) => {\n      return state.country_id == e.target.value;\n    });\n    setFilteredStates(tmpStates);\n    handleChange(e);\n  };\n\n  const fetchCountries = () => {\n    let helper = FormDataHelper();\n    GeneralServices.postRequest(helper, LIST_COUNTRIES).then((resp) => {\n      let countries = resp.data;\n      setAllCountries(countries);\n      fetchStates();\n    });\n  };\n  const fetchStates = () => {\n    let helper = FormDataHelper();\n    GeneralServices.postRequest(helper, LIST_STATES).then((resp) => {\n      let states = resp.data;\n      setAllStates(states);\n\n      let tmpStates;\n      console.log(\"asdsadd\", user);\n      if (user.country_id != null || user.state_id != \"0\") {\n        tmpStates = states.filter((state) => {\n          return state.country_id == user.country_id;\n        });\n      } else {\n        tmpStates = states;\n      }\n\n      setFilteredStates(tmpStates);\n    });\n  };\n\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  //   const [user, setUser] = useState({});\n\n  return (\n    <>\n      <div id=\"myModal\" className=\"modal\" style={{ display: \"block\" }}>\n        <div className=\"modal-content\">\n          <span onClick={closePopup} className=\"close\">\n            &times;\n          </span>\n          <div className=\"center-text\">Update personal info</div>\n          <Formik\n            enableReinitialize={true}\n            initialValues={{\n              firstName: user.first_name,\n              lastName: user.last_name,\n              email: user.email,\n              timeZone: user.timezone_id,\n              primaryAddress: user.address1,\n              secondaryAddress: user.address2,\n              city: user.city,\n              stateId: user.state_id,\n              postalCode: user.zip_code,\n              countryId: user.country_id ? user.country_id : \"\",\n              newPassword: \"\",\n              currentPassword: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              firstName: Yup.string().required(\"First Name is required\"),\n              lastName: Yup.string().required(\"Last Name is required\"),\n              email: Yup.string().required(\"Email is required\"),\n              newPassword: Yup.string().matches(\n                /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n                \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n              ),\n              currentPassword: Yup.string()\n                .required(\"Please enter current password\")\n                .oneOf([user.password, null], \"Invalid current password\"),\n            })}\n            onSubmit={(values, actions) => {\n              console.log(values);\n\n              let helper = FormDataHelper();\n              helper.append(\"client_id\", getClientId());\n              helper.append(\"first_name\", values.firstName);\n              helper.append(\"last_name\", values.lastName);\n              helper.append(\"email\", values.email);\n              helper.append(\"timezone_id\", values.timeZone);\n              helper.append(\"address1\", values.primaryAddress);\n              helper.append(\"address2\", values.secondaryAddress);\n              helper.append(\"city\", values.city);\n              helper.append(\"state_id\", values.stateId);\n              helper.append(\"zip_code\", values.postalCode);\n              helper.append(\"state_id\", values.stateId);\n              if (values.newPassword)\n                helper.append(\"password\", values.newPassword);\n              else helper.append(\"password\", user.password);\n\n              GeneralServices.postRequest(helper, CLIENT_UPDATE_INFO).then(\n                (resp) => {\n                  swal(\"Updated successfully\", {\n                    icon: \"success\",\n                  });\n                  closePopup();\n                },\n                (error) => {}\n              );\n            }}\n          >\n            {({ isSubmitting, setFieldValue, values, handleChange }) => (\n              <Form>\n                <div className=\"container\">\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"name\">\n                        <b>\n                          First name <span className=\"steric\">*</span>\n                        </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      name=\"firstName\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"firstName\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"name\">\n                        <b>\n                          Last name<span className=\"steric\">*</span>\n                        </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      name=\"lastName\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"lastName\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"email\">\n                        <b>\n                          Email<span className=\"steric\">*</span>\n                        </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Enter Email\"\n                      name=\"email\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"name\">\n                        <b>\n                          Time Zone <span className=\"steric\">*</span>\n                        </b>\n                      </label>\n                    </div>\n                    <Field as=\"select\" className=\"time-zone2\" name=\"timeZone\">\n                      <option value=\"1\">\n                        Pacific Standard Time - PST (UTC-8)\n                      </option>\n                      <option value=\"2\">\n                        Mountain Standard Time - MST (UTC-7)\n                      </option>\n                      <option value=\"3\">\n                        Central Standard Time - CST (UTC-6)\n                      </option>\n                      <option value=\"4\">\n                        Eastern Standard Time - EST (UTC-5)\n                      </option>\n                    </Field>\n                  </div>\n\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"adress\">\n                        <b>Address1</b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Address\"\n                      name=\"primaryAddress\"\n                      className=\"namep\"\n                    />\n                  </div>\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"adress1\">\n                        <b> Address2 </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Address2\"\n                      name=\"secondaryAddress\"\n                      className=\"namep\"\n                    />\n                  </div>\n                  <div className=\"parent-select\">\n                    <div style={{ flex: 1 }}>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"address\">\n                            <b>City </b>\n                          </label>\n                        </div>\n                        <Field\n                          type=\"text\"\n                          placeholder=\"Enter City\"\n                          name=\"city\"\n                          className=\"city\"\n                        />\n                      </div>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"address1\">\n                            <b>ZIP / postal code</b>\n                          </label>\n                        </div>\n                        <Field\n                          type=\"text\"\n                          placeholder=\"----\"\n                          name=\"postalCode\"\n                          className=\"city\"\n                        />\n                      </div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"state-label\" htmlFor=\"adress1\">\n                            <b>State</b>\n                          </label>\n                        </div>\n                        <Field\n                          as=\"select\"\n                          className=\"country-state\"\n                          name=\"stateId\"\n                        >\n                          {filteredStates &&\n                            filteredStates.map((state) => {\n                              return (\n                                <option key={state.id} value={state.id}>\n                                  {state.title}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </div>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"adress1\">\n                            <b>Country</b>\n                          </label>\n                        </div>\n                        <Field\n                          as=\"select\"\n                          className=\"state-picker\"\n                          name=\"countryId\"\n                          onChange={(e) => handleCountryChange(e, handleChange)}\n                        >\n                          {allCountries &&\n                            allCountries.map((country) => {\n                              return (\n                                <option key={country.id} value={country.id}>\n                                  {country.title}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div>\n                      <div className=\"label-space\">\n                        <label className=\"state-label\" htmlFor=\"adress1\">\n                          <b>New password</b>\n                        </label>\n                      </div>\n                      <Field\n                        type={showPassword ? \"text\" : \"password\"}\n                        placeholder=\"Enter New Password\"\n                        className=\"namep\"\n                        name=\"newPassword\"\n                      />\n                      <ErrorMessage\n                        name=\"newPassword\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div>\n                      <p className=\"pas-para\">\n                        leave blank if you dont want to change password.\n                      </p>\n                      <input\n                        type=\"checkbox\"\n                        className=\"show-p\"\n                        onClick={() => setShowPassword(!showPassword)}\n                      />\n                      <label htmlFor=\"show-p\" className=\"show-p\">\n                        Show Password\n                      </label>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"state-label\" htmlFor=\"adress1\">\n                        <b>\n                          Current password <span className=\"steric\">*</span>\n                        </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"password\"\n                      placeholder=\"Enter Password\"\n                      className=\"namep\"\n                      name=\"currentPassword\"\n                    />\n                    <p className=\"pas-para\">\n                      We need your current password to confirm your changes.\n                    </p>\n                    <ErrorMessage\n                      name=\"currentPassword\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div className=\"last-btn-pp\">\n                    <button className=\"last-btn\" type=\"submit\">\n                      Save Changes\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditUserProfile;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/user/userFileTypes.js",["622","623","624","625"],"import React, { useEffect, useState } from \"react\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport {\n  CLIENT_FILE_TYPES,\n  UPDATE_CLIENT_FILE_DELIVERABLES,\n} from \"../../jwt/_services/axiousURL\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport swal from \"sweetalert\";\n\nconst UserFileTypes = ({ profileId }) => {\n  const [selectedTypes, setSelectedTypes] = useState([]);\n\n  const handleSave = () => {\n    let helper = FormDataHelper();\n    helper.append(\"client_profile_id\", profileId);\n    helper.append(\"file_deliverables\", JSON.stringify(selectedTypes));\n    GeneralServices.postRequest(helper, UPDATE_CLIENT_FILE_DELIVERABLES).then(\n      (resp) => {\n        swal(\"Updated successfully\", {\n          icon: \"success\",\n        });\n      },\n      (error) => {\n        console.log(\"failed to log\");\n      }\n    );\n  };\n  const handleChange = (event) => {\n    let tmpSelctedArr = [...selectedTypes];\n    let value = event.target.value;\n    let index = tmpSelctedArr.indexOf(value);\n    if (index !== -1) {\n      tmpSelctedArr.splice(index, 1);\n      setSelectedTypes(tmpSelctedArr);\n    } else {\n      tmpSelctedArr.push(value);\n      setSelectedTypes(tmpSelctedArr);\n    }\n  };\n\n  const fetchUserSelectedTypes = () => {\n    let helper = FormDataHelper();\n    helper.append(\"client_profile_id\", profileId);\n    GeneralServices.postRequest(helper, CLIENT_FILE_TYPES).then((resp) => {\n      let selectedFileType = resp.data;\n      let tmp = Array();\n      selectedFileType.forEach((element) => {\n        tmp.push(element.file_deliverable_id);\n      });\n      setSelectedTypes(tmp);\n    });\n  };\n\n  const isSelected = (value) => {\n    let index = selectedTypes.indexOf(value);\n    if (index == -1) return false;\n    return true;\n  };\n\n  useEffect(() => {\n    fetchUserSelectedTypes();\n  }, []);\n\n  return (\n    <>\n      <div className=\"profile-parent\">\n        <div className=\"head-text\">\n          <div className=\"container secnd\">\n            <h3>Preferred File Type</h3>\n            <div className=\"para-space\">\n              <p className=\"paraa\">\n                All Future design request will default to this type dont worry\n                you can update settings per design needed\n              </p>\n            </div>\n            <div className=\"check-space\">\n              <input\n                type=\"checkbox\"\n                id=\"any\"\n                name=\"fileType\"\n                value=\"1\"\n                checked={isSelected(\"1\")}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"any\"> Any</label>\n            </div>\n            <div className=\"check-space\">\n              <input\n                type=\"checkbox\"\n                id=\"PhotoShop\"\n                name=\"fileType\"\n                value=\"2\"\n                checked={isSelected(\"2\")}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"PhotoShop\"> PhotoShop</label>\n            </div>\n            <div className=\"check-space\">\n              <input\n                type=\"checkbox\"\n                id=\"Illustrator\"\n                name=\"fileType\"\n                value=\"3\"\n                checked={isSelected(\"3\")}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"Illustrator\"> Illustrator</label>\n            </div>\n            <div className=\"check-space\">\n              <input\n                type=\"checkbox\"\n                id=\"inDesign\"\n                name=\"fileType\"\n                value=\"4\"\n                checked={isSelected(\"4\")}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"inDesign\"> inDesign</label>\n            </div>\n            <div className=\"check-space\">\n              <input\n                type=\"checkbox\"\n                id=\"PDF\"\n                name=\"fileType\"\n                value=\"5\"\n                checked={isSelected(\"5\")}\n                onChange={handleChange}\n              />\n              <label htmlFor=\"PDF\"> PDF</label>\n            </div>\n            <div className=\"submit-pp\" onClick={handleSave}>\n              <input type=\"submit\" className=\"submit\" value=\"Save\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserFileTypes;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/company/editCompanyProfile.js",["626"],"import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport React, { useState } from \"react\";\nimport BrandDefinition from \"../brand/brandDefinition\";\nimport {\n  LIST_DESIGN_OPTIONS,\n  LIST_INDUSTRY_OPTIONS,\n  UPDATE_COMPANY,\n} from \"../../jwt/_services/axiousURL\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport swal from \"sweetalert\";\n\nconst EditCompanyProfile = ({ companyInfo, closePopup }) => {\n  const [showBestContactPhone, setShowBestContactPhone] = useState(true);\n\n  const handleBestContactChange = (e) => {\n    if (e.target.value == 1) setShowBestContactPhone(true);\n    else setShowBestContactPhone(false);\n  };\n\n  return (\n    <>\n      <div id=\"myModal\" className=\"modal\" style={{ display: \"block\" }}>\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={closePopup}>\n            &times;\n          </span>\n          <div className=\"center-text\">Update My Company Information</div>\n          <Formik\n            // enableReinitialize={true}\n            initialValues={{\n              companyName: companyInfo.company_name,\n              email: companyInfo.email_address,\n              teamSize: companyInfo.team_size_id\n                ? companyInfo.team_size_id\n                : \"\",\n              website: companyInfo.website ? companyInfo.website : \"\",\n              facebook: companyInfo.facebook ? companyInfo.facebook : \"\",\n              twitter: companyInfo.twitter ? companyInfo.twitter : \"\",\n              instagram: companyInfo.instagram ? companyInfo.instagram : \"\",\n              bestContactEmail: companyInfo.best_contact_email\n                ? companyInfo.best_contact_email\n                : \"\",\n              bestContactPhoneNumber: companyInfo.best_contact_phone_number\n                ? companyInfo.best_contact_phone_number\n                : \"\",\n              defines: companyInfo.defines.length ? companyInfo.defines : [],\n              requires: companyInfo.requires.length ? companyInfo.requires : [],\n            }}\n            validationSchema={Yup.object().shape({\n              companyName: Yup.string().required(\n                \"Please enter the name of the company\"\n              ),\n              email: Yup.string()\n                .required(\"Please enter email address\")\n                .email(\"Please enter valid email addrress\"),\n            })}\n            onSubmit={(values, actions) => {\n              console.log(values);\n\n              let helper = FormDataHelper();\n              helper.append(\"client_id\", companyInfo.id);\n              helper.append(\"company_name\", values.companyName);\n              helper.append(\"email_address\", values.email);\n              helper.append(\"team_size_id\", values.teamSize);\n              helper.append(\"website\", values.website);\n              helper.append(\"facebook\", values.facebook);\n              helper.append(\"twitter\", values.twitter);\n              helper.append(\"instagram\", values.instagram);\n              helper.append(\"best_contact_email\", values.bestContactEmail);\n              helper.append(\n                \"best_contact_phone_number\",\n                values.bestContactPhoneNumber\n              );\n              helper.append(\"defines\", JSON.stringify(values.defines));\n              helper.append(\"requires\", JSON.stringify(values.requires));\n              helper.append(\"is_sharing_allowed\", \"Y\");\n\n              GeneralServices.postRequest(helper, UPDATE_COMPANY).then(\n                (resp) => {\n                  swal(\"Company profile updated!\", {\n                    icon: \"success\",\n                  });\n                  closePopup();\n                },\n                (error) => {\n                  actions.setSubmitting(false);\n                }\n              );\n            }}\n          >\n            {({ errors, status, touched, isSubmitting }) => (\n              <Form>\n                <div className=\"container-fluid\">\n                  <div className=\"comp\">\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"name\">\n                        Company Name <span className=\"steric\">*</span>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Enter Company Name\"\n                      name=\"companyName\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"companyName\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div className=\"comp\">\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"email\">\n                        Email<span className=\"steric\">*</span>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Enter Email\"\n                      name=\"email\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div>\n                    <p className=\"pop-para2\">Number of Employees</p>\n                    <div>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"1\" value=\"1\" />\n                      <label htmlFor=\"1\" className=\"radio-label\">\n                        It's just me\n                      </label>\n                      {/* <span className=\"radio-label\">Its Just Me</span> */}\n                      <Field type=\"radio\" name=\"teamSize\" id=\"2\" value=\"2\" />\n                      <label className=\"radio-label\" htmlFor=\"2\">\n                        2-5\n                      </label>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"3\" value=\"3\" />\n                      <label className=\"radio-label\" htmlFor=\"3\">\n                        6-20\n                      </label>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"4\" value=\"4\" />\n                      <label className=\"radio-label\" htmlFor=\"4\">\n                        21-50\n                      </label>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"5\" value=\"5\" />\n                      <label className=\"radio-label\" htmlFor=\"5\">\n                        51-100\n                      </label>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"6\" value=\"6\" />\n                      <label className=\"radio-label\" htmlFor=\"6\">\n                        101-250\n                      </label>\n                      <Field type=\"radio\" name=\"teamSize\" id=\"7\" value=\"7\" />\n                      <label className=\"radio-label\" htmlFor=\"7\">\n                        250+\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"web-space\">\n                    <div className=\"url-p\">\n                      <label className=\"url-label\" htmlFor=\"websiteName\">\n                        <span className=\"url-l\"> Website URL</span>\n                      </label>\n                      <Field\n                        type=\"text\"\n                        id=\"websiteName\"\n                        placeholder=\"Enter URL\"\n                        name=\"website\"\n                        className=\"namef\"\n                      />\n                    </div>\n                    <div className=\"url-p\">\n                      <label className=\"url-label\" htmlFor=\"facebookUrl\">\n                        <span className=\"url-l\"> Facebook.com</span>\n                      </label>\n                      <Field\n                        type=\"text\"\n                        id=\"facebookUrl\"\n                        placeholder=\"Enter Facebook\"\n                        name=\"facebook\"\n                        className=\"namef\"\n                      />\n                    </div>\n                    <div className=\"url-p\">\n                      <label className=\"url-label\" htmlFor=\"twitterUrl\">\n                        <span className=\"url-l\"> Twitter</span>\n                      </label>\n                      <Field\n                        type=\"text\"\n                        id=\"twitterUrl\"\n                        placeholder=\"Enter Twitter\"\n                        name=\"twitter\"\n                        className=\"namef\"\n                      />\n                    </div>\n                    <div className=\"url-p\">\n                      <label className=\"url-label\" htmlFor=\"instagramUrl\">\n                        <span className=\"url-l\"> Instagram</span>\n                      </label>\n                      <Field\n                        type=\"text\"\n                        id=\"instagramUrl\"\n                        placeholder=\"Enter Instagaram\"\n                        name=\"instagram\"\n                        className=\"namef\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"phone\">\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"email\">\n                        What's the best way to contact you?\n                      </label>\n                    </div>\n                    <div className=\"phone-f\">\n                      <div>\n                        <Field\n                          as=\"select\"\n                          className=\"name-picker\"\n                          name=\"contactType\"\n                          onChange={handleBestContactChange}\n                        >\n                          <option value=\"1\">Phone</option>\n                          <option value=\"2\">Email</option>\n                        </Field>\n                      </div>\n\n                      {showBestContactPhone && (\n                        <div className=\"name-phonep\">\n                          <Field\n                            type=\"text\"\n                            placeholder=\" \"\n                            name=\"bestContactPhoneNumber\"\n                            className=\"name-phone\"\n                          />\n                        </div>\n                      )}\n                      {!showBestContactPhone && (\n                        <div className=\"name-phonep\">\n                          <Field\n                            type=\"text\"\n                            placeholder=\" \"\n                            name=\"bestContactEmail\"\n                            className=\"name-phone\"\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  {/* <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"adress1\">\n                        What types of problems are you solving?\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"\"\n                      className=\"namep\"\n                      name=\"solvingProblem\"\n                    />\n                  </div> */}\n\n                  <div\n                    className=\"cnp\"\n                    style={{ paddingTop: \"2rem\", paddingBottom: \"0rem\" }}\n                  >\n                    <div className=\"inputField\">\n                      <BrandDefinition\n                        checkboxName={\"defines\"}\n                        titleString=\"What best defines your industry?\"\n                        URL={LIST_INDUSTRY_OPTIONS}\n                        checkBoxLabelClass={\"label-check\"}\n                        checkBoxClass={\"check-boxes-company\"}\n                      >\n                        <ErrorMessage\n                          name=\"defines\"\n                          component=\"div\"\n                          className=\"invalid-feedback\"\n                        />\n                      </BrandDefinition>\n                      <br />\n                    </div>\n                  </div>\n\n                  <div className=\"inputField\">\n                    <BrandDefinition\n                      checkboxName={\"requires\"}\n                      titleString=\"What do you want to create?\"\n                      URL={LIST_DESIGN_OPTIONS}\n                      checkBoxLabelClass={\"label-check\"}\n                      checkBoxClass={\"check-boxes-company\"}\n                    >\n                      <ErrorMessage\n                        name=\"requires\"\n                        component=\"div\"\n                        className=\"invalid-feedback\"\n                      />\n                    </BrandDefinition>\n                    <br />\n                  </div>\n                  <div className=\"last-btn-pp\">\n                    <button\n                      type=\"button\"\n                      onClick={closePopup}\n                      className=\"last-btn2\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      className=\"last-btn\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCompanyProfile;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/confirmPauseAccount.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/paymentHistory.js",["627"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { GET_PAYMENT_HISTORY } from \"../../jwt/_services/axiousURL\";\nimport { openInNewTab } from \"../../helper/siteHelper\";\n\nconst PaymentHistory = ({ companyId, closePopup }) => {\n  const [paymentHistory, setPaymentHistory] = useState([]);\n  const [upcomingInvoice, setUpcomingInvoice] = useState([]);\n\n  const fetchPaymentHistory = () => {\n    let helper = FormDataHelper();\n    helper.append(\"company_id\", companyId);\n\n    GeneralServices.postRequest(helper, GET_PAYMENT_HISTORY).then((resp) => {\n      console.log(resp);\n      let tmpPayments = resp.data[\"charges\"];\n      let tmpUpcomingInvoice = resp.data[\"upcoming_invoice\"];\n\n      console.log(upcomingInvoice.length);\n      console.log(tmpUpcomingInvoice[0][\"amount_due\"]);\n\n      setPaymentHistory(tmpPayments);\n      setUpcomingInvoice(tmpUpcomingInvoice);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"upcomingInvoice\", upcomingInvoice);\n    fetchPaymentHistory();\n  }, []);\n\n  return (\n    <>\n      <div id=\"myModal2\" className=\"modal2\" style={{ display: \"block\" }}>\n        <div className=\"modal-content2\">\n          <span onClick={closePopup} className=\"close2\">\n            &times;\n          </span>\n          <div className=\"center-text\">Invoices</div>\n          <div className=\"container-fluid\">\n            <div className=\"drafts\">Drafts</div>\n            <div className=\"hl-parent\">\n              <div className=\"hl\">\n                <h4>Scheduled for </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Description </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Status </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Amount Due</h4>\n              </div>\n            </div>\n            <div className=\"b-line\"></div>\n            {upcomingInvoice.length > 0 && (\n              <div className=\"hl-parent\">\n                <div className=\"hl\">\n                  <p>{upcomingInvoice[0][\"period_end\"]} </p>\n                </div>\n                <div className=\"hl\">\n                  <p>{upcomingInvoice[0][\"description\"]}</p>\n                </div>\n                <div className=\"hl\">\n                  <p>{upcomingInvoice[0][\"status\"]} </p>\n                </div>\n                <div className=\"hl\">\n                  <p>\n                    {`$ ${upcomingInvoice[0][\"amount_due\"]} ${upcomingInvoice[0][\"currency\"]}`}\n                  </p>\n                </div>\n              </div>\n            )}\n            <div className=\"drafts\">Past</div>\n            <div className=\"hl-parent\">\n              <div className=\"hl\">\n                <h4>Date </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Description </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Status </h4>\n              </div>\n              <div className=\"hl\">\n                <h4>Amount Paid</h4>\n              </div>\n            </div>\n            <div className=\"b-line\"></div>\n\n            {paymentHistory.map((singleHistory, key) => {\n              return (\n                <div className=\"hl-parent\" key={key}>\n                  <div className=\"hl\">\n                    <p>\n                      {singleHistory[\"created\"]}\n                      <i className=\"fa fa-eye eye\" aria-hidden=\"true\"></i>\n                      <FontAwesomeIcon\n                        onClick={() => {\n                          openInNewTab(singleHistory[\"receipt_url\"]);\n                        }}\n                        icon={faEye}\n                      />\n                      <i\n                        className=\"fa fa-file-pdf-o eye\"\n                        aria-hidden=\"true\"\n                      ></i>\n                    </p>\n                  </div>\n                  <div className=\"hl\">\n                    <p>{singleHistory[\"description\"]}</p>\n                  </div>\n                  <div className=\"hl\">\n                    <p>{singleHistory[\"status\"]} </p>\n                  </div>\n                  <div className=\"hl\">\n                    <p>{`$ ${singleHistory[\"amount\"]} ${singleHistory[\"currency\"]}`}</p>\n                  </div>\n                  <div className=\"bline-2\"></div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PaymentHistory;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/creditCard.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/paymentPlans.js",["628","629","630","631","632","633","634","635","636","637","638"],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/subscribeButton.js",["639","640","641","642"],"import React from \"react\";\n\nconst SubscribeButton = ({\n  companyInfo,\n  plandId,\n  title,\n  activePlanId,\n  handleSubscriblePlan,\n}) => {\n  if (companyInfo.is_pause == \"Y\") {\n    return (\n      <button\n        onClick={() => handleSubscriblePlan(plandId, title)}\n        className=\"sub-btn\"\n      >\n        Re Activate & Subscribe\n      </button>\n    );\n  } else if (\n    companyInfo.is_suspended == \"Y\" ||\n    companyInfo.is_canceled == \"Y\"\n  ) {\n    return (\n      <button\n        onClick={() => handleSubscriblePlan(plandId, title)}\n        className=\"sub-btn\"\n      >\n        Subscribe\n      </button>\n    );\n  } else if (plandId == activePlanId) {\n    return <></>;\n  } else {\n    return (\n      <button\n        onClick={() => handleSubscriblePlan(plandId, title)}\n        className=\"sub-btn\"\n      >\n        Subscribe\n      </button>\n    );\n  }\n};\n\nexport default SubscribeButton;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/stripeCreditCard.js",["643","644","645"],"import React, { useEffect, useMemo, useState } from \"react\";\n\nimport {\n  useStripe,\n  useElements,\n  CardNumberElement,\n  CardCvcElement,\n  CardExpiryElement,\n} from \"@stripe/react-stripe-js\";\nimport useResponsiveFontSize from \"./useResponsiveFontSize\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { CLIENT_ADD_CARD_TOKEN } from \"../../jwt/_services/axiousURL\";\nimport swal from \"sweetalert\";\n\nconst useOptions = () => {\n  const fontSize = useResponsiveFontSize();\n  const options = useMemo(\n    () => ({\n      style: {\n        base: {\n          fontSize,\n          color: \"#424770\",\n          letterSpacing: \"0.025em\",\n          fontFamily: \"Source Code Pro, monospace\",\n          \"::placeholder\": {\n            color: \"#aab7c4\",\n          },\n        },\n        invalid: {\n          color: \"#9e2146\",\n        },\n      },\n    }),\n    [fontSize]\n  );\n\n  return options;\n};\n\nconst StripeCreditCard = ({\n  // getUserName,\n  // getBillingAddress,\n  callSubmit,\n  setShouldCallSubmit,\n  closeWindow,\n  setErrorMessageCallBack,\n}) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const options = useOptions();\n  const handleSubmit = async (event) => {\n    // Stripe.js has not loaded yet. Make sure to disable\n    // form submission until Stripe.js has loaded.\n    if (!stripe || !elements) return;\n\n    // let data = { name: getUserName(), address_line1: getBillingAddress() };\n    stripe.createToken(elements.getElement(CardNumberElement)).then(\n      (resp) => {\n        if (resp.error) {\n          setErrorMessageCallBack(true, resp.error.message);\n          setShouldCallSubmit(false);\n          return;\n        }\n\n        let helper = FormDataHelper();\n        helper.append(\"client_id\", getClientId());\n        helper.append(\"token_id\", resp.token[\"id\"]);\n\n        GeneralServices.postRequest(helper, CLIENT_ADD_CARD_TOKEN).then(\n          (resp) => {\n            swal(\"Card added successfully!\", {\n              icon: \"success\",\n            });\n\n            setShouldCallSubmit(false);\n            closeWindow();\n          },\n          (error) => {\n            swal(\"Failed to add card!\", {\n              icon: \"success\",\n            });\n            setShouldCallSubmit(false);\n            closeWindow();\n          }\n        );\n      },\n      (error) => {\n        setShouldCallSubmit(false);\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (callSubmit == true) {\n      handleSubmit();\n    }\n  }, [callSubmit]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Card number\n        <CardNumberElement options={options} />\n      </label>\n      <label>\n        Expiration date\n        <CardExpiryElement options={options} />\n      </label>\n      <label>\n        CVC\n        <CardCvcElement options={options} />\n      </label>\n    </form>\n  );\n};\n\nexport default StripeCreditCard;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/useResponsiveFontSize.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/helper/accountHelper.js",["646","647","648","649"],"import { useSelector } from \"react-redux\";\n\nexport function isAccountCanceled(headerSettings) {\n  return headerSettings.accountCancelStatus == \"Y\" ? true : false;\n}\n\nexport function isAccountSuspended(headerSettings) {\n  return headerSettings.accountSuspendedStatus == \"Y\" ? true : false;\n}\n\nexport function isAccountPaused(headerSettings) {\n  return headerSettings.accountPauseStatus == \"Y\" ? true : false;\n}\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/company/updateBillingInfo.js",["650","651","652","653"],"import React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport {\n  LIST_COUNTRIES,\n  LIST_STATES,\n  UPDATE_CLIENT_BILLING_INFO,\n} from \"../../jwt/_services/axiousURL\";\nimport { getClientId } from \"../../helper/siteHelper\";\nimport swal from \"sweetalert\";\n\nconst UpdateBillingInfo = ({ billingInfo, closePopup }) => {\n  const [allCountries, setAllCountries] = useState([]);\n  const [allStates, setAllStates] = useState([]);\n  const [filteredStates, setFilteredStates] = useState([]);\n\n  const handleCountryChange = (e, handleChange) => {\n    let tmpStates = allStates.filter((state) => {\n      return state.country_id == e.target.value;\n    });\n    setFilteredStates(tmpStates);\n    handleChange(e);\n  };\n\n  const fetchCountries = () => {\n    let helper = FormDataHelper();\n    GeneralServices.postRequest(helper, LIST_COUNTRIES).then((resp) => {\n      let countries = resp.data;\n      setAllCountries(countries);\n      fetchStates();\n    });\n  };\n  const fetchStates = () => {\n    let helper = FormDataHelper();\n    GeneralServices.postRequest(helper, LIST_STATES).then((resp) => {\n      let states = resp.data;\n      setAllStates(states);\n\n      let tmpStates = states;\n      //   tmpStates = states;\n      if (billingInfo.country != null || billingInfo.state != \"0\") {\n        tmpStates = states.filter((state) => {\n          return state.country_id == billingInfo.country;\n        });\n      }\n\n      setFilteredStates(tmpStates);\n    });\n  };\n\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  return (\n    <>\n      <div id=\"myModal3\" className=\"modal3\" style={{ display: \"block\" }}>\n        <div className=\"modal-content3\">\n          <span className=\"close3\" onClick={closePopup}>\n            &times;\n          </span>\n          <div className=\"center-text\">Update Billing Information</div>\n          {/* {showErrorMessage && (\n            <div className=\"invalid-feedback\">\n              <span>{errorMessage}</span>\n            </div>\n          )} */}\n          <Formik\n            enableReinitialize={true}\n            initialValues={{\n              cardHolderName: billingInfo.name ? billingInfo.name : \"\",\n              primaryAddress: billingInfo.address1 ? billingInfo.address1 : \"\",\n              secondaryAddress: billingInfo.address2\n                ? billingInfo.address2\n                : \"\",\n              state: billingInfo.state ? billingInfo.state : \"\",\n              country: billingInfo.country ? billingInfo.country : \"\",\n              city: billingInfo.city ? billingInfo.city : \"\",\n              postalCode: billingInfo.postal_code\n                ? billingInfo.postal_code\n                : \"\",\n            }}\n            validationSchema={Yup.object().shape({\n              cardHolderName: Yup.string().required(\n                \"Card holder Name is required\"\n              ),\n              primaryAddress: Yup.string().required(\"Address1 is required\"),\n            })}\n            onSubmit={(values, actions) => {\n              console.log(values, actions);\n\n              let helper = FormDataHelper();\n              helper.append(\"client_id\", getClientId());\n              helper.append(\"pm_id\", billingInfo.pm_id);\n              helper.append(\"name\", values.cardHolderName);\n              helper.append(\"address1\", values.primaryAddress);\n              helper.append(\"address2\", values.secondaryAddress);\n              helper.append(\"city\", values.city);\n              helper.append(\"country\", values.country);\n              helper.append(\"state\", values.state);\n              helper.append(\"postal_code\", values.postalCode);\n\n              GeneralServices.postRequest(\n                helper,\n                UPDATE_CLIENT_BILLING_INFO\n              ).then(\n                (successResponse) => {\n                  swal(\"Billing Info updated successfully!\", {\n                    icon: \"success\",\n                  });\n                  closePopup();\n                },\n                (errorResponse) => {\n                  closePopup();\n                }\n              );\n            }}\n          >\n            {({ isSubmitting, handleChange }) => (\n              <Form>\n                <div className=\"container-fluid\">\n                  <div className=\"comp\">\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"name\">\n                        Card Holders Name <span className=\"steric\">*</span>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Card Holder Name\"\n                      name=\"cardHolderName\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"cardHolderName\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"adress\">\n                        <b>Address1</b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Address\"\n                      name=\"primaryAddress\"\n                      className=\"namep\"\n                    />\n                    <ErrorMessage\n                      name=\"primaryAddress\"\n                      component=\"div\"\n                      className=\"invalid-feedback\"\n                    />\n                  </div>\n                  <div>\n                    <div className=\"label-space\">\n                      <label className=\"pop-label\" htmlFor=\"adress1\">\n                        <b> Address2 </b>\n                      </label>\n                    </div>\n                    <Field\n                      type=\"text\"\n                      placeholder=\"Address2\"\n                      name=\"secondaryAddress\"\n                      className=\"namep\"\n                    />\n                  </div>\n                  <div className=\"parent-select\">\n                    <div style={{ flex: 1 }}>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"city\">\n                            <b>City </b>\n                          </label>\n                        </div>\n                        <Field\n                          type=\"text\"\n                          placeholder=\"Enter City\"\n                          name=\"city\"\n                          className=\"city\"\n                        />\n                      </div>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"postalCode\">\n                            <b>ZIP / postal code</b>\n                          </label>\n                        </div>\n                        <Field\n                          type=\"text\"\n                          placeholder=\"----\"\n                          name=\"postalCode\"\n                          className=\"city\"\n                        />\n                      </div>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"state-label\" htmlFor=\"country\">\n                            <b>State</b>\n                          </label>\n                        </div>\n                        <Field\n                          as=\"select\"\n                          className=\"country-state\"\n                          name=\"state\"\n                        >\n                          {filteredStates &&\n                            filteredStates.map((state) => {\n                              return (\n                                <option key={state.id} value={state.id}>\n                                  {state.title}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </div>\n                      <div>\n                        <div className=\"label-space\">\n                          <label className=\"pop-label\" htmlFor=\"state\">\n                            <b>Country</b>\n                          </label>\n                        </div>\n                        <Field\n                          as=\"select\"\n                          className=\"state-picker\"\n                          name=\"country\"\n                          onChange={(e) => handleCountryChange(e, handleChange)}\n                        >\n                          {allCountries &&\n                            allCountries.map((country) => {\n                              return (\n                                <option key={country.id} value={country.id}>\n                                  {country.title}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"last-btn-pp\">\n                    <button onClick={closePopup} className=\"last-btn2\">\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"last-btn\"\n                      disabled={isSubmitting}\n                    >\n                      Update Billing Information\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdateBillingInfo;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ForgetPassword.js",["654","655","656"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo.png\";\nimport \"../../assets/css/forget_password.css\";\nimport ErrorMessageCustom from \"../../components/common/errorMessageCustom\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneratedIdentifierFlags } from \"typescript\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { RESET_PASSWORD } from \"../../jwt/_services/axiousURL\";\nconst ForgetPassword = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [showErrorMessage, setShowErrorMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [submitButtonStatus, setSubmitButtonStatus] = useState(false);\n\n  const handleResetPassword = () => {\n    setSubmitButtonStatus(true);\n    if (email == \"\" || email == null) {\n      setShowErrorMessage(true);\n      setErrorMessage(\"Please enter a valid email address\");\n      setSubmitButtonStatus(false);\n      return;\n    }\n    resetPasswordApi();\n  };\n\n  const resetPasswordApi = () => {\n    let helper = FormDataHelper();\n    helper.append(\"email\", email);\n\n    GeneralServices.postRequest(helper, RESET_PASSWORD).then(\n      (successResponse) => {\n        const { from } = props.location.state || {\n          from: { pathname: \"/forget-password-email\" },\n        };\n        props.history.push(from);\n      },\n      (errorResponse) => {\n        const { from } = props.location.state || {\n          from: { pathname: \"/forget-password-email\" },\n        };\n        props.history.push(from);\n      }\n    );\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={{ backgroundColor: \"black\" }}>\n        <div className=\"main\">\n          <section className=\"left-section\">\n            <div className=\"logo\">\n              <img className=\"logo-img\" src={logo} />\n            </div>\n\n            <div className=\"back-login\">\n              <Link\n                to=\"/authentication/login\"\n                className=\"back-a\"\n                style={{ textDecoration: \"underline\" }}\n              >\n                {` << Back to login`}\n              </Link>\n            </div>\n\n            <div className=\"forgot-pas\">\n              <p className=\"forgot-txt montserra_font\"> Forget password</p>\n            </div>\n\n            <div className=\"para-p\">\n              <p className=\"para montserra_font\">\n                Enter the email associated with your account and we'll send you\n                an email with instructions on how to reset your password.\n              </p>\n            </div>\n\n            <div className=\"email\">\n              {showErrorMessage && (\n                <ErrorMessageCustom message={errorMessage} />\n              )}\n              <div className=\"labels\">\n                <label className=\"montserra_font\" htmlFor=\"emails\">\n                  Email address\n                </label>\n              </div>\n\n              <input\n                className=\"input-field\"\n                type=\"email\"\n                placeholder=\"Email\"\n                id=\"emails\"\n                name=\"emails\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                style={{ paddingLeft: \"10px\" }}\n              />\n            </div>\n\n            <button\n              onClick={handleResetPassword}\n              className=\"button-e\"\n              disabled={submitButtonStatus}\n            >\n              Reset Password\n            </button>\n            <div className=\"b-bottom\">\n              Dont have an account yet?\n              <span className=\"green\">\n                <Link\n                  className=\"green montserra_font\"\n                  to=\"/authentication/login\"\n                >\n                  {` Sign up`}\n                </Link>\n              </span>\n            </div>\n\n            <p className=\"last-para\">\n              Copyright © {new Date().getFullYear()} Xotic Labs\n            </p>\n          </section>\n\n          <section className=\"right-section\"> </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ForgetPassword;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ForgetPasswordEmail.js",["657","658"],"import React from \"react\";\nimport logo from \"../../assets/images/logo.png\";\nimport confirmLogo from \"../../assets/images/confirm_logo.jpg\";\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from \"../../components/common/errorMessage\";\nimport \"../../assets/css/forget_password.css\";\n\nconst ForgetPasswordEmail = () => {\n  return (\n    <>\n      <div className=\"container\" style={{ backgroundColor: \"black\" }}>\n        <div className=\"main\">\n          <section className=\"left-section\">\n            <div className=\"logo\">\n              <img className=\"logo-img\" src={logo} />\n            </div>\n\n            <div className=\"back-login\">\n              <Link\n                className=\"back-a\"\n                to=\"/authentication/login\"\n                style={{ textDecoration: \"underline\" }}\n              >\n                {`<< Back to login`}\n              </Link>\n            </div>\n\n            <div className=\"forgot-pas\">\n              <h4 className=\"forgot-txt\">Check Your Email</h4>\n            </div>\n\n            <div className=\"para-p\">\n              <img className=\"confirm-logo\" src={confirmLogo} alt=\"\" />\n            </div>\n\n            <div className=\"para-p\">\n              <p className=\"para-confirm\">\n                If an account is associated with the email provided, you will\n                receive the password recovery instructions to reset your\n                password.\n              </p>\n            </div>\n            <div className=\"para-p\">\n              <p className=\"para-confirm\">\n                Didn't recelve an email? Check your spam filter, or try another\n                email address.\n              </p>\n            </div>\n\n            <p className=\"last-para-cn\">\n              Copyright © {new Date().getFullYear()} Xotic Labs\n            </p>\n          </section>\n\n          <section ction className=\"right-section-confirmation\"></section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ForgetPasswordEmail;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/ResetPassword.js",["659","660","661","662","663"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo.png\";\nimport { FormDataHelper } from \"../../jwt/_helpers/FormDataHelper\";\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport swal from \"sweetalert\";\nimport ErrorMessageCustom from \"../../components/common/errorMessageCustom\";\n\nimport \"../../assets/css/forget_password.css\";\nimport {\n  RESET_PASSWORD_TOKEN_VERIFICATION,\n  UPDATE_USER_RESET_PASSWORD,\n} from \"../../jwt/_services/axiousURL\";\n\nconst ResetPassword = (props) => {\n  const { resetToken } = useParams();\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n\n  const handleResetPassword = () => {\n    if (password == \"\") {\n      setShowError(true);\n      setErrorMsg(\"Password can not be empty\");\n      return;\n    } else if (confirmPassword == \"\" || confirmPassword != password) {\n      setShowError(true);\n      setErrorMsg(\"Password does not match confirm password\");\n      return;\n    } else {\n      setShowError(false);\n      setErrorMsg(\"\");\n    }\n\n    updatePassword();\n  };\n\n  const getTokenVerification = () => {\n    let helper = FormDataHelper();\n    helper.append(\"token\", resetToken);\n\n    GeneralServices.postRequest(helper, RESET_PASSWORD_TOKEN_VERIFICATION).then(\n      (successResponse) => {\n        let id = successResponse.data.id;\n        setUserId(id);\n      },\n      (errorResponse) => {\n        const { from } = props.location.state || {\n          from: { pathname: \"/authentication/login\" },\n        };\n        props.history.push(from);\n      }\n    );\n  };\n\n  const updatePassword = () => {\n    let helper = FormDataHelper();\n    helper.append(\"id\", userId);\n    helper.append(\"password\", password);\n\n    GeneralServices.postRequest(helper, UPDATE_USER_RESET_PASSWORD).then(\n      (successResponse) => {\n        swal(\"Password updated successfullly\", {\n          icon: \"success\",\n        });\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n\n        const { from } = props.location.state || {\n          from: { pathname: \"/authentication/login\" },\n        };\n        props.history.push(from);\n      },\n      (errorResponse) => {\n        setShowError(true);\n        setErrorMsg(\"Failed to update the password\");\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (resetToken) {\n      getTokenVerification();\n    }\n  }, [resetToken]);\n\n  return (\n    <>\n      <div style={{ backgroundColor: \"black\" }}>\n        <div className=\"container\">\n          <div className=\"main\">\n            <section className=\"left-section\">\n              <div className=\"logo\">\n                <img className=\"logo-img\" src={logo} />\n              </div>\n\n              <div className=\"forgot-pas-p\">\n                <h4 className=\"forgot-txt\">Creat a New Password</h4>\n              </div>\n\n              <div className=\"para-p\">\n                <p className=\"para-pass\">\n                  Your new password must be different from your previous\n                  password\n                </p>\n              </div>\n\n              <div className=\"pass\">\n                {showError && <ErrorMessageCustom message={errorMsg} />}\n                <div className=\"labels\">\n                  <label htmlFor=\"password\">New Password:</label>\n                </div>\n\n                <input\n                  className=\"input-field\"\n                  type=\"password\"\n                  placeholder=\"Enter New Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  style={{ paddingLeft: \"10px\" }}\n                />\n\n                <div className=\"labels\">\n                  <label htmlFor=\"emails\">Confirm Password:</label>\n                </div>\n\n                <input\n                  className=\"input-field\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  style={{ paddingLeft: \"10px\" }}\n                />\n              </div>\n\n              <button onClick={handleResetPassword} className=\"button\">\n                Reset Password\n              </button>\n\n              <p className=\"last-para-re\">\n                Copyright © {new Date().getFullYear()} Xotic Labs\n              </p>\n            </section>\n\n            <section className=\"right-section-pass\"> </section>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/common/errorMessage.js",[],"/Users/omerobaid/Projects/react-projects/xotic-labs/src/components/common/errorMessageCustom.js",[],{"ruleId":"664","replacedBy":"665"},{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","severity":1,"message":"669","line":30,"column":19,"nodeType":"670","messageId":"671","endLine":30,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":31,"column":19,"nodeType":"670","messageId":"671","endLine":31,"endColumn":21},{"ruleId":"672","severity":1,"message":"673","line":29,"column":1,"nodeType":"674","endLine":29,"endColumn":37},{"ruleId":"672","severity":1,"message":"675","line":8,"column":1,"nodeType":"674","endLine":69,"endColumn":3},{"ruleId":"672","severity":1,"message":"675","line":12,"column":1,"nodeType":"674","endLine":98,"endColumn":3},{"ruleId":"676","severity":1,"message":"677","line":15,"column":10,"nodeType":"678","messageId":"679","endLine":15,"endColumn":24},{"ruleId":"676","severity":1,"message":"680","line":15,"column":26,"nodeType":"678","messageId":"679","endLine":15,"endColumn":43},{"ruleId":"668","severity":1,"message":"681","line":19,"column":29,"nodeType":"670","messageId":"671","endLine":19,"endColumn":31},{"ruleId":"668","severity":1,"message":"681","line":33,"column":44,"nodeType":"670","messageId":"671","endLine":33,"endColumn":46},{"ruleId":"668","severity":1,"message":"681","line":48,"column":48,"nodeType":"670","messageId":"671","endLine":48,"endColumn":50},{"ruleId":"668","severity":1,"message":"681","line":63,"column":45,"nodeType":"670","messageId":"671","endLine":63,"endColumn":47},{"ruleId":"664","replacedBy":"682"},{"ruleId":"666","replacedBy":"683"},{"ruleId":"672","severity":1,"message":"675","line":26,"column":1,"nodeType":"674","endLine":76,"endColumn":3},{"ruleId":"664","replacedBy":"684"},{"ruleId":"666","replacedBy":"685"},{"ruleId":"664","replacedBy":"686"},{"ruleId":"666","replacedBy":"687"},{"ruleId":"688","severity":1,"message":"689","line":39,"column":6,"nodeType":"690","endLine":39,"endColumn":8,"suggestions":"691"},{"ruleId":"668","severity":1,"message":"681","line":145,"column":44,"nodeType":"670","messageId":"671","endLine":145,"endColumn":46},{"ruleId":"672","severity":1,"message":"675","line":19,"column":1,"nodeType":"674","endLine":59,"endColumn":3},{"ruleId":"692","severity":1,"message":"693","line":29,"column":15,"nodeType":"694","endLine":32,"endColumn":16},{"ruleId":"676","severity":1,"message":"695","line":10,"column":20,"nodeType":"678","messageId":"679","endLine":10,"endColumn":29},{"ruleId":"668","severity":1,"message":"669","line":123,"column":54,"nodeType":"670","messageId":"671","endLine":123,"endColumn":56},{"ruleId":"668","severity":1,"message":"681","line":64,"column":39,"nodeType":"670","messageId":"671","endLine":64,"endColumn":41},{"ruleId":"688","severity":1,"message":"696","line":144,"column":6,"nodeType":"690","endLine":144,"endColumn":10,"suggestions":"697"},{"ruleId":"688","severity":1,"message":"698","line":162,"column":6,"nodeType":"690","endLine":162,"endColumn":18,"suggestions":"699"},{"ruleId":"688","severity":1,"message":"700","line":51,"column":6,"nodeType":"690","endLine":51,"endColumn":10,"suggestions":"701"},{"ruleId":"688","severity":1,"message":"702","line":63,"column":6,"nodeType":"690","endLine":63,"endColumn":18,"suggestions":"703"},{"ruleId":"668","severity":1,"message":"681","line":55,"column":39,"nodeType":"670","messageId":"671","endLine":55,"endColumn":41},{"ruleId":"668","severity":1,"message":"681","line":96,"column":39,"nodeType":"670","messageId":"671","endLine":96,"endColumn":41},{"ruleId":"688","severity":1,"message":"696","line":118,"column":6,"nodeType":"690","endLine":118,"endColumn":10,"suggestions":"704"},{"ruleId":"688","severity":1,"message":"705","line":130,"column":6,"nodeType":"690","endLine":130,"endColumn":18,"suggestions":"706"},{"ruleId":"676","severity":1,"message":"707","line":25,"column":8,"nodeType":"678","messageId":"679","endLine":25,"endColumn":13},{"ruleId":"668","severity":1,"message":"681","line":111,"column":37,"nodeType":"670","messageId":"671","endLine":111,"endColumn":39},{"ruleId":"688","severity":1,"message":"708","line":114,"column":6,"nodeType":"690","endLine":114,"endColumn":29,"suggestions":"709"},{"ruleId":"668","severity":1,"message":"669","line":176,"column":56,"nodeType":"670","messageId":"671","endLine":176,"endColumn":58},{"ruleId":"710","severity":1,"message":"711","line":55,"column":21,"nodeType":"712","messageId":"713","endLine":55,"endColumn":28},{"ruleId":"688","severity":1,"message":"714","line":112,"column":6,"nodeType":"690","endLine":112,"endColumn":51,"suggestions":"715"},{"ruleId":"688","severity":1,"message":"716","line":123,"column":6,"nodeType":"690","endLine":123,"endColumn":55,"suggestions":"717"},{"ruleId":"692","severity":1,"message":"693","line":138,"column":17,"nodeType":"694","endLine":138,"endColumn":56},{"ruleId":"718","severity":1,"message":"719","line":36,"column":13,"nodeType":"720","messageId":"721","endLine":36,"endColumn":19},{"ruleId":"688","severity":1,"message":"722","line":49,"column":27,"nodeType":"723","endLine":49,"endColumn":32},{"ruleId":"668","severity":1,"message":"681","line":75,"column":40,"nodeType":"670","messageId":"671","endLine":75,"endColumn":42},{"ruleId":"676","severity":1,"message":"724","line":1,"column":17,"nodeType":"678","messageId":"679","endLine":1,"endColumn":28},{"ruleId":"668","severity":1,"message":"669","line":34,"column":58,"nodeType":"670","messageId":"671","endLine":34,"endColumn":60},{"ruleId":"710","severity":1,"message":"711","line":39,"column":15,"nodeType":"712","messageId":"713","endLine":39,"endColumn":22},{"ruleId":"688","severity":1,"message":"725","line":42,"column":6,"nodeType":"690","endLine":42,"endColumn":26,"suggestions":"726"},{"ruleId":"710","severity":1,"message":"711","line":105,"column":35,"nodeType":"712","messageId":"713","endLine":105,"endColumn":42},{"ruleId":"668","severity":1,"message":"681","line":140,"column":37,"nodeType":"670","messageId":"671","endLine":140,"endColumn":39},{"ruleId":"688","severity":1,"message":"708","line":143,"column":6,"nodeType":"690","endLine":143,"endColumn":29,"suggestions":"727"},{"ruleId":"688","severity":1,"message":"728","line":151,"column":6,"nodeType":"690","endLine":151,"endColumn":8,"suggestions":"729"},{"ruleId":"668","severity":1,"message":"669","line":213,"column":56,"nodeType":"670","messageId":"671","endLine":213,"endColumn":58},{"ruleId":"668","severity":1,"message":"681","line":24,"column":23,"nodeType":"670","messageId":"671","endLine":24,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":44,"column":34,"nodeType":"670","messageId":"671","endLine":44,"endColumn":36},{"ruleId":"730","severity":1,"message":"731","line":57,"column":17,"nodeType":"694","endLine":57,"endColumn":74},{"ruleId":"732","severity":1,"message":"733","line":58,"column":17,"nodeType":"694","messageId":"734","endLine":67,"endColumn":18,"fix":"735"},{"ruleId":"668","severity":1,"message":"681","line":61,"column":31,"nodeType":"670","messageId":"671","endLine":61,"endColumn":33},{"ruleId":"730","severity":1,"message":"731","line":72,"column":17,"nodeType":"694","endLine":76,"endColumn":18},{"ruleId":"710","severity":1,"message":"711","line":105,"column":35,"nodeType":"712","messageId":"713","endLine":105,"endColumn":42},{"ruleId":"668","severity":1,"message":"681","line":142,"column":37,"nodeType":"670","messageId":"671","endLine":142,"endColumn":39},{"ruleId":"688","severity":1,"message":"708","line":145,"column":6,"nodeType":"690","endLine":145,"endColumn":29,"suggestions":"736"},{"ruleId":"688","severity":1,"message":"728","line":153,"column":6,"nodeType":"690","endLine":153,"endColumn":8,"suggestions":"737"},{"ruleId":"668","severity":1,"message":"669","line":214,"column":56,"nodeType":"670","messageId":"671","endLine":214,"endColumn":58},{"ruleId":"676","severity":1,"message":"738","line":30,"column":8,"nodeType":"678","messageId":"679","endLine":30,"endColumn":27},{"ruleId":"676","severity":1,"message":"739","line":42,"column":10,"nodeType":"678","messageId":"679","endLine":42,"endColumn":36},{"ruleId":"676","severity":1,"message":"740","line":42,"column":38,"nodeType":"678","messageId":"679","endLine":42,"endColumn":67},{"ruleId":"676","severity":1,"message":"741","line":44,"column":10,"nodeType":"678","messageId":"679","endLine":44,"endColumn":25},{"ruleId":"676","severity":1,"message":"742","line":44,"column":27,"nodeType":"678","messageId":"679","endLine":44,"endColumn":45},{"ruleId":"676","severity":1,"message":"743","line":45,"column":10,"nodeType":"678","messageId":"679","endLine":45,"endColumn":20},{"ruleId":"668","severity":1,"message":"681","line":85,"column":31,"nodeType":"670","messageId":"671","endLine":85,"endColumn":33},{"ruleId":"668","severity":1,"message":"681","line":92,"column":17,"nodeType":"670","messageId":"671","endLine":92,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":112,"column":17,"nodeType":"670","messageId":"671","endLine":112,"endColumn":19},{"ruleId":"668","severity":1,"message":"681","line":114,"column":28,"nodeType":"670","messageId":"671","endLine":114,"endColumn":30},{"ruleId":"710","severity":1,"message":"711","line":137,"column":31,"nodeType":"712","messageId":"713","endLine":137,"endColumn":38},{"ruleId":"710","severity":1,"message":"711","line":146,"column":30,"nodeType":"712","messageId":"713","endLine":146,"endColumn":37},{"ruleId":"688","severity":1,"message":"744","line":232,"column":6,"nodeType":"690","endLine":232,"endColumn":15,"suggestions":"745"},{"ruleId":"668","severity":1,"message":"669","line":300,"column":56,"nodeType":"670","messageId":"671","endLine":300,"endColumn":58},{"ruleId":"668","severity":1,"message":"669","line":434,"column":39,"nodeType":"670","messageId":"671","endLine":434,"endColumn":41},{"ruleId":"730","severity":1,"message":"731","line":439,"column":25,"nodeType":"694","endLine":442,"endColumn":27},{"ruleId":"730","severity":1,"message":"731","line":443,"column":25,"nodeType":"694","endLine":447,"endColumn":27},{"ruleId":"668","severity":1,"message":"681","line":450,"column":39,"nodeType":"670","messageId":"671","endLine":450,"endColumn":41},{"ruleId":"668","severity":1,"message":"669","line":502,"column":45,"nodeType":"670","messageId":"671","endLine":502,"endColumn":47},{"ruleId":"730","severity":1,"message":"731","line":505,"column":27,"nodeType":"694","endLine":508,"endColumn":28},{"ruleId":"732","severity":1,"message":"733","line":511,"column":27,"nodeType":"694","messageId":"734","endLine":516,"endColumn":28,"fix":"746"},{"ruleId":"668","severity":1,"message":"681","line":529,"column":45,"nodeType":"670","messageId":"671","endLine":529,"endColumn":47},{"ruleId":"668","severity":1,"message":"681","line":35,"column":41,"nodeType":"670","messageId":"671","endLine":35,"endColumn":43},{"ruleId":"688","severity":1,"message":"747","line":104,"column":6,"nodeType":"690","endLine":104,"endColumn":17,"suggestions":"748"},{"ruleId":"676","severity":1,"message":"749","line":2,"column":8,"nodeType":"678","messageId":"679","endLine":2,"endColumn":19},{"ruleId":"676","severity":1,"message":"750","line":3,"column":8,"nodeType":"678","messageId":"679","endLine":3,"endColumn":16},{"ruleId":"676","severity":1,"message":"751","line":11,"column":8,"nodeType":"678","messageId":"679","endLine":11,"endColumn":31},{"ruleId":"676","severity":1,"message":"752","line":38,"column":25,"nodeType":"678","messageId":"679","endLine":38,"endColumn":41},{"ruleId":"668","severity":1,"message":"681","line":39,"column":39,"nodeType":"670","messageId":"671","endLine":39,"endColumn":41},{"ruleId":"668","severity":1,"message":"681","line":61,"column":29,"nodeType":"670","messageId":"671","endLine":61,"endColumn":31},{"ruleId":"668","severity":1,"message":"681","line":66,"column":17,"nodeType":"670","messageId":"671","endLine":66,"endColumn":19},{"ruleId":"668","severity":1,"message":"681","line":75,"column":28,"nodeType":"670","messageId":"671","endLine":75,"endColumn":30},{"ruleId":"668","severity":1,"message":"681","line":122,"column":57,"nodeType":"670","messageId":"671","endLine":122,"endColumn":59},{"ruleId":"668","severity":1,"message":"681","line":124,"column":49,"nodeType":"670","messageId":"671","endLine":124,"endColumn":51},{"ruleId":"668","severity":1,"message":"681","line":126,"column":56,"nodeType":"670","messageId":"671","endLine":126,"endColumn":58},{"ruleId":"668","severity":1,"message":"681","line":128,"column":52,"nodeType":"670","messageId":"671","endLine":128,"endColumn":54},{"ruleId":"668","severity":1,"message":"681","line":130,"column":52,"nodeType":"670","messageId":"671","endLine":130,"endColumn":54},{"ruleId":"668","severity":1,"message":"681","line":132,"column":54,"nodeType":"670","messageId":"671","endLine":132,"endColumn":56},{"ruleId":"688","severity":1,"message":"753","line":138,"column":6,"nodeType":"690","endLine":138,"endColumn":21,"suggestions":"754"},{"ruleId":"676","severity":1,"message":"755","line":27,"column":9,"nodeType":"678","messageId":"679","endLine":27,"endColumn":30},{"ruleId":"688","severity":1,"message":"756","line":30,"column":12,"nodeType":"712","endLine":30,"endColumn":45},{"ruleId":"692","severity":1,"message":"693","line":56,"column":11,"nodeType":"694","endLine":56,"endColumn":41},{"ruleId":"676","severity":1,"message":"757","line":1,"column":8,"nodeType":"678","messageId":"679","endLine":1,"endColumn":21},{"ruleId":"676","severity":1,"message":"758","line":21,"column":18,"nodeType":"678","messageId":"679","endLine":21,"endColumn":27},{"ruleId":"692","severity":1,"message":"693","line":57,"column":11,"nodeType":"694","endLine":57,"endColumn":41},{"ruleId":"676","severity":1,"message":"759","line":1,"column":8,"nodeType":"678","messageId":"679","endLine":1,"endColumn":14},{"ruleId":"676","severity":1,"message":"760","line":2,"column":8,"nodeType":"678","messageId":"679","endLine":2,"endColumn":24},{"ruleId":"668","severity":1,"message":"681","line":15,"column":39,"nodeType":"670","messageId":"671","endLine":15,"endColumn":41},{"ruleId":"668","severity":1,"message":"681","line":15,"column":71,"nodeType":"670","messageId":"671","endLine":15,"endColumn":73},{"ruleId":"668","severity":1,"message":"681","line":19,"column":37,"nodeType":"670","messageId":"671","endLine":19,"endColumn":39},{"ruleId":"668","severity":1,"message":"669","line":20,"column":22,"nodeType":"670","messageId":"671","endLine":20,"endColumn":24},{"ruleId":"668","severity":1,"message":"681","line":37,"column":47,"nodeType":"670","messageId":"671","endLine":37,"endColumn":49},{"ruleId":"676","severity":1,"message":"760","line":1,"column":8,"nodeType":"678","messageId":"679","endLine":1,"endColumn":24},{"ruleId":"676","severity":1,"message":"761","line":6,"column":3,"nodeType":"678","messageId":"679","endLine":6,"endColumn":14},{"ruleId":"676","severity":1,"message":"762","line":9,"column":7,"nodeType":"678","messageId":"679","endLine":9,"endColumn":14},{"ruleId":"668","severity":1,"message":"669","line":55,"column":44,"nodeType":"670","messageId":"671","endLine":55,"endColumn":46},{"ruleId":"668","severity":1,"message":"669","line":55,"column":70,"nodeType":"670","messageId":"671","endLine":55,"endColumn":72},{"ruleId":"668","severity":1,"message":"669","line":60,"column":25,"nodeType":"670","messageId":"671","endLine":60,"endColumn":27},{"ruleId":"668","severity":1,"message":"669","line":61,"column":25,"nodeType":"670","messageId":"671","endLine":61,"endColumn":27},{"ruleId":"668","severity":1,"message":"669","line":67,"column":23,"nodeType":"670","messageId":"671","endLine":67,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":68,"column":23,"nodeType":"670","messageId":"671","endLine":68,"endColumn":25},{"ruleId":"668","severity":1,"message":"681","line":119,"column":41,"nodeType":"670","messageId":"671","endLine":119,"endColumn":43},{"ruleId":"668","severity":1,"message":"681","line":121,"column":50,"nodeType":"670","messageId":"671","endLine":121,"endColumn":52},{"ruleId":"668","severity":1,"message":"681","line":123,"column":47,"nodeType":"670","messageId":"671","endLine":123,"endColumn":49},{"ruleId":"676","severity":1,"message":"763","line":1,"column":10,"nodeType":"678","messageId":"679","endLine":1,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":21,"column":28,"nodeType":"670","messageId":"671","endLine":21,"endColumn":30},{"ruleId":"718","severity":1,"message":"719","line":28,"column":13,"nodeType":"720","messageId":"721","endLine":28,"endColumn":62},{"ruleId":"676","severity":1,"message":"764","line":3,"column":8,"nodeType":"678","messageId":"679","endLine":3,"endColumn":20},{"ruleId":"676","severity":1,"message":"765","line":5,"column":8,"nodeType":"678","messageId":"679","endLine":5,"endColumn":17},{"ruleId":"668","severity":1,"message":"681","line":50,"column":19,"nodeType":"670","messageId":"671","endLine":50,"endColumn":21},{"ruleId":"668","severity":1,"message":"681","line":55,"column":26,"nodeType":"670","messageId":"671","endLine":55,"endColumn":28},{"ruleId":"732","severity":1,"message":"733","line":34,"column":21,"nodeType":"694","messageId":"734","endLine":38,"endColumn":22,"fix":"766"},{"ruleId":"732","severity":1,"message":"733","line":20,"column":21,"nodeType":"694","messageId":"734","endLine":20,"endColumn":79,"fix":"767"},{"ruleId":"676","severity":1,"message":"768","line":15,"column":8,"nodeType":"678","messageId":"679","endLine":15,"endColumn":16},{"ruleId":"676","severity":1,"message":"769","line":16,"column":8,"nodeType":"678","messageId":"679","endLine":16,"endColumn":20},{"ruleId":"676","severity":1,"message":"770","line":17,"column":8,"nodeType":"678","messageId":"679","endLine":17,"endColumn":16},{"ruleId":"676","severity":1,"message":"771","line":18,"column":8,"nodeType":"678","messageId":"679","endLine":18,"endColumn":17},{"ruleId":"676","severity":1,"message":"772","line":19,"column":8,"nodeType":"678","messageId":"679","endLine":19,"endColumn":16},{"ruleId":"676","severity":1,"message":"773","line":42,"column":9,"nodeType":"678","messageId":"679","endLine":42,"endColumn":18},{"ruleId":"676","severity":1,"message":"774","line":51,"column":27,"nodeType":"678","messageId":"679","endLine":51,"endColumn":45},{"ruleId":"668","severity":1,"message":"669","line":137,"column":29,"nodeType":"670","messageId":"671","endLine":137,"endColumn":31},{"ruleId":"688","severity":1,"message":"775","line":177,"column":6,"nodeType":"690","endLine":177,"endColumn":8,"suggestions":"776"},{"ruleId":"676","severity":1,"message":"777","line":20,"column":7,"nodeType":"678","messageId":"679","endLine":20,"endColumn":14},{"ruleId":"676","severity":1,"message":"778","line":25,"column":7,"nodeType":"678","messageId":"679","endLine":25,"endColumn":25},{"ruleId":"676","severity":1,"message":"779","line":29,"column":7,"nodeType":"678","messageId":"679","endLine":29,"endColumn":15},{"ruleId":"676","severity":1,"message":"780","line":37,"column":7,"nodeType":"678","messageId":"679","endLine":37,"endColumn":14},{"ruleId":"676","severity":1,"message":"781","line":45,"column":7,"nodeType":"678","messageId":"679","endLine":45,"endColumn":26},{"ruleId":"676","severity":1,"message":"782","line":53,"column":7,"nodeType":"678","messageId":"679","endLine":53,"endColumn":27},{"ruleId":"676","severity":1,"message":"783","line":60,"column":7,"nodeType":"678","messageId":"679","endLine":60,"endColumn":28},{"ruleId":"676","severity":1,"message":"771","line":1,"column":8,"nodeType":"678","messageId":"679","endLine":1,"endColumn":17},{"ruleId":"676","severity":1,"message":"784","line":2,"column":18,"nodeType":"678","messageId":"679","endLine":2,"endColumn":27},{"ruleId":"676","severity":1,"message":"785","line":4,"column":7,"nodeType":"678","messageId":"679","endLine":4,"endColumn":12},{"ruleId":"688","severity":1,"message":"786","line":29,"column":6,"nodeType":"690","endLine":29,"endColumn":8,"suggestions":"787"},{"ruleId":"710","severity":1,"message":"711","line":101,"column":27,"nodeType":"712","messageId":"713","endLine":101,"endColumn":34},{"ruleId":"710","severity":1,"message":"711","line":110,"column":26,"nodeType":"712","messageId":"713","endLine":110,"endColumn":33},{"ruleId":"688","severity":1,"message":"788","line":174,"column":6,"nodeType":"690","endLine":174,"endColumn":8,"suggestions":"789"},{"ruleId":"668","severity":1,"message":"669","line":432,"column":40,"nodeType":"670","messageId":"671","endLine":432,"endColumn":42},{"ruleId":"668","severity":1,"message":"669","line":438,"column":40,"nodeType":"670","messageId":"671","endLine":438,"endColumn":42},{"ruleId":"668","severity":1,"message":"681","line":447,"column":41,"nodeType":"670","messageId":"671","endLine":447,"endColumn":43},{"ruleId":"668","severity":1,"message":"681","line":448,"column":46,"nodeType":"670","messageId":"671","endLine":448,"endColumn":48},{"ruleId":"668","severity":1,"message":"681","line":453,"column":52,"nodeType":"670","messageId":"671","endLine":453,"endColumn":54},{"ruleId":"668","severity":1,"message":"681","line":458,"column":47,"nodeType":"670","messageId":"671","endLine":458,"endColumn":49},{"ruleId":"668","severity":1,"message":"681","line":22,"column":31,"nodeType":"670","messageId":"671","endLine":22,"endColumn":33},{"ruleId":"668","severity":1,"message":"669","line":44,"column":52,"nodeType":"670","messageId":"671","endLine":44,"endColumn":54},{"ruleId":"668","severity":1,"message":"681","line":46,"column":35,"nodeType":"670","messageId":"671","endLine":46,"endColumn":37},{"ruleId":"688","severity":1,"message":"790","line":58,"column":6,"nodeType":"690","endLine":58,"endColumn":8,"suggestions":"791"},{"ruleId":"792","severity":1,"message":"793","line":91,"column":61,"nodeType":"723","messageId":"794","endLine":91,"endColumn":62,"suggestions":"795"},{"ruleId":"792","severity":1,"message":"796","line":91,"column":64,"nodeType":"723","messageId":"794","endLine":91,"endColumn":65,"suggestions":"797"},{"ruleId":"792","severity":1,"message":"798","line":91,"column":67,"nodeType":"723","messageId":"794","endLine":91,"endColumn":68,"suggestions":"799"},{"ruleId":"676","severity":1,"message":"800","line":2,"column":10,"nodeType":"678","messageId":"679","endLine":2,"endColumn":21},{"ruleId":"710","severity":1,"message":"711","line":47,"column":17,"nodeType":"712","messageId":"713","endLine":47,"endColumn":24},{"ruleId":"668","severity":1,"message":"681","line":57,"column":15,"nodeType":"670","messageId":"671","endLine":57,"endColumn":17},{"ruleId":"688","severity":1,"message":"801","line":63,"column":6,"nodeType":"690","endLine":63,"endColumn":8,"suggestions":"802"},{"ruleId":"668","severity":1,"message":"681","line":18,"column":24,"nodeType":"670","messageId":"671","endLine":18,"endColumn":26},{"ruleId":"688","severity":1,"message":"803","line":33,"column":6,"nodeType":"690","endLine":33,"endColumn":8,"suggestions":"804"},{"ruleId":"676","severity":1,"message":"805","line":24,"column":10,"nodeType":"678","messageId":"679","endLine":24,"endColumn":27},{"ruleId":"668","severity":1,"message":"681","line":38,"column":28,"nodeType":"670","messageId":"671","endLine":38,"endColumn":30},{"ruleId":"676","severity":1,"message":"806","line":43,"column":9,"nodeType":"678","messageId":"679","endLine":43,"endColumn":24},{"ruleId":"668","severity":1,"message":"681","line":45,"column":28,"nodeType":"670","messageId":"671","endLine":45,"endColumn":30},{"ruleId":"668","severity":1,"message":"681","line":50,"column":23,"nodeType":"670","messageId":"671","endLine":50,"endColumn":25},{"ruleId":"668","severity":1,"message":"681","line":97,"column":21,"nodeType":"670","messageId":"671","endLine":97,"endColumn":23},{"ruleId":"688","severity":1,"message":"807","line":136,"column":6,"nodeType":"690","endLine":136,"endColumn":16,"suggestions":"808"},{"ruleId":"688","severity":1,"message":"809","line":140,"column":6,"nodeType":"690","endLine":140,"endColumn":18,"suggestions":"810"},{"ruleId":"668","severity":1,"message":"669","line":146,"column":36,"nodeType":"670","messageId":"671","endLine":146,"endColumn":38},{"ruleId":"668","severity":1,"message":"669","line":159,"column":36,"nodeType":"670","messageId":"671","endLine":159,"endColumn":38},{"ruleId":"732","severity":1,"message":"733","line":191,"column":23,"nodeType":"694","messageId":"734","endLine":195,"endColumn":24,"fix":"811"},{"ruleId":"668","severity":1,"message":"681","line":10,"column":28,"nodeType":"670","messageId":"671","endLine":10,"endColumn":30},{"ruleId":"668","severity":1,"message":"681","line":20,"column":30,"nodeType":"670","messageId":"671","endLine":20,"endColumn":32},{"ruleId":"668","severity":1,"message":"681","line":21,"column":29,"nodeType":"670","messageId":"671","endLine":21,"endColumn":31},{"ruleId":"668","severity":1,"message":"681","line":31,"column":22,"nodeType":"670","messageId":"671","endLine":31,"endColumn":24},{"ruleId":"676","severity":1,"message":"812","line":1,"column":37,"nodeType":"678","messageId":"679","endLine":1,"endColumn":45},{"ruleId":"668","severity":1,"message":"681","line":96,"column":20,"nodeType":"670","messageId":"671","endLine":96,"endColumn":22},{"ruleId":"688","severity":1,"message":"813","line":99,"column":6,"nodeType":"690","endLine":99,"endColumn":18,"suggestions":"814"},{"ruleId":"676","severity":1,"message":"815","line":1,"column":10,"nodeType":"678","messageId":"679","endLine":1,"endColumn":21},{"ruleId":"668","severity":1,"message":"681","line":4,"column":45,"nodeType":"670","messageId":"671","endLine":4,"endColumn":47},{"ruleId":"668","severity":1,"message":"681","line":8,"column":48,"nodeType":"670","messageId":"671","endLine":8,"endColumn":50},{"ruleId":"668","severity":1,"message":"681","line":12,"column":44,"nodeType":"670","messageId":"671","endLine":12,"endColumn":46},{"ruleId":"668","severity":1,"message":"681","line":21,"column":31,"nodeType":"670","messageId":"671","endLine":21,"endColumn":33},{"ruleId":"668","severity":1,"message":"669","line":43,"column":60,"nodeType":"670","messageId":"671","endLine":43,"endColumn":62},{"ruleId":"668","severity":1,"message":"681","line":45,"column":35,"nodeType":"670","messageId":"671","endLine":45,"endColumn":37},{"ruleId":"688","severity":1,"message":"790","line":55,"column":6,"nodeType":"690","endLine":55,"endColumn":8,"suggestions":"816"},{"ruleId":"676","severity":1,"message":"817","line":7,"column":10,"nodeType":"678","messageId":"679","endLine":7,"endColumn":34},{"ruleId":"668","severity":1,"message":"681","line":18,"column":15,"nodeType":"670","messageId":"671","endLine":18,"endColumn":17},{"ruleId":"730","severity":1,"message":"731","line":53,"column":15,"nodeType":"694","endLine":53,"endColumn":54},{"ruleId":"676","severity":1,"message":"818","line":5,"column":8,"nodeType":"678","messageId":"679","endLine":5,"endColumn":20},{"ruleId":"730","severity":1,"message":"731","line":15,"column":15,"nodeType":"694","endLine":15,"endColumn":54},{"ruleId":"668","severity":1,"message":"681","line":25,"column":18,"nodeType":"670","messageId":"671","endLine":25,"endColumn":20},{"ruleId":"668","severity":1,"message":"681","line":29,"column":32,"nodeType":"670","messageId":"671","endLine":29,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":29,"column":57,"nodeType":"670","messageId":"671","endLine":29,"endColumn":59},{"ruleId":"688","severity":1,"message":"819","line":88,"column":6,"nodeType":"690","endLine":88,"endColumn":18,"suggestions":"820"},{"ruleId":"730","severity":1,"message":"731","line":97,"column":17,"nodeType":"694","endLine":97,"endColumn":56},"no-native-reassign",["821"],"no-negated-in-lhs",["822"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-unused-vars","'showMobileMenu' is assigned a value but never used.","Identifier","unusedVar","'setShowMobileMenu' is assigned a value but never used.","Expected '===' and instead saw '=='.",["821"],["822"],["821"],["822"],["821"],["822"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBrands'. Either include it or remove the dependency array.","ArrayExpression",["823"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.",["824"],"React Hook useEffect has missing dependencies: 'allProjects' and 'allQueueProjects'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProjects' needs the current value of 'allProjects'.",["825"],"React Hook useEffect has a missing dependency: 'fetchCompletedProjects'. Either include it or remove the dependency array.",["826"],"React Hook useEffect has a missing dependency: 'allCompletedProjects'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCompletedProjects' needs the current value of 'allCompletedProjects'.",["827"],["828"],"React Hook useEffect has a missing dependency: 'allProjects'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProjects' needs the current value of 'allProjects'.",["829"],"'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'allImageSpecifications'. Either include it or remove the dependency array.",["830"],"no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","React Hook useEffect has a missing dependency: 'readyDataForSearchListing'. Either include it or remove the dependency array.",["831"],"React Hook useEffect has missing dependencies: 'getSelectedSubCategoryId' and 'setFieldValue'. Either include them or remove the dependency array. If 'getSelectedSubCategoryId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["832"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Assignments to the 'shouldUpdateBrand' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'setFieldValue'. Either include it or remove the dependency array. If 'setFieldValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["833"],["834"],"React Hook useEffect has a missing dependency: 'fetchProject'. Either include it or remove the dependency array.",["835"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"836","text":"837"},["838"],["839"],"'AttachmentGuidlines' is defined but never used.","'showAttachmentFileSelected' is assigned a value but never used.","'setShowAttachmentFileSelected' is assigned a value but never used.","'attachmentCount' is assigned a value but never used.","'setAttachmentCount' is assigned a value but never used.","'industries' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBrand'. Either include it or remove the dependency array.",["840"],{"range":"841","text":"837"},"React Hook useEffect has a missing dependency: 'fetchProjectComments'. Either include it or remove the dependency array.",["842"],"'waitingIcon' is defined but never used.","'gearIcon' is defined but never used.","'ActiveProjectOptionMenu' is defined but never used.","'setAccountPaused' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProjectWorkingStatuses'. Either include it or remove the dependency array.",["843"],"'handleHelpCenterClick' is assigned a value but never used.","Assignments to the 'info' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'downArrowIcon' is defined but never used.","'setBrands' is assigned a value but never used.","'heIcon' is defined but never used.","'profileImageIcon' is defined but never used.","'displayTime' is defined but never used.","'seconds' is assigned a value but never used.","'ProgressBar' is defined but never used.","'revisionIcon' is defined but never used.","'shareIcon' is defined but never used.",{"range":"844","text":"837"},{"range":"845","text":"837"},"'dotsIcon' is defined but never used.","'downloadIcon' is defined but never used.","'editIcon' is defined but never used.","'clockIcon' is defined but never used.","'linkIcon' is defined but never used.","'projectId' is assigned a value but never used.","'setFakeAnnotations' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAnnotations'. Either include it or remove the dependency array.",["846"],"'Comment' is assigned a value but never used.","'CommentDescription' is assigned a value but never used.","'UserPill' is assigned a value but never used.","'Content' is assigned a value but never used.","'ContentClearanceTop' is assigned a value but never used.","'ContentClearanceLeft' is assigned a value but never used.","'ContentClearanceRight' is assigned a value but never used.","'keyframes' is defined but never used.","'Inner' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllCheckBoxes'. Either include it or remove the dependency array.",["847"],"React Hook useEffect has a missing dependency: 'getCompanyInformation'. Either include it or remove the dependency array.",["848"],"React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array.",["849"],"no-useless-escape","Unnecessary escape character: \\$.","unnecessaryEscape",["850","851"],"Unnecessary escape character: \\^.",["852","853"],"Unnecessary escape character: \\*.",["854","855"],"'getClientId' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchUserSelectedTypes'. Either include it or remove the dependency array.",["856"],"React Hook useEffect has missing dependencies: 'fetchPaymentHistory' and 'upcomingInvoice'. Either include them or remove the dependency array.",["857"],"'allActiveProjects' is assigned a value but never used.","'getPlanByPlanId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getActivePlan'. Either include it or remove the dependency array.",["858"],"React Hook useEffect has a missing dependency: 'getNextChargeDate'. Either include it or remove the dependency array.",["859"],{"range":"860","text":"837"},"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array.",["861"],"'useSelector' is defined but never used.",["862"],"'GeneratedIdentifierFlags' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'getTokenVerification'. Either include it or remove the dependency array.",["863"],"no-global-assign","no-unsafe-negation",{"desc":"864","fix":"865"},{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"866","fix":"874"},{"desc":"875","fix":"876"},{"desc":"877","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},{"desc":"877","fix":"885"},{"desc":"886","fix":"887"},[2296,2296]," rel=\"noreferrer\"",{"desc":"877","fix":"888"},{"desc":"886","fix":"889"},{"desc":"890","fix":"891"},[17985,17985],{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},[1383,1383],[792,792],{"desc":"896","fix":"897"},{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"messageId":"904","fix":"905","desc":"906"},{"messageId":"907","fix":"908","desc":"909"},{"messageId":"904","fix":"910","desc":"906"},{"messageId":"907","fix":"911","desc":"909"},{"messageId":"904","fix":"912","desc":"906"},{"messageId":"907","fix":"913","desc":"909"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},[6149,6149],{"desc":"922","fix":"923"},{"desc":"902","fix":"924"},{"desc":"925","fix":"926"},"Update the dependencies array to be: [fetchBrands]",{"range":"927","text":"928"},"Update the dependencies array to be: [fetchProjects, id]",{"range":"929","text":"930"},"Update the dependencies array to be: [allProjects, allQueueProjects, filterText]",{"range":"931","text":"932"},"Update the dependencies array to be: [fetchCompletedProjects, id]",{"range":"933","text":"934"},"Update the dependencies array to be: [allCompletedProjects, filterText]",{"range":"935","text":"936"},{"range":"937","text":"930"},"Update the dependencies array to be: [allProjects, filterText]",{"range":"938","text":"939"},"Update the dependencies array to be: [allImageSpecifications, selectedSubCategoryId]",{"range":"940","text":"941"},"Update the dependencies array to be: [allCategories, allSubCategories, readyDataForSearchListing, searchText]",{"range":"942","text":"943"},"Update the dependencies array to be: [isEditMode, categoryTitleParam, categoryIdParam, getSelectedSubCategoryId, setFieldValue]",{"range":"944","text":"945"},"Update the dependencies array to be: [acceptedFilesState, setFieldValue]",{"range":"946","text":"947"},{"range":"948","text":"941"},"Update the dependencies array to be: [fetchProject]",{"range":"949","text":"950"},{"range":"951","text":"941"},{"range":"952","text":"950"},"Update the dependencies array to be: [brandId, fetchBrand]",{"range":"953","text":"954"},"Update the dependencies array to be: [fetchProjectComments, projectId]",{"range":"955","text":"956"},"Update the dependencies array to be: [defaultOption, fetchProjectWorkingStatuses]",{"range":"957","text":"958"},"Update the dependencies array to be: [getAnnotations]",{"range":"959","text":"960"},"Update the dependencies array to be: [getAllCheckBoxes]",{"range":"961","text":"962"},"Update the dependencies array to be: [getCompanyInformation]",{"range":"963","text":"964"},"Update the dependencies array to be: [fetchCountries]",{"range":"965","text":"966"},"removeEscape",{"range":"967","text":"968"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"969","text":"970"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"971","text":"968"},{"range":"972","text":"970"},{"range":"973","text":"968"},{"range":"974","text":"970"},"Update the dependencies array to be: [fetchUserSelectedTypes]",{"range":"975","text":"976"},"Update the dependencies array to be: [fetchPaymentHistory, upcomingInvoice]",{"range":"977","text":"978"},"Update the dependencies array to be: [allPlans, getActivePlan]",{"range":"979","text":"980"},"Update the dependencies array to be: [activePlan, getNextChargeDate]",{"range":"981","text":"982"},"Update the dependencies array to be: [callSubmit, handleSubmit]",{"range":"983","text":"984"},{"range":"985","text":"966"},"Update the dependencies array to be: [getTokenVerification, resetToken]",{"range":"986","text":"987"},[1658,1660],"[fetchBrands]",[4670,4674],"[fetchProjects, id]",[5071,5083],"[allProjects, allQueueProjects, filterText]",[1572,1576],"[fetchCompletedProjects, id]",[1833,1845],"[allCompletedProjects, filterText]",[3957,3961],[4182,4194],"[allProjects, filterText]",[3694,3717],"[allImageSpecifications, selectedSubCategoryId]",[3595,3640],"[allCategories, allSubCategories, readyDataForSearchListing, searchText]",[3946,3995],"[isEditMode, categoryTitleParam, categoryIdParam, getSelectedSubCategoryId, setFieldValue]",[1304,1324],"[acceptedFilesState, setFieldValue]",[4521,4544],[4651,4653],"[fetchProject]",[4577,4600],[4707,4709],[6891,6900],"[brandId, fetchBrand]",[2939,2950],"[fetchProjectComments, projectId]",[4616,4631],"[defaultOption, fetchProjectWorkingStatuses]",[6044,6046],"[getAnnotations]",[826,828],"[getAllCheckBoxes]",[5152,5154],"[getCompanyInformation]",[1786,1788],"[fetchCountries]",[3089,3090],"",[3089,3089],"\\",[3092,3093],[3092,3092],[3095,3096],[3095,3095],[1900,1902],"[fetchUserSelectedTypes]",[1255,1257],"[fetchPaymentHistory, upcomingInvoice]",[4093,4103],"[allPlans, getActivePlan]",[4157,4169],"[activePlan, getNextChargeDate]",[2578,2590],"[callSubmit, handleSubmit]",[1717,1719],[2577,2589],"[getTokenVerification, resetToken]"]