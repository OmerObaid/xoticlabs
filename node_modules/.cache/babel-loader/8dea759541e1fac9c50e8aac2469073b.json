{"ast":null,"code":"import { AuthenticationService } from \"../_services\";\nexport function AuthHeader() {\n  // return authorization header with jwt token\n  const currentUser = AuthenticationService.currentUserValue;\n\n  if (currentUser && currentUser.token) {\n    return {\n      Authorization: `Bearer ${currentUser.token}`\n    };\n  } else {\n    return {};\n  }\n}\n_c = AuthHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthHeader\");","map":{"version":3,"sources":["/Users/omerobaid/Projects/react-projects/xotic-labs/src/jwt/_helpers/AuthHeader.js"],"names":["AuthenticationService","AuthHeader","currentUser","currentUserValue","token","Authorization"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,cAAtC;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B;AACA,QAAMC,WAAW,GAAGF,qBAAqB,CAACG,gBAA1C;;AACA,MAAID,WAAW,IAAIA,WAAW,CAACE,KAA/B,EAAsC;AACpC,WAAO;AAAEC,MAAAA,aAAa,EAAG,UAASH,WAAW,CAACE,KAAM;AAA7C,KAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;KAReH,U","sourcesContent":["import { AuthenticationService } from \"../_services\";\r\n\r\nexport function AuthHeader() {\r\n  // return authorization header with jwt token\r\n  const currentUser = AuthenticationService.currentUserValue;\r\n  if (currentUser && currentUser.token) {\r\n    return { Authorization: `Bearer ${currentUser.token}` };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}