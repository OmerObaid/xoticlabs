{"ast":null,"code":"var _jsxFileName = \"/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { FormDataHelper } from '../../jwt/_helpers/FormDataHelper';\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BehaviorSubject } from \"rxjs\";\nimport logoImage from \"../../assets/images/xotic-logo.png\";\nimport bannerImage from \"../../assets/images/login-Banner.png\";\nimport { CLIENT_LOGIN } from \"../../jwt/_services/axiousURL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"currentUser\")));\n\nconst Login = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bodyClone\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        class: \"loginPage\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          class: \"loginBody\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"loginForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./images/xotic-logo.png\",\n              alt: \"logo\",\n              class: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Good afternoon Log into Xotic Labs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                email: \"client@xoticlabs.com\",\n                password: \"123\"\n              },\n              validationSchema: Yup.object().shape({\n                email: Yup.string().required(\"Email is required\"),\n                password: Yup.string().required(\"Password is required\")\n              }),\n              onSubmit: ({\n                email,\n                password\n              }, {\n                setStatus,\n                setSubmitting\n              }) => {\n                setStatus();\n                var formData = FormDataHelper();\n                formData.append('email_address', email);\n                formData.append('password', password);\n                GeneralServices.postRequest(formData, CLIENT_LOGIN).then(successResponse => {\n                  const user = successResponse.data[0];\n                  localStorage.setItem(\"currentUser\", JSON.stringify(user));\n                  currentUserSubject.next(user);\n                  const {\n                    from\n                  } = props.location.state || {\n                    from: {\n                      pathname: \"/\"\n                    }\n                  };\n                  props.history.push(from);\n                }, error => {\n                  setSubmitting(false);\n                  setStatus(error);\n                });\n              },\n              render: ({\n                errors,\n                status,\n                touched,\n                isSubmitting\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inputFields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"email\",\n                    id: \"email\",\n                    type: \"text\",\n                    placeholder: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"email\",\n                    component: \"div\",\n                    className: \"invalid-feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inputFields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      children: \"Forgot your password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    id: \"password\",\n                    type: \"password\",\n                    placeholder: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    name: \"password\",\n                    component: \"div\",\n                    className: \"invalid-feedback\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: isSubmitting,\n                  children: \"LOG IN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ct-signUp\",\n                  children: [\"Don\\u2019t have an account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/Signup`,\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 89\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"copyright\",\n              children: \"Copyright \\xA9 2021 Xotic Labs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/login-Banner.png\",\n            alt: \"logo\",\n            class: \"bg-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/omerobaid/Projects/react-projects/xotic-labs/src/views/authentication/Login.js"],"names":["React","Yup","Formik","Field","Form","ErrorMessage","Link","FormDataHelper","GeneralServices","BehaviorSubject","logoImage","bannerImage","CLIENT_LOGIN","currentUserSubject","JSON","parse","localStorage","getItem","Login","props","email","password","object","shape","string","required","setStatus","setSubmitting","formData","append","postRequest","then","successResponse","user","data","setItem","stringify","next","from","location","state","pathname","history","push","error","errors","status","touched","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,eAAT,QAAgC,MAAhC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;;;AAGA,MAAMC,kBAAkB,GAAG,IAAIJ,eAAJ,CACvBK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADuB,CAA3B;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,sBAAO;AAAA,2BACH;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,6BACI;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAA,+BACI;AAAS,UAAA,KAAK,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,oCACI;AAAK,cAAA,GAAG,EAAC,yBAAT;AAAmC,cAAA,GAAG,EAAC,MAAvC;AAA8C,cAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,MAAD;AAEI,cAAA,aAAa,EAAE;AACXC,gBAAAA,KAAK,EAAE,sBADI;AAEXC,gBAAAA,QAAQ,EAAE;AAFC,eAFnB;AAMI,cAAA,gBAAgB,EAAEpB,GAAG,CAACqB,MAAJ,GAAaC,KAAb,CAAmB;AACjCH,gBAAAA,KAAK,EAAEnB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD0B;AAEjCJ,gBAAAA,QAAQ,EAAEpB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFuB,eAAnB,CANtB;AAUI,cAAA,QAAQ,EAAE,CACN;AAAEL,gBAAAA,KAAF;AAASC,gBAAAA;AAAT,eADM,EAEN;AAAEK,gBAAAA,SAAF;AAAaC,gBAAAA;AAAb,eAFM,KAGL;AACDD,gBAAAA,SAAS;AACT,oBAAIE,QAAQ,GAAGrB,cAAc,EAA7B;AACAqB,gBAAAA,QAAQ,CAACC,MAAT,CAAgB,eAAhB,EAAiCT,KAAjC;AACAQ,gBAAAA,QAAQ,CAACC,MAAT,CAAgB,UAAhB,EAA4BR,QAA5B;AAEAb,gBAAAA,eAAe,CAACsB,WAAhB,CAA4BF,QAA5B,EAAsChB,YAAtC,EAAoDmB,IAApD,CACKC,eAAD,IAAqB;AACjB,wBAAMC,IAAI,GAAGD,eAAe,CAACE,IAAhB,CAAqB,CAArB,CAAb;AACAlB,kBAAAA,YAAY,CAACmB,OAAb,CAAqB,aAArB,EAAoCrB,IAAI,CAACsB,SAAL,CAAeH,IAAf,CAApC;AACApB,kBAAAA,kBAAkB,CAACwB,IAAnB,CAAwBJ,IAAxB;AAEA,wBAAM;AAAEK,oBAAAA;AAAF,sBAAWnB,KAAK,CAACoB,QAAN,CAAeC,KAAf,IAAwB;AACrCF,oBAAAA,IAAI,EAAE;AAAEG,sBAAAA,QAAQ,EAAE;AAAZ;AAD+B,mBAAzC;AAGAtB,kBAAAA,KAAK,CAACuB,OAAN,CAAcC,IAAd,CAAmBL,IAAnB;AACH,iBAVL,EAWKM,KAAD,IAAW;AACPjB,kBAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,kBAAAA,SAAS,CAACkB,KAAD,CAAT;AACH,iBAdL;AAgBH,eAnCL;AAqCI,cAAA,MAAM,EAAE,CAAC;AAAEC,gBAAAA,MAAF;AAAUC,gBAAAA,MAAV;AAAkBC,gBAAAA,OAAlB;AAA2BC,gBAAAA;AAA3B,eAAD,kBACJ,QAAC,IAAD;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,2CACI;AAAO,sBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAC,OAAZ;AAAoB,oBAAA,EAAE,EAAC,OAAvB;AAA+B,oBAAA,IAAI,EAAC,MAApC;AAA2C,oBAAA,WAAW,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,YAAD;AACI,oBAAA,IAAI,EAAC,OADT;AAEI,oBAAA,SAAS,EAAC,KAFd;AAGI,oBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAYI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACI;AAAO,sBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAG,sBAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAKI,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAC,UAAZ;AAAuB,oBAAA,EAAE,EAAC,UAA1B;AAAqC,oBAAA,IAAI,EAAC,UAA1C;AAAqD,oBAAA,WAAW,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI,QAAC,YAAD;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,SAAS,EAAC,KAFd;AAGI,oBAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,eAwBI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBJ,eAyBI;AAAG,kBAAA,SAAS,EAAC,WAAb;AAAA,8EAAoD,QAAC,IAAD;AAAM,oBAAA,EAAE,EAAG,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAApD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAtCR;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAuEI;AAAG,cAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eA0EI;AAAK,YAAA,GAAG,EAAC,2BAAT;AAAqC,YAAA,GAAG,EAAC,MAAzC;AAAgD,YAAA,KAAK,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBA1EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAkFH,CAnFD;;KAAM9B,K;AAqFN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport * as Yup from \"yup\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport { FormDataHelper } from '../../jwt/_helpers/FormDataHelper';\nimport { GeneralServices } from \"../../jwt/_services/General.services\";\nimport { BehaviorSubject } from \"rxjs\";\n\nimport logoImage from \"../../assets/images/xotic-logo.png\";\nimport bannerImage from \"../../assets/images/login-Banner.png\";\nimport { CLIENT_LOGIN } from \"../../jwt/_services/axiousURL\";\n\n\nconst currentUserSubject = new BehaviorSubject(\n    JSON.parse(localStorage.getItem(\"currentUser\"))\n);\n\nconst Login = (props) => {\n    return <>\n        <div class=\"bodyClone\">\n            <main class=\"loginPage\">\n                <section class=\"loginBody\">\n                    <div class=\"loginForm\">\n                        <img src=\"./images/xotic-logo.png\" alt=\"logo\" class=\"logo\" />\n                        <h1>Good afternoon Log into Xotic Labs</h1>\n                        <Formik\n\n                            initialValues={{\n                                email: \"client@xoticlabs.com\",\n                                password: \"123\",\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string().required(\"Email is required\"),\n                                password: Yup.string().required(\"Password is required\"),\n                            })}\n                            onSubmit={(\n                                { email, password },\n                                { setStatus, setSubmitting }\n                            ) => {\n                                setStatus();\n                                var formData = FormDataHelper();\n                                formData.append('email_address', email);\n                                formData.append('password', password);\n\n                                GeneralServices.postRequest(formData, CLIENT_LOGIN).then(\n                                    (successResponse) => {\n                                        const user = successResponse.data[0];\n                                        localStorage.setItem(\"currentUser\", JSON.stringify(user));\n                                        currentUserSubject.next(user);\n\n                                        const { from } = props.location.state || {\n                                            from: { pathname: \"/\" },\n                                        };\n                                        props.history.push(from);\n                                    },\n                                    (error) => {\n                                        setSubmitting(false);\n                                        setStatus(error);\n                                    }\n                                );\n                            }}\n\n                            render={({ errors, status, touched, isSubmitting }) => (\n                                <Form>\n                                    <div className=\"inputFields\">\n                                        <div className=\"label\">\n                                            <label htmlFor=\"email\">Email address</label>\n                                        </div>\n                                        <Field name=\"email\" id=\"email\" type=\"text\" placeholder=\"Email\" />\n                                        <ErrorMessage\n                                            name=\"email\"\n                                            component=\"div\"\n                                            className=\"invalid-feedback\"\n                                        />\n                                    </div>\n                                    <div className=\"inputFields\">\n                                        <div className=\"label\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <a href=\"#\">Forgot your password?</a>\n                                        </div>\n                                        <Field name=\"password\" id=\"password\" type=\"password\" placeholder=\"Password\" />\n                                        <ErrorMessage\n                                            name=\"password\"\n                                            component=\"div\"\n                                            className=\"invalid-feedback\"\n                                        />\n                                    </div>\n                                    <button type=\"submit\" disabled={isSubmitting}>LOG IN</button>\n                                    <p className=\"ct-signUp\">Don’t have an account yet? <Link to={`/Signup`}>Sign Up</Link></p>\n\n                                </Form>\n                            )}\n                        />\n                        <p class=\"copyright\">Copyright © 2021 Xotic Labs</p>\n                    </div>\n                    <img src=\"./images/login-Banner.png\" alt=\"logo\" class=\"bg-img\" />\n                </section>\n            </main>\n        </div>\n    </>\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}