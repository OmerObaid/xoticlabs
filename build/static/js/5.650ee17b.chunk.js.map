{"version":3,"sources":["routes/AuthRoutes.js","layouts/BlankLayout.js","routes/index.js","redux/settings/Reducer.js","redux/headerSettings/Reducer.js","redux/Reducers.js","jwt/_helpers/History.js","routes/PrivateRoutes.js","App.js","redux/Store.js","jwt/_services/Authentication.service.js","redux/constants/index.js","jwt/_services/axiousURL.js","jwt/_services/axiosConfig.js","jwt/_helpers/FormDataHelper.js"],"names":["AuthRoutes","path","name","icon","component","lazy","BlankLayout","className","map","prop","key","redirect","from","to","pathTo","indexRoutes","INIT_STATE","activeDir","activeThemeLayout","activeTheme","activeSidebarType","activeLogoBg","activeNavbarBg","activeSidebarBg","activeSidebarPos","activeHeaderPos","activeLayout","activeBrandId","brandList","Reducers","combineReducers","settings","state","action","type","LOGO_BG","payload","NAVBAR_BG","SIDEBAR_BG","THEME","DIRECTION","SIDEBAR_POSITION","HEADER_POSITION","LAYOUT","SIDEBAR_TYPE","headerSettings","ACTIVE_BRAND","BRAND_LIST","History","createBrowserHistory","basename","PrivateRoute","Component","rest","render","props","AuthenticationService","currentUserValue","pathname","location","App","store","createStore","InitialState","composeWithDevTools","applyMiddleware","thunk","history","exact","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","login","username","password","bodyFormData","FormDataHelper","append","axios","method","url","CLIENT_LOGIN","data","headers","Headers","then","response","status","user","setItem","stringify","next","error","message","Promise","reject","logout","removeItem","currentUser","asObservable","value","BRANDS_LISTING","API_USERNAME","API_PASSWORD","instance","create","baseURL","FormData"],"mappings":"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","file":"static/js/5.650ee17b.chunk.js","sourcesContent":["import {lazy } from \"react\"\r\n// const Login2 = lazy(() => (import('../views/authentication/Login2')));\r\n// const Register = lazy(() => (import('../views/authentication/Register')));\r\n// const Register2 = lazy(() => (import('../views/authentication/Register2')));\r\n// const Lockscreen = lazy(() => (import('../views/authentication/LockScreen')));\r\n// const Recoverpwd = lazy(() => (import('../views/authentication/RecoverPwd')));\r\n// const Maintanance = lazy(() => (import('../views/authentication/Maintanance')));\r\nconst Login = lazy(() => (import(\"../views/authentication/Login\")));\r\n// const SignUp = lazy(() => (import(\"../views/authentication/SignUp\")));\r\n\r\nvar AuthRoutes = [\r\n    { path: '/authentication/Login', name: 'Login', icon: 'mdi mdi-account-key', component: Login },\r\n    // { path: '/Signup', name: 'Login', icon: 'mdi mdi-account-key', component: SignUp },\r\n    // { path: '/authentication/Signup', name: 'Singup', icon: 'mdi mdi-account-key', component: SignUp },\r\n    // { path: '/authentication/Login2', name: 'Login with Firebase', icon: 'mdi mdi-account-key', component: Login2 },\r\n    // { path: '/authentication/Register', name: 'Register', icon: 'mdi mdi-account-plus', component: Register },\r\n    // { path: '/authentication/Register2', name: 'Register with Firebase', icon: 'mdi mdi-account-plus', component: Register2 },\r\n    // { path: '/authentication/LockScreen', name: 'Lockscreen', icon: 'mdi mdi-account-off', component: Lockscreen },\r\n    // { path: '/authentication/RecoverPwd', name: 'Recover Password', icon: 'mdi mdi-account-convert', component: Recoverpwd },\r\n    // { path: '/authentication/Maintanance', name: 'Maintanance', icon: 'mdi mdi-pencil-box-outline', component: Maintanance }\r\n];\r\nexport default AuthRoutes; ","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AuthRoutes from \"../routes/AuthRoutes.js\";\r\n// import signup from '../views/authentication/SignUp'\r\n\r\nconst BlankLayout = () => {\r\n  return (\r\n    <div className=\"authentications\">\r\n      <Switch>\r\n        {AuthRoutes.map((prop, key) => {\r\n          if (prop.redirect)\r\n            return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\r\n          return (\r\n            <Route path={prop.path} component={prop.component} key={key} />\r\n          );\r\n        })}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default BlankLayout;\r\n","import { lazy } from \"react\";\r\nconst BlankLayout = lazy(() => import(\"../layouts/BlankLayout.js\"));\r\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout.js\"));\r\nvar indexRoutes = [\r\n  // { path: \"/Login\", name: \"Login\", component: BlankLayout },\r\n  { path: \"/authentication\", name: \"Athentication\", component: BlankLayout },\r\n  { path: \"/\", name: \"Brands\", component: FullLayout },\r\n];\r\n\r\nexport default indexRoutes;\r\n","import {\r\n  LOGO_BG,\r\n  NAVBAR_BG,\r\n  SIDEBAR_BG,\r\n  THEME,\r\n  DIRECTION,\r\n  SIDEBAR_POSITION,\r\n  HEADER_POSITION,\r\n  LAYOUT,\r\n  SIDEBAR_TYPE,\r\n} from \"../constants/\";\r\n\r\nconst INIT_STATE = {\r\n  activeDir: \"ltr\",\r\n  activeThemeLayout: \"vertical\",\r\n  activeTheme: \"light\",\r\n  activeSidebarType: \"full\",\r\n  activeLogoBg: \"skin6\",\r\n  activeNavbarBg: \"skin6\",\r\n  activeSidebarBg: \"skin5\",\r\n  activeSidebarPos: \"fixed\",\r\n  activeHeaderPos: \"fixed\",\r\n  activeLayout: \"full\",\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGO_BG:\r\n      return {\r\n        ...state,\r\n        activeLogoBg: action.payload,\r\n      };\r\n    case NAVBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeNavbarBg: action.payload,\r\n      };\r\n    case SIDEBAR_BG:\r\n      return {\r\n        ...state,\r\n        activeSidebarBg: action.payload,\r\n      };\r\n    case THEME:\r\n      return {\r\n        ...state,\r\n        activeTheme: action.payload,\r\n      };\r\n    case DIRECTION:\r\n      return {\r\n        ...state,\r\n        activeDir: action.payload,\r\n      };\r\n    case SIDEBAR_POSITION:\r\n      return {\r\n        ...state,\r\n        activeSidebarPos: action.payload,\r\n      };\r\n    case HEADER_POSITION:\r\n      return {\r\n        ...state,\r\n        activeHeaderPos: action.payload,\r\n      };\r\n    case LAYOUT:\r\n      return {\r\n        ...state,\r\n        activeLayout: action.payload,\r\n      };\r\n    case SIDEBAR_TYPE:\r\n      return {\r\n        ...state,\r\n        activeSidebarType: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\nimport { ACTIVE_BRAND, BRAND_LIST } from \"../constants\";\n\nconst INIT_STATE = {\n    activeBrandId: '0',\n    brandList: [],\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case ACTIVE_BRAND:\n            return {\n                ...state,\n                activeBrandId: action.payload,\n            };\n        case BRAND_LIST:\n            return {\n                ...state,\n                brandList: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\r\nimport settings from \"./settings/Reducer\";\r\nimport headerSettings from \"./headerSettings/Reducer\"\r\n// import chatReducer from \"./chats/Reducer\";\r\n// import notesReducer from \"./notes/Reducer\";\r\n// import contactReducer from \"./contacts/\";\r\n// import emailReducer from \"./email/\";\r\n// import maintodoReducer from \"./todos/Todos\";\r\n// import todoReducer from \"./todos/\";\r\n\r\nconst Reducers = combineReducers({\r\n  settings,\r\n  headerSettings,\r\n});\r\n\r\nexport default Reducers;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const History = createBrowserHistory({ basename: \"/\" });\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthenticationService } from \"../jwt/_services\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const currentUser = AuthenticationService.currentUserValue;\r\n      if (!currentUser) {\r\n        // not logged in so redirect to login page with the return url\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/authentication/Login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        );\r\n      }\r\n\r\n      // authorised so return component\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\nimport indexRoutes from \"./routes/\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux/Store\";\nimport { History } from \"./jwt/_helpers\";\nimport { PrivateRoute } from \"./routes/PrivateRoutes\";\nimport BlankLayout from \"./layouts/BlankLayout\";\n\nconst App = () => {\n  return (\n    <Provider store={configureStore()}>\n      <Router history={History}>\n        <Switch>\n          <Route exact path=\"/authentication/Login\" component={BlankLayout} />;\n          {indexRoutes.map((prop, key) => {\n            return (\n              <PrivateRoute\n                path={prop.path}\n                key={key}\n                component={prop.component}\n              />\n            );\n          })}\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\nexport default App;\n\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport Reducers from \"./Reducers\";\r\n\r\nexport function configureStore(InitialState) {\r\n  const Store = createStore(\r\n    Reducers,\r\n    InitialState,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  );\r\n  return Store;\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { API_PASSWORD, API_USERNAME, CLIENT_LOGIN } from \"./axiousURL\";\r\nimport axios from \"./axiosConfig\";\r\nimport { FormDataHelper } from \"../_helpers/FormDataHelper\";\r\n\r\nconst currentUserSubject = new BehaviorSubject(\r\n\tJSON.parse(localStorage.getItem(\"currentUser\"))\r\n);\r\n\r\nexport const AuthenticationService = {\r\n\tlogin,\r\n\tlogout,\r\n\tcurrentUser: currentUserSubject.asObservable(),\r\n\tget currentUserValue() {\r\n\t\treturn currentUserSubject.value;\r\n\t},\r\n};\r\n\r\nfunction login(username, password) {\r\n\r\n\tvar bodyFormData = FormDataHelper();\r\n\tbodyFormData.append(\"email_address\", username);\r\n\tbodyFormData.append(\"password\", password);\r\n\r\n\treturn axios({\r\n\t\tmethod: \"post\",\r\n\t\turl: CLIENT_LOGIN,\r\n\t\tdata: bodyFormData,\r\n\t\theaders: new Headers(),\r\n\t\tredirect: 'follow'\r\n\t}).then(function (response) {\r\n\t\tif (response.data.status === 200) {\r\n\t\t\tconst user = response.data.data[0];\r\n\t\t\tlocalStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n\t\t\tcurrentUserSubject.next(user);\r\n\t\t\treturn user;\r\n\t\t} else {\r\n\t\t\tconst error = response.data.message;\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t});/*.catch(function (catchError) {\r\n\t\tconsole.log('catch error', catchError);\r\n\t\treturn Promise.reject(catchError.message);\r\n\t});*/\r\n}\r\n\r\n\r\nfunction logout() {\r\n\t// remove user from local storage to log user out\r\n\tlocalStorage.removeItem(\"currentUser\");\r\n\tcurrentUserSubject.next(null);\r\n}\r\n","// SETTINGS CONSTANTS\r\nexport const LOGO_BG = \"LOGO_BG\";\r\nexport const NAVBAR_BG = \"NAVBAR_BG\";\r\nexport const SIDEBAR_BG = \"SIDEBAR_BG\";\r\nexport const THEME = \"THEME\";\r\nexport const DIRECTION = \"DIRECTION\";\r\nexport const SIDEBAR_POSITION = \"SIDEBAR_POSITION\";\r\nexport const HEADER_POSITION = \"HEADER_POSITION\";\r\nexport const LAYOUT = \"LAYOUT\";\r\nexport const SIDEBAR_TYPE = \"SIDEBAR_TYPE\";\r\n\r\n// CHAT CONSTANTS\r\nexport const FETCH_CHAT_SUCCESS = \"FETCH_CHAT_SUCCESS\";\r\nexport const SELECTED_CHAT = \"SELECTED_CHAT\";\r\nexport const SEARCH_USER = \"SEARCH_USER\";\r\nexport const MSG_SUBMIT = \"MSG_SUBMIT\";\r\n\r\n// TODO CONSTANTS\r\nexport const FETCH_TODO_REQUEST = \"FETCH_TODO_REQUEST\";\r\nexport const FETCH_TODO_SUCCESS = \"FETCH_TODO_SUCCESS\";\r\nexport const FETCH_TODO_FAILURE = \"FETCH_TODO_FAILURE\";\r\nexport const TOGGLE_STARRED_TODO = \"TOGGLE_STARRED_TODO\";\r\nexport const SET_VISIBILITY_FILTER_TODO = \"SET_VISIBILITY_FILTER_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const TODO_DETAILS = \"TODO_DETAILS\";\r\nexport const FILTER_TODO = \"FILTER_TODO\";\r\nexport const COMPLETE_TODO = \"COMPLETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\n\r\n// NOTES CONSTANTS\r\n\r\nexport const SELECTED_NOTES = \"SELECTED_NOTES\";\r\nexport const SEARCH_NOTES = \"SEARCH_NOTES\";\r\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\n\r\n// CONTACT CONSTANTS\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const CONTACT_DETAILS = \"CONTACT_DETAILS\";\r\nexport const EDIT_CONTACT = \"EDIT_CONTACT\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\nexport const FILTER_CONTACT = \"FILTER_CONTACT\";\r\nexport const TOGGLE_STARRED_CONTACT = \"TOGGLE_STARRED_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\n\r\n// EMAIL CONSTANTS\r\nexport const STAR_EMAIL = \"STAR_EMAIL\";\r\nexport const IMPORTANT_EMAIL = \"IMPORTANT_EMAIL\";\r\nexport const OPEN_EMAIL = \"OPEN_EMAIL\";\r\nexport const TRASH_EMAIL = \"TRASH_EMAIL\";\r\nexport const ASSIGN_FOLDER = \"ASSIGN_FOLDER\";\r\nexport const ASSIGN_LABEL = \"ASSIGN_LABEL\";\r\nexport const SET_SELECTED_EMAIL = \"SET_SELECTED_EMAIL\";\r\nexport const FILTER_EMAIL = \"FILTER_EMAIL\";\r\nexport const SET_EMAIL_VISIBILITY_FILTER = \"SET_EMAIL_VISIBILITY_FILTER\";\r\n\r\n// HEADER SETTINGS CONSTANTS\r\n\r\nexport const ACTIVE_BRAND = \"ACTIVE_BRAND\";\r\nexport const BRAND_LIST = \"BRAND_LIST\";","//Authentication URL\nexport const CLIENT_LOGIN = 'client_login';\n\n//BRANDS URL\nexport const BRANDS_LISTING = 'list_brands';\n\n// API CONSTANTS\nexport const API_USERNAME = \"43541965248c40cb5adb1761b8302dc5e1107b23\";\nexport const API_PASSWORD = \"4c39e469d638981e241e12723b3a529023ade91b\";\n\n","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://demo.conviersolutions.com/xoticlabs_apis/api/'\n});\n\nexport default instance;","import { API_PASSWORD, API_USERNAME } from \"../_services/axiousURL\";\n\nexport function FormDataHelper() {\n\n    var bodyFormData = new FormData();\n    bodyFormData.append(\n        'api_username', API_USERNAME\n    );\n    bodyFormData.append(\n        'api_password', API_PASSWORD\n    );\n\n    return bodyFormData;\n    \n}"],"sourceRoot":""}